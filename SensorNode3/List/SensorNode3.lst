
AVRASM ver. 2.1.30  C:\cvavr2\mycode\SensorNode3\List\SensorNode3.asm Sun Dec 04 20:43:56 2016

C:\cvavr2\mycode\SensorNode3\List\SensorNode3.asm(1057): warning: Register r3 already defined by the .DEF directive
C:\cvavr2\mycode\SensorNode3\List\SensorNode3.asm(1058): warning: Register r5 already defined by the .DEF directive
C:\cvavr2\mycode\SensorNode3\List\SensorNode3.asm(1059): warning: Register r7 already defined by the .DEF directive
C:\cvavr2\mycode\SensorNode3\List\SensorNode3.asm(1060): warning: Register r10 already defined by the .DEF directive
C:\cvavr2\mycode\SensorNode3\List\SensorNode3.asm(1061): warning: Register r9 already defined by the .DEF directive
C:\cvavr2\mycode\SensorNode3\List\SensorNode3.asm(1062): warning: Register r12 already defined by the .DEF directive
C:\cvavr2\mycode\SensorNode3\List\SensorNode3.asm(1063): warning: Register r11 already defined by the .DEF directive
C:\cvavr2\mycode\SensorNode3\List\SensorNode3.asm(1064): warning: Register r14 already defined by the .DEF directive
C:\cvavr2\mycode\SensorNode3\List\SensorNode3.asm(1065): warning: Register r13 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.04.4a Advanced
                 ;(C) Copyright 1998-2009 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega2560
                 ;Program type             : Application
                 ;Clock frequency          : 16.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Speed
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 2048 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;global 'const' stored in FLASH: No
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8192
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _dustconcentration=R3
                 	.DEF _voltage3k=R5
                 	.DEF _voltage5k=R7
                 	.DEF _rx_wr_index0=R10
                 	.DEF _rx_rd_index0=R9
                 	.DEF _rx_counter0=R12
                 	.DEF _rx_wr_index1=R11
                 	.DEF _rx_rd_index1=R14
                 	.DEF _rx_counter1=R13
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;INTERRUPT VECTORS
000000 940c 00fe 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 01af 	JMP  _timer0_ovf_isr
000030 940c 0000 	JMP  0x00
000032 940c 013c 	JMP  _usart0_rx_isr
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 0000 	JMP  0x00
000048 940c 015a 	JMP  _usart1_rx_isr
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 0000 	JMP  0x00
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 017e 	JMP  _usart2_rx_isr
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 0000 	JMP  0x00
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _0x3:
000072 0000
000073 3fc0      	.DB  0x0,0x0,0xC0,0x3F
                 _0x62:
000074 0000
000075 0104      	.DB  0x0,0x0,0x4,0x1
                 _0x0:
000076 503a
000077 2500
000078 2563
000079 2563      	.DB  0x3A,0x50,0x0,0x25,0x63,0x25,0x63,0x25
00007a 5463
00007b 2b25
00007c 3430
00007d 312e      	.DB  0x63,0x54,0x25,0x2B,0x30,0x34,0x2E,0x31
00007e 4866
00007f 3025
000080 2e34
000081 6631      	.DB  0x66,0x48,0x25,0x30,0x34,0x2E,0x31,0x66
000082 5633
000083 3025
000084 7533
000085 2549      	.DB  0x33,0x56,0x25,0x30,0x33,0x75,0x49,0x25
000086 3330
000087 312e
000088 3566
000089 2556      	.DB  0x30,0x33,0x2E,0x31,0x66,0x35,0x56,0x25
00008a 3330
00008b 4975
00008c 3025
00008d 2e33      	.DB  0x30,0x33,0x75,0x49,0x25,0x30,0x33,0x2E
00008e 6631
00008f 2544
000090 3330
000091 2575      	.DB  0x31,0x66,0x44,0x25,0x30,0x33,0x75,0x25
000092 2563
000093 2563
000094 0063
000095 4f3a      	.DB  0x63,0x25,0x63,0x25,0x63,0x0,0x3A,0x4F
000096 334e
000097 004b
000098 4f3a
000099 354e      	.DB  0x4E,0x33,0x4B,0x0,0x3A,0x4F,0x4E,0x35
00009a 004b
00009b 4f3a
00009c 4646
00009d 4b33      	.DB  0x4B,0x0,0x3A,0x4F,0x46,0x46,0x33,0x4B
00009e 3a00
00009f 464f
0000a0 3546
0000a1 004b      	.DB  0x0,0x3A,0x4F,0x46,0x46,0x35,0x4B,0x0
0000a2 543a
0000a3 0048
0000a4 6325
0000a5 6325      	.DB  0x3A,0x54,0x48,0x0,0x25,0x63,0x25,0x63
0000a6 6325
0000a7 2554
0000a8 302b
0000a9 2e34      	.DB  0x25,0x63,0x54,0x25,0x2B,0x30,0x34,0x2E
0000aa 6631
0000ab 2548
0000ac 3430
0000ad 312e      	.DB  0x31,0x66,0x48,0x25,0x30,0x34,0x2E,0x31
0000ae 2566
0000af 2563
0000b0 2563
0000b1 0063      	.DB  0x66,0x25,0x63,0x25,0x63,0x25,0x63,0x0
0000b2 563a
0000b3 0049
0000b4 6325
0000b5 6325      	.DB  0x3A,0x56,0x49,0x0,0x25,0x63,0x25,0x63
0000b6 6325
0000b7 5633
0000b8 3025
0000b9 7533      	.DB  0x25,0x63,0x33,0x56,0x25,0x30,0x33,0x75
0000ba 2549
0000bb 3330
0000bc 312e
0000bd 3566      	.DB  0x49,0x25,0x30,0x33,0x2E,0x31,0x66,0x35
0000be 2556
0000bf 3330
0000c0 4975
0000c1 3025      	.DB  0x56,0x25,0x30,0x33,0x75,0x49,0x25,0x30
0000c2 2e33
0000c3 6631
0000c4 6325
0000c5 6325      	.DB  0x33,0x2E,0x31,0x66,0x25,0x63,0x25,0x63
0000c6 6325
0000c7 3a00
0000c8 0044
0000c9 6325      	.DB  0x25,0x63,0x0,0x3A,0x44,0x0,0x25,0x63
0000ca 6325
0000cb 6325
0000cc 2544
0000cd 3330      	.DB  0x25,0x63,0x25,0x63,0x44,0x25,0x30,0x33
0000ce 2575
0000cf 2563
0000d0 2563
0000d1 0063      	.DB  0x75,0x25,0x63,0x25,0x63,0x25,0x63,0x0
0000d2 6325
0000d3 6325
0000d4 003a      	.DB  0x25,0x63,0x25,0x63,0x3A,0x0
                 _0x2000000:
0000d5 4e2d
0000d6 4e41
C:\cvavr2\mycode\SensorNode3\List\SensorNode3.asm(1159): warning: .cseg .db misalignment - padding zero byte
0000d7 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x204005F:
C:\cvavr2\mycode\SensorNode3\List\SensorNode3.asm(1161): warning: .cseg .db misalignment - padding zero byte
0000d8 0001      	.DB  0x1
                 _0x2040000:
0000d9 4e2d
0000da 4e41
C:\cvavr2\mycode\SensorNode3\List\SensorNode3.asm(1163): warning: .cseg .db misalignment - padding zero byte
0000db 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
0000dc 0004      	.DW  0x04
0000dd 0a39      	.DW  _current5k
0000de 00e4      	.DW  _0x3*2
                 
0000df 0003      	.DW  0x03
0000e0 0a00      	.DW  _0x46
0000e1 00ec      	.DW  _0x0*2
                 
0000e2 0006      	.DW  0x06
0000e3 0a03      	.DW  _0x46+3
0000e4 012a      	.DW  _0x0*2+62
                 
0000e5 0006      	.DW  0x06
0000e6 0a09      	.DW  _0x46+9
0000e7 0130      	.DW  _0x0*2+68
                 
0000e8 0007      	.DW  0x07
0000e9 0a0f      	.DW  _0x46+15
0000ea 0136      	.DW  _0x0*2+74
                 
0000eb 0007      	.DW  0x07
0000ec 0a16      	.DW  _0x46+22
0000ed 013d      	.DW  _0x0*2+81
                 
0000ee 0004      	.DW  0x04
0000ef 0a1d      	.DW  _0x46+29
0000f0 0144      	.DW  _0x0*2+88
                 
0000f1 0004      	.DW  0x04
0000f2 0a21      	.DW  _0x46+33
0000f3 0164      	.DW  _0x0*2+120
                 
0000f4 0003      	.DW  0x03
0000f5 0a25      	.DW  _0x46+37
0000f6 018f      	.DW  _0x0*2+163
                 
0000f7 0004      	.DW  0x04
0000f8 0005      	.DW  0x05
0000f9 00e8      	.DW  _0x62*2
                 
0000fa 0001      	.DW  0x01
0000fb 0b3f      	.DW  __seed_G102
0000fc 01b0      	.DW  _0x204005F*2
                 
                 _0xFFFFFFFF:
0000fd 0000      	.DW  0
                 
                 __RESET:
0000fe 94f8      	CLI
0000ff 27ee      	CLR  R30
000100 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000101 e0f1      	LDI  R31,1
000102 bff5      	OUT  MCUCR,R31
000103 bfe5      	OUT  MCUCR,R30
000104 93e0 0074 	STS  XMCRA,R30
000106 93e0 0075 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
000108 e1f8      	LDI  R31,0x18
000109 95a8      	WDR
00010a b7a4      	IN   R26,MCUSR
00010b 7fa7      	CBR  R26,8
00010c bfa4      	OUT  MCUSR,R26
00010d 93f0 0060 	STS  WDTCSR,R31
00010f 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
000111 e08d      	LDI  R24,(14-2)+1
000112 e0a2      	LDI  R26,2
000113 27bb      	CLR  R27
                 __CLEAR_REG:
000114 93ed      	ST   X+,R30
000115 958a      	DEC  R24
000116 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000117 e080      	LDI  R24,LOW(0x2000)
000118 e290      	LDI  R25,HIGH(0x2000)
000119 e0a0      	LDI  R26,LOW(0x200)
00011a e0b2      	LDI  R27,HIGH(0x200)
                 __CLEAR_SRAM:
00011b 93ed      	ST   X+,R30
00011c 9701      	SBIW R24,1
00011d f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00011e ebe8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00011f e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000120 9185      	LPM  R24,Z+
000121 9195      	LPM  R25,Z+
000122 9700      	SBIW R24,0
000123 f061      	BREQ __GLOBAL_INI_END
000124 91a5      	LPM  R26,Z+
000125 91b5      	LPM  R27,Z+
000126 9005      	LPM  R0,Z+
000127 9015      	LPM  R1,Z+
000128 01bf      	MOVW R22,R30
000129 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00012a 9005      	LPM  R0,Z+
00012b 920d      	ST   X+,R0
00012c 9701      	SBIW R24,1
00012d f7e1      	BRNE __GLOBAL_INI_LOOP
00012e 01fb      	MOVW R30,R22
00012f cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
000130 bf8b      	OUT  RAMPZ,R24
                 
000131 bf8c      	OUT  EIND,R24
                 
                 ;GPIOR0 INITIALIZATION
000132 e0e0      	LDI  R30,0x00
000133 bbee      	OUT  GPIOR0,R30
                 
                 ;STACK POINTER INITIALIZATION
000134 efef      	LDI  R30,LOW(0x21FF)
000135 bfed      	OUT  SPL,R30
000136 e2e1      	LDI  R30,HIGH(0x21FF)
000137 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000138 e0c0      	LDI  R28,LOW(0xA00)
000139 e0da      	LDI  R29,HIGH(0xA00)
                 
00013a 940c 04b9 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xA00
                 
                 	.CSEG
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;
                 ;#define TXB8 0
                 ;#define RXB8 1
                 ;#define UPE 2
                 ;#define DOR 3
                 ;#define FE 4
                 ;#define UDRE 5
                 ;#define RXC 7
                 ;#define FRAMING_ERROR (1<<FE)
                 ;#define PARITY_ERROR (1<<UPE)
                 ;#define DATA_OVERRUN (1<<DOR)
                 ;#define DATA_REGISTER_EMPTY (1<<UDRE)
                 ;#define RX_COMPLETE (1<<RXC)
                 ;#define STX 0x02
                 ;#define ETX 0x03
                 ;#define delimiter 0x3A
                 ;#define CR 0x0D
                 ;#define LF 0x0A
                 ;#define DEV_ID 0x3531  //the 16-bit ID for coordinator, taken from the least significant 16-bit of zigbee xbee 64-bit address
                 ;#define COORDID1 DEV_ID>>8
                 ;#define COORDID2 (char)DEV_ID
                 ;#define RX_BUFFER_SIZE0 100
                 ;#define RX_BUFFER_SIZE1 100
                 ;#define RX_BUFFER_SIZE2 50
                 ;#define USART0 0
                 ;#define USART1 1
                 ;#define USART2 2
                 ;#define ADC_VREF_TYPE 0x40
                 ;#define _ALTERNATE_GETCHAR_
                 ;#define _ALTERNATE_PUTCHAR_
                 ;
                 ;char dev_id_chk[5];
                 ;// arbitrary data
                 ;float temperature;
                 ;float humidity;
                 ;unsigned int dustconcentration;
                 ;float current3k=0;
                 ;float current5k=1.5;
                 
                 	.DSEG
                 ;unsigned int voltage3k=0;
                 ;unsigned int voltage5k=260;
                 ;
                 ;char rx_buffer0[RX_BUFFER_SIZE0],rx_buffer1[RX_BUFFER_SIZE1],rx_buffer2[RX_BUFFER_SIZE2];
                 ;unsigned char rx_wr_index0,rx_rd_index0,rx_counter0;
                 ;unsigned char rx_wr_index1,rx_rd_index1,rx_counter1;
                 ;unsigned char rx_wr_index2,rx_rd_index2,rx_counter2;
                 ;bit rx_buffer_overflow0,rx_buffer_overflow1,rx_buffer_overflow2;
                 ;unsigned char poutput;
                 ;volatile unsigned long milSecCounter;
                 ;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void)
                 ; 0000 003A {
                 
                 	.CSEG
                 _usart0_rx_isr:
00013c 93ea      	ST   -Y,R30
00013d 93fa      	ST   -Y,R31
00013e b7ef      	IN   R30,SREG
00013f 93ea      	ST   -Y,R30
                 ; 0000 003B     char status,data;
                 ; 0000 003C     status=UCSR0A;
000140 931a      	ST   -Y,R17
000141 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
000142 9110 00c0 	LDS  R17,192
                 ; 0000 003D     data=UDR0;
000144 9100 00c6 	LDS  R16,198
                 ; 0000 003E     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
000146 2fe1      	MOV  R30,R17
000147 71ec      	ANDI R30,LOW(0x1C)
000148 f481      	BRNE _0x4
                 ; 0000 003F     {
                 ; 0000 0040         rx_buffer0[rx_wr_index0]=data;
000149 2dea      	MOV  R30,R10
00014a e0f0      	LDI  R31,0
00014b 5ce3      	SUBI R30,LOW(-_rx_buffer0)
00014c 4ff5      	SBCI R31,HIGH(-_rx_buffer0)
00014d 8300      	ST   Z,R16
                 ; 0000 0041         if (++rx_wr_index0 == RX_BUFFER_SIZE0) rx_wr_index0=0;
00014e 94a3      	INC  R10
00014f e6e4      	LDI  R30,LOW(100)
000150 15ea      	CP   R30,R10
000151 f409      	BRNE _0x5
000152 24aa      	CLR  R10
                 ; 0000 0042         if (++rx_counter0 == RX_BUFFER_SIZE0)
                 _0x5:
000153 94c3      	INC  R12
000154 e6e4      	LDI  R30,LOW(100)
000155 15ec      	CP   R30,R12
000156 f411      	BRNE _0x6
                 ; 0000 0043         {
                 ; 0000 0044             rx_counter0=0;
000157 24cc      	CLR  R12
                 ; 0000 0045             rx_buffer_overflow0=1;
000158 9af0      	SBI  0x1E,0
                 ; 0000 0046         };
                 _0x6:
                 ; 0000 0047     };
                 _0x4:
                 ; 0000 0048 }
000159 c01d      	RJMP _0x61
                 ;
                 ;// USART1 Receiver interrupt service routine
                 ;interrupt [USART1_RXC] void usart1_rx_isr(void)
                 ; 0000 004C {
                 _usart1_rx_isr:
00015a 93ea      	ST   -Y,R30
00015b 93fa      	ST   -Y,R31
00015c b7ef      	IN   R30,SREG
00015d 93ea      	ST   -Y,R30
                 ; 0000 004D     char status,data;
                 ; 0000 004E     status=UCSR1A;
00015e 931a      	ST   -Y,R17
00015f 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
000160 9110 00c8 	LDS  R17,200
                 ; 0000 004F     data=UDR1;
000162 9100 00ce 	LDS  R16,206
                 ; 0000 0050     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
000164 2fe1      	MOV  R30,R17
000165 71ec      	ANDI R30,LOW(0x1C)
000166 f481      	BRNE _0x9
                 ; 0000 0051         {
                 ; 0000 0052             rx_buffer1[rx_wr_index1]=data;
000167 2deb      	MOV  R30,R11
000168 e0f0      	LDI  R31,0
000169 55ef      	SUBI R30,LOW(-_rx_buffer1)
00016a 4ff5      	SBCI R31,HIGH(-_rx_buffer1)
00016b 8300      	ST   Z,R16
                 ; 0000 0053             if (++rx_wr_index1 == RX_BUFFER_SIZE1) rx_wr_index1=0;
00016c 94b3      	INC  R11
00016d e6e4      	LDI  R30,LOW(100)
00016e 15eb      	CP   R30,R11
00016f f409      	BRNE _0xA
000170 24bb      	CLR  R11
                 ; 0000 0054             if (++rx_counter1 == RX_BUFFER_SIZE1)
                 _0xA:
000171 94d3      	INC  R13
000172 e6e4      	LDI  R30,LOW(100)
000173 15ed      	CP   R30,R13
000174 f411      	BRNE _0xB
                 ; 0000 0055                 {
                 ; 0000 0056                     rx_counter1=0;
000175 24dd      	CLR  R13
                 ; 0000 0057                     rx_buffer_overflow1=1;
000176 9af1      	SBI  0x1E,1
                 ; 0000 0058                 };
                 _0xB:
                 ; 0000 0059         };
                 _0x9:
                 ; 0000 005A }
                 _0x61:
000177 9109      	LD   R16,Y+
000178 9119      	LD   R17,Y+
000179 91e9      	LD   R30,Y+
00017a bfef      	OUT  SREG,R30
00017b 91f9      	LD   R31,Y+
00017c 91e9      	LD   R30,Y+
00017d 9518      	RETI
                 ;
                 ;// USART2 Receiver interrupt service routine
                 ;interrupt [USART2_RXC] void usart2_rx_isr(void)
                 ; 0000 005E {
                 _usart2_rx_isr:
00017e 93aa      	ST   -Y,R26
00017f 93ea      	ST   -Y,R30
000180 93fa      	ST   -Y,R31
000181 b7ef      	IN   R30,SREG
000182 93ea      	ST   -Y,R30
                 ; 0000 005F     char status,data;
                 ; 0000 0060     status=UCSR2A;
000183 931a      	ST   -Y,R17
000184 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
000185 9110 00d0 	LDS  R17,208
                 ; 0000 0061     data=UDR2;
000187 9100 00d6 	LDS  R16,214
                 ; 0000 0062     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
000189 2fe1      	MOV  R30,R17
00018a 71ec      	ANDI R30,LOW(0x1C)
00018b f4d9      	BRNE _0xE
                 ; 0000 0063         {
                 ; 0000 0064             rx_buffer2[rx_wr_index2]=data;
00018c 91e0 0b37 	LDS  R30,_rx_wr_index2
00018e e0f0      	LDI  R31,0
00018f 5feb      	SUBI R30,LOW(-_rx_buffer2)
000190 4ff4      	SBCI R31,HIGH(-_rx_buffer2)
000191 8300      	ST   Z,R16
                 ; 0000 0065             if (++rx_wr_index2 == RX_BUFFER_SIZE2) rx_wr_index2=0;
000192 91a0 0b37 	LDS  R26,_rx_wr_index2
000194 5faf      	SUBI R26,-LOW(1)
000195 93a0 0b37 	STS  _rx_wr_index2,R26
000197 33a2      	CPI  R26,LOW(0x32)
000198 f419      	BRNE _0xF
000199 e0e0      	LDI  R30,LOW(0)
00019a 93e0 0b37 	STS  _rx_wr_index2,R30
                 ; 0000 0066             if (++rx_counter2 == RX_BUFFER_SIZE2)
                 _0xF:
00019c 91a0 0b39 	LDS  R26,_rx_counter2
00019e 5faf      	SUBI R26,-LOW(1)
00019f 93a0 0b39 	STS  _rx_counter2,R26
0001a1 33a2      	CPI  R26,LOW(0x32)
0001a2 f421      	BRNE _0x10
                 ; 0000 0067                 {
                 ; 0000 0068                     rx_counter2=0;
0001a3 e0e0      	LDI  R30,LOW(0)
0001a4 93e0 0b39 	STS  _rx_counter2,R30
                 ; 0000 0069                     rx_buffer_overflow2=1;
0001a6 9af2      	SBI  0x1E,2
                 ; 0000 006A                 };
                 _0x10:
                 ; 0000 006B         };
                 _0xE:
                 ; 0000 006C }
0001a7 9109      	LD   R16,Y+
0001a8 9119      	LD   R17,Y+
0001a9 91e9      	LD   R30,Y+
0001aa bfef      	OUT  SREG,R30
0001ab 91f9      	LD   R31,Y+
0001ac 91e9      	LD   R30,Y+
0001ad 91a9      	LD   R26,Y+
0001ae 9518      	RETI
                 ;
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void) // Timer 0 overflow interrupt service routine, called every 1.024 ms (250 kHz)
                 ; 0000 006F {
                 _timer0_ovf_isr:
0001af 936a      	ST   -Y,R22
0001b0 937a      	ST   -Y,R23
0001b1 93aa      	ST   -Y,R26
0001b2 93ba      	ST   -Y,R27
0001b3 93ea      	ST   -Y,R30
0001b4 93fa      	ST   -Y,R31
0001b5 b7ef      	IN   R30,SREG
0001b6 93ea      	ST   -Y,R30
                 ; 0000 0070     milSecCounter++;
0001b7 e3ab      	LDI  R26,LOW(_milSecCounter)
0001b8 e0bb      	LDI  R27,HIGH(_milSecCounter)
0001b9 940e 0f18 	CALL __GETD1P_INC
                +
0001bb 5fef     +SUBI R30 , LOW ( - 1 )
0001bc 4fff     +SBCI R31 , HIGH ( - 1 )
0001bd 4f6f     +SBCI R22 , BYTE3 ( - 1 )
0001be 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
0001bf 940e 0f1d 	CALL __PUTDP1_DEC
                 ; 0000 0071 }
0001c1 91e9      	LD   R30,Y+
0001c2 bfef      	OUT  SREG,R30
0001c3 91f9      	LD   R31,Y+
0001c4 91e9      	LD   R30,Y+
0001c5 91b9      	LD   R27,Y+
0001c6 91a9      	LD   R26,Y+
0001c7 9179      	LD   R23,Y+
0001c8 9169      	LD   R22,Y+
0001c9 9518      	RETI
                 ;
                 ;// Read the AD conversion result
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0000 0075 {
                 ; 0000 0076     ADMUX=(adc_input & 0x07) | (ADC_VREF_TYPE & 0xff);
                 ;	adc_input -> Y+0
                 ; 0000 0077     if (adc_input & 0x08) ADCSRB |= 0x08;
                 ; 0000 0078     else ADCSRB &= 0xf7;
                 ; 0000 0079     // Delay needed for the stabilization of the ADC input voltage
                 ; 0000 007A     delay_us(10);
                 ; 0000 007B     // Start the AD conversion
                 ; 0000 007C     ADCSRA|=0x40;
                 ; 0000 007D     // Wait for the AD conversion to complete
                 ; 0000 007E     while ((ADCSRA & 0x10)==0);
                 ; 0000 007F     ADCSRA|=0x10;
                 ; 0000 0080     return ADCW;
                 ; 0000 0081 }
                 ;
                 ;// Get a character from the USART Receiver buffer
                 ;char getchar(void)
                 ; 0000 0085 {
                 _getchar:
                 ; 0000 0086     char data;
                 ; 0000 0087     switch(poutput)
0001ca 931a      	ST   -Y,R17
                 ;	data -> R17
0001cb 91e0 0b3a 	LDS  R30,_poutput
0001cd e0f0      	LDI  R31,0
                 ; 0000 0088         {
                 ; 0000 0089             case USART0:
0001ce 9730      	SBIW R30,0
0001cf f489      	BRNE _0x1B
                 ; 0000 008A                 while (rx_counter0==0);
                 _0x1C:
0001d0 20cc      	TST  R12
0001d1 f3f1      	BREQ _0x1C
                 ; 0000 008B                 data=rx_buffer0[rx_rd_index0];
0001d2 2de9      	MOV  R30,R9
0001d3 e0f0      	LDI  R31,0
0001d4 5ce3      	SUBI R30,LOW(-_rx_buffer0)
0001d5 4ff5      	SBCI R31,HIGH(-_rx_buffer0)
0001d6 8110      	LD   R17,Z
                 ; 0000 008C                 if (++rx_rd_index0 == RX_BUFFER_SIZE0) rx_rd_index0=0;
0001d7 9493      	INC  R9
0001d8 e6e4      	LDI  R30,LOW(100)
0001d9 15e9      	CP   R30,R9
0001da f409      	BRNE _0x1F
0001db 2499      	CLR  R9
                 ; 0000 008D                 #asm("cli")
                 _0x1F:
0001dc 94f8      	cli
                 ; 0000 008E                 --rx_counter0;
0001dd 94ca      	DEC  R12
                 ; 0000 008F                 #asm("sei")
0001de 9478      	sei
                 ; 0000 0090                 return data;
0001df 2fe1      	MOV  R30,R17
0001e0 c035      	RJMP _0x20A0008
                 ; 0000 0091             break;
                 ; 0000 0092 
                 ; 0000 0093             case USART1:
                 _0x1B:
0001e1 30e1      	CPI  R30,LOW(0x1)
0001e2 e0a0      	LDI  R26,HIGH(0x1)
0001e3 07fa      	CPC  R31,R26
0001e4 f489      	BRNE _0x20
                 ; 0000 0094                 while (rx_counter1==0);
                 _0x21:
0001e5 20dd      	TST  R13
0001e6 f3f1      	BREQ _0x21
                 ; 0000 0095                 data=rx_buffer1[rx_rd_index1];
0001e7 2dee      	MOV  R30,R14
0001e8 e0f0      	LDI  R31,0
0001e9 55ef      	SUBI R30,LOW(-_rx_buffer1)
0001ea 4ff5      	SBCI R31,HIGH(-_rx_buffer1)
0001eb 8110      	LD   R17,Z
                 ; 0000 0096                 if (++rx_rd_index1 == RX_BUFFER_SIZE1) rx_rd_index1=0;
0001ec 94e3      	INC  R14
0001ed e6e4      	LDI  R30,LOW(100)
0001ee 15ee      	CP   R30,R14
0001ef f409      	BRNE _0x24
0001f0 24ee      	CLR  R14
                 ; 0000 0097                 #asm("cli")
                 _0x24:
0001f1 94f8      	cli
                 ; 0000 0098                 --rx_counter1;
0001f2 94da      	DEC  R13
                 ; 0000 0099                 #asm("sei")
0001f3 9478      	sei
                 ; 0000 009A                 return data;
0001f4 2fe1      	MOV  R30,R17
0001f5 c020      	RJMP _0x20A0008
                 ; 0000 009B             break;
                 ; 0000 009C 
                 ; 0000 009D             case USART2:
                 _0x20:
0001f6 30e2      	CPI  R30,LOW(0x2)
0001f7 e0a0      	LDI  R26,HIGH(0x2)
0001f8 07fa      	CPC  R31,R26
0001f9 f4e1      	BRNE _0x1A
                 ; 0000 009E                 while (rx_counter2==0);
                 _0x26:
0001fa 91e0 0b39 	LDS  R30,_rx_counter2
0001fc 30e0      	CPI  R30,0
0001fd f3e1      	BREQ _0x26
                 ; 0000 009F                 data=rx_buffer2[rx_rd_index2];
0001fe 91e0 0b38 	LDS  R30,_rx_rd_index2
000200 e0f0      	LDI  R31,0
000201 5feb      	SUBI R30,LOW(-_rx_buffer2)
000202 4ff4      	SBCI R31,HIGH(-_rx_buffer2)
000203 8110      	LD   R17,Z
                 ; 0000 00A0                 if (++rx_rd_index2 == RX_BUFFER_SIZE2) rx_rd_index2=0;
000204 91a0 0b38 	LDS  R26,_rx_rd_index2
000206 5faf      	SUBI R26,-LOW(1)
000207 93a0 0b38 	STS  _rx_rd_index2,R26
000209 33a2      	CPI  R26,LOW(0x32)
00020a f419      	BRNE _0x29
00020b e0e0      	LDI  R30,LOW(0)
00020c 93e0 0b38 	STS  _rx_rd_index2,R30
                 ; 0000 00A1                 #asm("cli")
                 _0x29:
00020e 94f8      	cli
                 ; 0000 00A2                 --rx_counter2;
00020f 91e0 0b39 	LDS  R30,_rx_counter2
000211 50e1      	SUBI R30,LOW(1)
000212 93e0 0b39 	STS  _rx_counter2,R30
                 ; 0000 00A3                 #asm("sei")
000214 9478      	sei
                 ; 0000 00A4                 return data;
000215 2fe1      	MOV  R30,R17
                 ; 0000 00A5             break;
                 ; 0000 00A6         }
                 _0x1A:
                 ; 0000 00A7 }
                 _0x20A0008:
000216 9119      	LD   R17,Y+
000217 9508      	RET
                 ;
                 ;// Write a character to the USART Transmitter
                 ;void putchar(char c)
                 ; 0000 00AB {
                 _putchar:
                 ; 0000 00AC     switch(poutput)
                 ;	c -> Y+0
000218 91e0 0b3a 	LDS  R30,_poutput
00021a e0f0      	LDI  R31,0
                 ; 0000 00AD         {
                 ; 0000 00AE             case USART0:
00021b 9730      	SBIW R30,0
00021c f441      	BRNE _0x2D
                 ; 0000 00AF                 while ((UCSR0A & DATA_REGISTER_EMPTY)==0);
                 _0x2E:
00021d 91e0 00c0 	LDS  R30,192
00021f 72e0      	ANDI R30,LOW(0x20)
000220 f3e1      	BREQ _0x2E
                 ; 0000 00B0                 UDR0=c;
000221 81e8      	LD   R30,Y
000222 93e0 00c6 	STS  198,R30
                 ; 0000 00B1             break;
000224 c017      	RJMP _0x2C
                 ; 0000 00B2 
                 ; 0000 00B3             case USART1:
                 _0x2D:
000225 30e1      	CPI  R30,LOW(0x1)
000226 e0a0      	LDI  R26,HIGH(0x1)
000227 07fa      	CPC  R31,R26
000228 f441      	BRNE _0x31
                 ; 0000 00B4                 while ((UCSR1A & DATA_REGISTER_EMPTY)==0);
                 _0x32:
000229 91e0 00c8 	LDS  R30,200
00022b 72e0      	ANDI R30,LOW(0x20)
00022c f3e1      	BREQ _0x32
                 ; 0000 00B5                 UDR1=c;
00022d 81e8      	LD   R30,Y
00022e 93e0 00ce 	STS  206,R30
                 ; 0000 00B6             break;
000230 c00b      	RJMP _0x2C
                 ; 0000 00B7 
                 ; 0000 00B8             case USART2:
                 _0x31:
000231 30e2      	CPI  R30,LOW(0x2)
000232 e0a0      	LDI  R26,HIGH(0x2)
000233 07fa      	CPC  R31,R26
000234 f439      	BRNE _0x2C
                 ; 0000 00B9                 while ((UCSR2A & DATA_REGISTER_EMPTY)==0);
                 _0x36:
000235 91e0 00d0 	LDS  R30,208
000237 72e0      	ANDI R30,LOW(0x20)
000238 f3e1      	BREQ _0x36
                 ; 0000 00BA                 UDR2=c;
000239 81e8      	LD   R30,Y
00023a 93e0 00d6 	STS  214,R30
                 ; 0000 00BB             break;
                 ; 0000 00BC         }
                 _0x2C:
                 ; 0000 00BD }
00023c 9621      	ADIW R28,1
00023d 9508      	RET
                 ;
                 ;unsigned int serialAvailable(void)
                 ; 0000 00C0 {
                 _serialAvailable:
                 ; 0000 00C1     switch(poutput)
00023e 91e0 0b3a 	LDS  R30,_poutput
000240 e0f0      	LDI  R31,0
                 ; 0000 00C2         {
                 ; 0000 00C3             case USART0:
000241 9730      	SBIW R30,0
000242 f411      	BRNE _0x3C
                 ; 0000 00C4                 return rx_counter0;
000243 2dec      	MOV  R30,R12
000244 c00c      	RJMP _0x20A0007
                 ; 0000 00C5             break;
                 ; 0000 00C6 
                 ; 0000 00C7             case USART1:
                 _0x3C:
000245 30e1      	CPI  R30,LOW(0x1)
000246 e0a0      	LDI  R26,HIGH(0x1)
000247 07fa      	CPC  R31,R26
000248 f411      	BRNE _0x3D
                 ; 0000 00C8                 return rx_counter1;
000249 2ded      	MOV  R30,R13
00024a c006      	RJMP _0x20A0007
                 ; 0000 00C9             break;
                 ; 0000 00CA 
                 ; 0000 00CB             case USART2:
                 _0x3D:
00024b 30e2      	CPI  R30,LOW(0x2)
00024c e0a0      	LDI  R26,HIGH(0x2)
00024d 07fa      	CPC  R31,R26
00024e f421      	BRNE _0x3B
                 ; 0000 00CC                 return rx_counter2;
00024f 91e0 0b39 	LDS  R30,_rx_counter2
                 _0x20A0007:
000251 e0f0      	LDI  R31,0
000252 9508      	RET
                 ; 0000 00CD             break;
                 ; 0000 00CE         }
                 _0x3B:
                 ; 0000 00CF }
000253 9508      	RET
                 ;
                 ;void get_request_and_send_response(void)
                 ; 0000 00D2 {
                 _get_request_and_send_response:
                 ; 0000 00D3     unsigned char array_index;
                 ; 0000 00D4     char received_byte;
                 ; 0000 00D5     char serial_command[10];
                 ; 0000 00D6     poutput=USART0;
000254 972a      	SBIW R28,10
000255 931a      	ST   -Y,R17
000256 930a      	ST   -Y,R16
                 ;	array_index -> R17
                 ;	received_byte -> R16
                 ;	serial_command -> Y+2
000257 e0e0      	LDI  R30,LOW(0)
000258 93e0 0b3a 	STS  _poutput,R30
                 ; 0000 00D7     if (serialAvailable()>5)
00025a dfe3      	RCALL _serialAvailable
00025b 9736      	SBIW R30,6
00025c f410      	BRSH PC+3
00025d 940c 0460 	JMP _0x3F
                 ; 0000 00D8         {
                 ; 0000 00D9             received_byte=getchar();
00025f df6a      	RCALL _getchar
000260 2f0e      	MOV  R16,R30
                 ; 0000 00DA             if (received_byte==STX)
000261 3002      	CPI  R16,2
000262 f011      	BREQ PC+3
000263 940c 0460 	JMP _0x40
                 ; 0000 00DB                 {
                 ; 0000 00DC                     array_index=0;
000265 e010      	LDI  R17,LOW(0)
                 ; 0000 00DD                     do
                 _0x42:
                 ; 0000 00DE                         {
                 ; 0000 00DF                             received_byte=getchar();
000266 df63      	RCALL _getchar
000267 2f0e      	MOV  R16,R30
                 ; 0000 00E0                             serial_command[array_index]=received_byte;
000268 2fe1      	MOV  R30,R17
000269 e0f0      	LDI  R31,0
00026a 01de      	MOVW R26,R28
00026b 9612      	ADIW R26,2
00026c 0fea      	ADD  R30,R26
00026d 1ffb      	ADC  R31,R27
00026e 8300      	ST   Z,R16
                 ; 0000 00E1                             ++array_index;
00026f 5f1f      	SUBI R17,-LOW(1)
                 ; 0000 00E2                         }
                 ; 0000 00E3                     while (received_byte!=ETX);
000270 3003      	CPI  R16,3
000271 f7a1      	BRNE _0x42
                 ; 0000 00E4                     if (strstr(serial_command,dev_id_chk)!=NULL)
000272 01fe      	MOVW R30,R28
000273 9632      	ADIW R30,2
000274 93fa      	ST   -Y,R31
000275 93ea      	ST   -Y,R30
000276 e2e8      	LDI  R30,LOW(_dev_id_chk)
000277 e0fa      	LDI  R31,HIGH(_dev_id_chk)
000278 93fa      	ST   -Y,R31
000279 93ea      	ST   -Y,R30
00027a 940e 0b3a 	CALL _strstr
00027c 9730      	SBIW R30,0
00027d f411      	BRNE PC+3
00027e 940c 0448 	JMP _0x44
                 ; 0000 00E5                         {
                 ; 0000 00E6                             if (strstr(serial_command,":P")!=NULL)  printf("%c%c%cT%+04.1fH%04.1f3V%03uI%03.1f5V%03uI%03.1fD%03u%c%c%c",STX,(char)(DEV_ID>>8),(char)(DEV_ID),temperature,humidity,voltage3k,current3k,voltage5k,current5k,dustco000280 01fe      ncentration,ETX,CR,LF);  // periodic data request
000281 9632      	MOVW R30,R28
000282 93fa      	ADIW R30,2
000283 93ea      	ST   -Y,R31
                +
000284 e0e0     +LDI R30 , LOW ( _0x46 + ( 0 ) )
000285 e0fa     +LDI R31 , HIGH ( _0x46 + ( 0 ) )
                 	__POINTW1MN _0x46,0
000286 93fa      	ST   -Y,R31
000287 93ea      	ST   -Y,R30
000288 940e 0b3a 	CALL _strstr
00028a 9730      	SBIW R30,0
00028b f411      	BRNE PC+3
00028c 940c 02f5 	JMP _0x45
                +
00028e eeef     +LDI R30 , LOW ( 2 * _0x0 + ( 3 ) )
00028f e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW1FN _0x0,3
000290 93fa      	ST   -Y,R31
000291 93ea      	ST   -Y,R30
                +
000292 e0e2     +LDI R30 , LOW ( 0x2 )
000293 e0f0     +LDI R31 , HIGH ( 0x2 )
000294 e060     +LDI R22 , BYTE3 ( 0x2 )
000295 e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
000296 940e 0f31 	CALL __PUTPARD1
                +
000298 e3e5     +LDI R30 , LOW ( 0x35 )
000299 e0f0     +LDI R31 , HIGH ( 0x35 )
00029a e060     +LDI R22 , BYTE3 ( 0x35 )
00029b e070     +LDI R23 , BYTE4 ( 0x35 )
                 	__GETD1N 0x35
00029c 940e 0f31 	CALL __PUTPARD1
                +
00029e e3e1     +LDI R30 , LOW ( 0x31 )
00029f e0f0     +LDI R31 , HIGH ( 0x31 )
0002a0 e060     +LDI R22 , BYTE3 ( 0x31 )
0002a1 e070     +LDI R23 , BYTE4 ( 0x31 )
                 	__GETD1N 0x31
0002a2 940e 0f31 	CALL __PUTPARD1
0002a4 91e0 0a2d 	LDS  R30,_temperature
0002a6 91f0 0a2e 	LDS  R31,_temperature+1
0002a8 9160 0a2f 	LDS  R22,_temperature+2
0002aa 9170 0a30 	LDS  R23,_temperature+3
0002ac 940e 0f31 	CALL __PUTPARD1
0002ae 91e0 0a31 	LDS  R30,_humidity
0002b0 91f0 0a32 	LDS  R31,_humidity+1
0002b2 9160 0a33 	LDS  R22,_humidity+2
0002b4 9170 0a34 	LDS  R23,_humidity+3
0002b6 940e 0f31 	CALL __PUTPARD1
                +
0002b8 2de5     +MOV R30 , R5
0002b9 2df6     +MOV R31 , R6
                 	__GETW1R 5,6
0002ba 2766      	CLR  R22
0002bb 2777      	CLR  R23
0002bc 940e 0f31 	CALL __PUTPARD1
0002be 91e0 0a35 	LDS  R30,_current3k
0002c0 91f0 0a36 	LDS  R31,_current3k+1
0002c2 9160 0a37 	LDS  R22,_current3k+2
0002c4 9170 0a38 	LDS  R23,_current3k+3
0002c6 940e 0f31 	CALL __PUTPARD1
                +
0002c8 2de7     +MOV R30 , R7
0002c9 2df8     +MOV R31 , R8
                 	__GETW1R 7,8
0002ca 2766      	CLR  R22
0002cb 2777      	CLR  R23
0002cc 940e 0f31 	CALL __PUTPARD1
0002ce 91e0 0a39 	LDS  R30,_current5k
0002d0 91f0 0a3a 	LDS  R31,_current5k+1
0002d2 9160 0a3b 	LDS  R22,_current5k+2
0002d4 9170 0a3c 	LDS  R23,_current5k+3
0002d6 940e 0f31 	CALL __PUTPARD1
                +
0002d8 2de3     +MOV R30 , R3
0002d9 2df4     +MOV R31 , R4
                 	__GETW1R 3,4
0002da 2766      	CLR  R22
0002db 2777      	CLR  R23
0002dc 940e 0f31 	CALL __PUTPARD1
                +
0002de e0e3     +LDI R30 , LOW ( 0x3 )
0002df e0f0     +LDI R31 , HIGH ( 0x3 )
0002e0 e060     +LDI R22 , BYTE3 ( 0x3 )
0002e1 e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
0002e2 940e 0f31 	CALL __PUTPARD1
                +
0002e4 e0ed     +LDI R30 , LOW ( 0xD )
0002e5 e0f0     +LDI R31 , HIGH ( 0xD )
0002e6 e060     +LDI R22 , BYTE3 ( 0xD )
0002e7 e070     +LDI R23 , BYTE4 ( 0xD )
                 	__GETD1N 0xD
0002e8 940e 0f31 	CALL __PUTPARD1
                +
0002ea e0ea     +LDI R30 , LOW ( 0xA )
0002eb e0f0     +LDI R31 , HIGH ( 0xA )
0002ec e060     +LDI R22 , BYTE3 ( 0xA )
0002ed e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
0002ee 940e 0f31 	CALL __PUTPARD1
0002f0 e384      	LDI  R24,52
0002f1 940e 0ae5 	CALL _printf
0002f3 96e6      	ADIW R28,54
                 ; 0000 00E7                             else if (strstr(serial_command,":ON3K")!=NULL)
0002f4 c152      	RJMP _0x47
                 _0x45:
0002f5 01fe      	MOVW R30,R28
0002f6 9632      	ADIW R30,2
0002f7 93fa      	ST   -Y,R31
0002f8 93ea      	ST   -Y,R30
                +
0002f9 e0e3     +LDI R30 , LOW ( _0x46 + ( 3 ) )
0002fa e0fa     +LDI R31 , HIGH ( _0x46 + ( 3 ) )
                 	__POINTW1MN _0x46,3
0002fb 93fa      	ST   -Y,R31
0002fc 93ea      	ST   -Y,R30
0002fd 940e 0b3a 	CALL _strstr
0002ff 9730      	SBIW R30,0
000300 f089      	BREQ _0x48
                 ; 0000 00E8                                 {
                 ; 0000 00E9                                     current3k=1.5;
                +
000301 e0e0     +LDI R30 , LOW ( 0x3FC00000 )
000302 e0f0     +LDI R31 , HIGH ( 0x3FC00000 )
000303 ec60     +LDI R22 , BYTE3 ( 0x3FC00000 )
000304 e37f     +LDI R23 , BYTE4 ( 0x3FC00000 )
                 	__GETD1N 0x3FC00000
000305 93e0 0a35 	STS  _current3k,R30
000307 93f0 0a36 	STS  _current3k+1,R31
000309 9360 0a37 	STS  _current3k+2,R22
00030b 9370 0a38 	STS  _current3k+3,R23
                 ; 0000 00EA                                     voltage3k=260;
00030d e0e4      	LDI  R30,LOW(260)
00030e e0f1      	LDI  R31,HIGH(260)
                +
00030f 2e5e     +MOV R5 , R30
000310 2e6f     +MOV R6 , R31
                 	__PUTW1R 5,6
                 ; 0000 00EB                                 }
                 ; 0000 00EC                             else if (strstr(serial_command,":ON5K")!=NULL)
000311 c135      	RJMP _0x49
                 _0x48:
000312 01fe      	MOVW R30,R28
000313 9632      	ADIW R30,2
000314 93fa      	ST   -Y,R31
000315 93ea      	ST   -Y,R30
                +
000316 e0e9     +LDI R30 , LOW ( _0x46 + ( 9 ) )
000317 e0fa     +LDI R31 , HIGH ( _0x46 + ( 9 ) )
                 	__POINTW1MN _0x46,9
000318 93fa      	ST   -Y,R31
000319 93ea      	ST   -Y,R30
00031a 940e 0b3a 	CALL _strstr
00031c 9730      	SBIW R30,0
00031d f089      	BREQ _0x4A
                 ; 0000 00ED                                 {
                 ; 0000 00EE                                     current5k=1.5;
                +
00031e e0e0     +LDI R30 , LOW ( 0x3FC00000 )
00031f e0f0     +LDI R31 , HIGH ( 0x3FC00000 )
000320 ec60     +LDI R22 , BYTE3 ( 0x3FC00000 )
000321 e37f     +LDI R23 , BYTE4 ( 0x3FC00000 )
                 	__GETD1N 0x3FC00000
000322 93e0 0a39 	STS  _current5k,R30
000324 93f0 0a3a 	STS  _current5k+1,R31
000326 9360 0a3b 	STS  _current5k+2,R22
000328 9370 0a3c 	STS  _current5k+3,R23
                 ; 0000 00EF                                     voltage5k=260;
00032a e0e4      	LDI  R30,LOW(260)
00032b e0f1      	LDI  R31,HIGH(260)
                +
00032c 2e7e     +MOV R7 , R30
00032d 2e8f     +MOV R8 , R31
                 	__PUTW1R 7,8
                 ; 0000 00F0                                 }
                 ; 0000 00F1                             else if (strstr(serial_command,":OFF3K")!=NULL)
00032e c118      	RJMP _0x4B
                 _0x4A:
00032f 01fe      	MOVW R30,R28
000330 9632      	ADIW R30,2
000331 93fa      	ST   -Y,R31
000332 93ea      	ST   -Y,R30
                +
000333 e0ef     +LDI R30 , LOW ( _0x46 + ( 15 ) )
000334 e0fa     +LDI R31 , HIGH ( _0x46 + ( 15 ) )
                 	__POINTW1MN _0x46,15
000335 93fa      	ST   -Y,R31
000336 93ea      	ST   -Y,R30
000337 940e 0b3a 	CALL _strstr
000339 9730      	SBIW R30,0
00033a f061      	BREQ _0x4C
                 ; 0000 00F2                                 {
                 ; 0000 00F3                                     current3k=0.0;
00033b e0e0      	LDI  R30,LOW(0)
00033c 93e0 0a35 	STS  _current3k,R30
00033e 93e0 0a36 	STS  _current3k+1,R30
000340 93e0 0a37 	STS  _current3k+2,R30
000342 93e0 0a38 	STS  _current3k+3,R30
                 ; 0000 00F4                                     voltage3k=0;
000344 2455      	CLR  R5
000345 2466      	CLR  R6
                 ; 0000 00F5                                 }
                 ; 0000 00F6                             else if (strstr(serial_command,":OFF5K")!=NULL)
000346 c100      	RJMP _0x4D
                 _0x4C:
000347 01fe      	MOVW R30,R28
000348 9632      	ADIW R30,2
000349 93fa      	ST   -Y,R31
00034a 93ea      	ST   -Y,R30
                +
00034b e1e6     +LDI R30 , LOW ( _0x46 + ( 22 ) )
00034c e0fa     +LDI R31 , HIGH ( _0x46 + ( 22 ) )
                 	__POINTW1MN _0x46,22
00034d 93fa      	ST   -Y,R31
00034e 93ea      	ST   -Y,R30
00034f 940e 0b3a 	CALL _strstr
000351 9730      	SBIW R30,0
000352 f061      	BREQ _0x4E
                 ; 0000 00F7                                 {
                 ; 0000 00F8                                     current5k=0.0;
000353 e0e0      	LDI  R30,LOW(0)
000354 93e0 0a39 	STS  _current5k,R30
000356 93e0 0a3a 	STS  _current5k+1,R30
000358 93e0 0a3b 	STS  _current5k+2,R30
00035a 93e0 0a3c 	STS  _current5k+3,R30
                 ; 0000 00F9                                     voltage5k=0;
00035c 2477      	CLR  R7
00035d 2488      	CLR  R8
                 ; 0000 00FA                                 }
                 ; 0000 00FB                             else if (strstr(serial_command,":TH")!=NULL) printf("%c%c%cT%+04.1fH%04.1f%c%c%c",STX,(char)(DEV_ID>>8),(char)(DEV_ID),temperature,humidity,ETX,CR,LF);
00035e c0e8      	RJMP _0x4F
                 _0x4E:
00035f 01fe      	MOVW R30,R28
000360 9632      	ADIW R30,2
000361 93fa      	ST   -Y,R31
000362 93ea      	ST   -Y,R30
                +
000363 e1ed     +LDI R30 , LOW ( _0x46 + ( 29 ) )
000364 e0fa     +LDI R31 , HIGH ( _0x46 + ( 29 ) )
                 	__POINTW1MN _0x46,29
000365 93fa      	ST   -Y,R31
000366 93ea      	ST   -Y,R30
000367 940e 0b3a 	CALL _strstr
000369 9730      	SBIW R30,0
00036a f411      	BRNE PC+3
00036b 940c 03ae 	JMP _0x50
                +
00036d e4e8     +LDI R30 , LOW ( 2 * _0x0 + ( 92 ) )
00036e e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 92 ) )
                 	__POINTW1FN _0x0,92
00036f 93fa      	ST   -Y,R31
000370 93ea      	ST   -Y,R30
                +
000371 e0e2     +LDI R30 , LOW ( 0x2 )
000372 e0f0     +LDI R31 , HIGH ( 0x2 )
000373 e060     +LDI R22 , BYTE3 ( 0x2 )
000374 e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
000375 940e 0f31 	CALL __PUTPARD1
                +
000377 e3e5     +LDI R30 , LOW ( 0x35 )
000378 e0f0     +LDI R31 , HIGH ( 0x35 )
000379 e060     +LDI R22 , BYTE3 ( 0x35 )
00037a e070     +LDI R23 , BYTE4 ( 0x35 )
                 	__GETD1N 0x35
00037b 940e 0f31 	CALL __PUTPARD1
                +
00037d e3e1     +LDI R30 , LOW ( 0x31 )
00037e e0f0     +LDI R31 , HIGH ( 0x31 )
00037f e060     +LDI R22 , BYTE3 ( 0x31 )
000380 e070     +LDI R23 , BYTE4 ( 0x31 )
                 	__GETD1N 0x31
000381 940e 0f31 	CALL __PUTPARD1
000383 91e0 0a2d 	LDS  R30,_temperature
000385 91f0 0a2e 	LDS  R31,_temperature+1
000387 9160 0a2f 	LDS  R22,_temperature+2
000389 9170 0a30 	LDS  R23,_temperature+3
00038b 940e 0f31 	CALL __PUTPARD1
00038d 91e0 0a31 	LDS  R30,_humidity
00038f 91f0 0a32 	LDS  R31,_humidity+1
000391 9160 0a33 	LDS  R22,_humidity+2
000393 9170 0a34 	LDS  R23,_humidity+3
000395 940e 0f31 	CALL __PUTPARD1
                +
000397 e0e3     +LDI R30 , LOW ( 0x3 )
000398 e0f0     +LDI R31 , HIGH ( 0x3 )
000399 e060     +LDI R22 , BYTE3 ( 0x3 )
00039a e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
00039b 940e 0f31 	CALL __PUTPARD1
                +
00039d e0ed     +LDI R30 , LOW ( 0xD )
00039e e0f0     +LDI R31 , HIGH ( 0xD )
00039f e060     +LDI R22 , BYTE3 ( 0xD )
0003a0 e070     +LDI R23 , BYTE4 ( 0xD )
                 	__GETD1N 0xD
0003a1 940e 0f31 	CALL __PUTPARD1
                +
0003a3 e0ea     +LDI R30 , LOW ( 0xA )
0003a4 e0f0     +LDI R31 , HIGH ( 0xA )
0003a5 e060     +LDI R22 , BYTE3 ( 0xA )
0003a6 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
0003a7 940e 0f31 	CALL __PUTPARD1
0003a9 e280      	LDI  R24,32
0003aa 940e 0ae5 	CALL _printf
0003ac 96a2      	ADIW R28,34
                 ; 0000 00FC                             else if (strstr(serial_command,":VI")!=NULL) printf("%c%c%c3V%03uI%03.1f5V%03uI%03.1f%c%c%c",STX,(char)(DEV_ID>>8),(char)(DEV_ID),voltage3k,current3k,voltage5k,current5k,ETX,CR,LF);
0003ad c099      	RJMP _0x51
                 _0x50:
0003ae 01fe      	MOVW R30,R28
0003af 9632      	ADIW R30,2
0003b0 93fa      	ST   -Y,R31
0003b1 93ea      	ST   -Y,R30
                +
0003b2 e2e1     +LDI R30 , LOW ( _0x46 + ( 33 ) )
0003b3 e0fa     +LDI R31 , HIGH ( _0x46 + ( 33 ) )
                 	__POINTW1MN _0x46,33
0003b4 93fa      	ST   -Y,R31
0003b5 93ea      	ST   -Y,R30
0003b6 940e 0b3a 	CALL _strstr
0003b8 9730      	SBIW R30,0
0003b9 f411      	BRNE PC+3
0003ba 940c 0409 	JMP _0x52
                +
0003bc e6e8     +LDI R30 , LOW ( 2 * _0x0 + ( 124 ) )
0003bd e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 124 ) )
                 	__POINTW1FN _0x0,124
0003be 93fa      	ST   -Y,R31
0003bf 93ea      	ST   -Y,R30
                +
0003c0 e0e2     +LDI R30 , LOW ( 0x2 )
0003c1 e0f0     +LDI R31 , HIGH ( 0x2 )
0003c2 e060     +LDI R22 , BYTE3 ( 0x2 )
0003c3 e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
0003c4 940e 0f31 	CALL __PUTPARD1
                +
0003c6 e3e5     +LDI R30 , LOW ( 0x35 )
0003c7 e0f0     +LDI R31 , HIGH ( 0x35 )
0003c8 e060     +LDI R22 , BYTE3 ( 0x35 )
0003c9 e070     +LDI R23 , BYTE4 ( 0x35 )
                 	__GETD1N 0x35
0003ca 940e 0f31 	CALL __PUTPARD1
                +
0003cc e3e1     +LDI R30 , LOW ( 0x31 )
0003cd e0f0     +LDI R31 , HIGH ( 0x31 )
0003ce e060     +LDI R22 , BYTE3 ( 0x31 )
0003cf e070     +LDI R23 , BYTE4 ( 0x31 )
                 	__GETD1N 0x31
0003d0 940e 0f31 	CALL __PUTPARD1
                +
0003d2 2de5     +MOV R30 , R5
0003d3 2df6     +MOV R31 , R6
                 	__GETW1R 5,6
0003d4 2766      	CLR  R22
0003d5 2777      	CLR  R23
0003d6 940e 0f31 	CALL __PUTPARD1
0003d8 91e0 0a35 	LDS  R30,_current3k
0003da 91f0 0a36 	LDS  R31,_current3k+1
0003dc 9160 0a37 	LDS  R22,_current3k+2
0003de 9170 0a38 	LDS  R23,_current3k+3
0003e0 940e 0f31 	CALL __PUTPARD1
                +
0003e2 2de7     +MOV R30 , R7
0003e3 2df8     +MOV R31 , R8
                 	__GETW1R 7,8
0003e4 2766      	CLR  R22
0003e5 2777      	CLR  R23
0003e6 940e 0f31 	CALL __PUTPARD1
0003e8 91e0 0a39 	LDS  R30,_current5k
0003ea 91f0 0a3a 	LDS  R31,_current5k+1
0003ec 9160 0a3b 	LDS  R22,_current5k+2
0003ee 9170 0a3c 	LDS  R23,_current5k+3
0003f0 940e 0f31 	CALL __PUTPARD1
                +
0003f2 e0e3     +LDI R30 , LOW ( 0x3 )
0003f3 e0f0     +LDI R31 , HIGH ( 0x3 )
0003f4 e060     +LDI R22 , BYTE3 ( 0x3 )
0003f5 e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
0003f6 940e 0f31 	CALL __PUTPARD1
                +
0003f8 e0ed     +LDI R30 , LOW ( 0xD )
0003f9 e0f0     +LDI R31 , HIGH ( 0xD )
0003fa e060     +LDI R22 , BYTE3 ( 0xD )
0003fb e070     +LDI R23 , BYTE4 ( 0xD )
                 	__GETD1N 0xD
0003fc 940e 0f31 	CALL __PUTPARD1
                +
0003fe e0ea     +LDI R30 , LOW ( 0xA )
0003ff e0f0     +LDI R31 , HIGH ( 0xA )
000400 e060     +LDI R22 , BYTE3 ( 0xA )
000401 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
000402 940e 0f31 	CALL __PUTPARD1
000404 e288      	LDI  R24,40
000405 940e 0ae5 	CALL _printf
000407 96aa      	ADIW R28,42
                 ; 0000 00FD                             else if (strstr(serial_command,":D")!=NULL) printf("%c%c%cD%03u%c%c%c",STX,(char)(DEV_ID>>8),(char)(DEV_ID),dustconcentration,ETX,CR,LF);
000408 c03e      	RJMP _0x53
                 _0x52:
000409 01fe      	MOVW R30,R28
00040a 9632      	ADIW R30,2
00040b 93fa      	ST   -Y,R31
00040c 93ea      	ST   -Y,R30
                +
00040d e2e5     +LDI R30 , LOW ( _0x46 + ( 37 ) )
00040e e0fa     +LDI R31 , HIGH ( _0x46 + ( 37 ) )
                 	__POINTW1MN _0x46,37
00040f 93fa      	ST   -Y,R31
000410 93ea      	ST   -Y,R30
000411 940e 0b3a 	CALL _strstr
000413 9730      	SBIW R30,0
000414 f191      	BREQ _0x54
                +
000415 e9e2     +LDI R30 , LOW ( 2 * _0x0 + ( 166 ) )
000416 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 166 ) )
                 	__POINTW1FN _0x0,166
000417 93fa      	ST   -Y,R31
000418 93ea      	ST   -Y,R30
                +
000419 e0e2     +LDI R30 , LOW ( 0x2 )
00041a e0f0     +LDI R31 , HIGH ( 0x2 )
00041b e060     +LDI R22 , BYTE3 ( 0x2 )
00041c e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
00041d 940e 0f31 	CALL __PUTPARD1
                +
00041f e3e5     +LDI R30 , LOW ( 0x35 )
000420 e0f0     +LDI R31 , HIGH ( 0x35 )
000421 e060     +LDI R22 , BYTE3 ( 0x35 )
000422 e070     +LDI R23 , BYTE4 ( 0x35 )
                 	__GETD1N 0x35
000423 940e 0f31 	CALL __PUTPARD1
                +
000425 e3e1     +LDI R30 , LOW ( 0x31 )
000426 e0f0     +LDI R31 , HIGH ( 0x31 )
000427 e060     +LDI R22 , BYTE3 ( 0x31 )
000428 e070     +LDI R23 , BYTE4 ( 0x31 )
                 	__GETD1N 0x31
000429 940e 0f31 	CALL __PUTPARD1
                +
00042b 2de3     +MOV R30 , R3
00042c 2df4     +MOV R31 , R4
                 	__GETW1R 3,4
00042d 2766      	CLR  R22
00042e 2777      	CLR  R23
00042f 940e 0f31 	CALL __PUTPARD1
                +
000431 e0e3     +LDI R30 , LOW ( 0x3 )
000432 e0f0     +LDI R31 , HIGH ( 0x3 )
000433 e060     +LDI R22 , BYTE3 ( 0x3 )
000434 e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
000435 940e 0f31 	CALL __PUTPARD1
                +
000437 e0ed     +LDI R30 , LOW ( 0xD )
000438 e0f0     +LDI R31 , HIGH ( 0xD )
000439 e060     +LDI R22 , BYTE3 ( 0xD )
00043a e070     +LDI R23 , BYTE4 ( 0xD )
                 	__GETD1N 0xD
00043b 940e 0f31 	CALL __PUTPARD1
                +
00043d e0ea     +LDI R30 , LOW ( 0xA )
00043e e0f0     +LDI R31 , HIGH ( 0xA )
00043f e060     +LDI R22 , BYTE3 ( 0xA )
000440 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
000441 940e 0f31 	CALL __PUTPARD1
000443 e18c      	LDI  R24,28
000444 940e 0ae5 	CALL _printf
000446 966e      	ADIW R28,30
                 ; 0000 00FE                             memset(serial_command,0,sizeof(serial_command));
                 _0x54:
                 _0x53:
                 _0x51:
                 _0x4F:
                 _0x4D:
                 _0x4B:
                 _0x49:
                 _0x47:
000447 c00c      	RJMP _0x60
                 ; 0000 00FF                         }
                 ; 0000 0100                     else if (strstr(serial_command,dev_id_chk)==NULL)
                 _0x44:
000448 01fe      	MOVW R30,R28
000449 9632      	ADIW R30,2
00044a 93fa      	ST   -Y,R31
00044b 93ea      	ST   -Y,R30
00044c e2e8      	LDI  R30,LOW(_dev_id_chk)
00044d e0fa      	LDI  R31,HIGH(_dev_id_chk)
00044e 93fa      	ST   -Y,R31
00044f 93ea      	ST   -Y,R30
000450 940e 0b3a 	CALL _strstr
000452 9730      	SBIW R30,0
000453 f461      	BRNE _0x56
                 ; 0000 0101                         {
                 ; 0000 0102                             memset(serial_command,0,sizeof(serial_command));
                 _0x60:
000454 01fe      	MOVW R30,R28
000455 9632      	ADIW R30,2
000456 93fa      	ST   -Y,R31
000457 93ea      	ST   -Y,R30
000458 e0e0      	LDI  R30,LOW(0)
000459 93ea      	ST   -Y,R30
00045a e0ea      	LDI  R30,LOW(10)
00045b e0f0      	LDI  R31,HIGH(10)
00045c 93fa      	ST   -Y,R31
00045d 93ea      	ST   -Y,R30
00045e 940e 0b0c 	CALL _memset
                 ; 0000 0103                         }
                 ; 0000 0104                 }
                 _0x56:
                 ; 0000 0105         }
                 _0x40:
                 ; 0000 0106 }
                 _0x3F:
000460 8119      	LDD  R17,Y+1
000461 8108      	LDD  R16,Y+0
000462 962c      	ADIW R28,12
000463 9508      	RET
                 
                 	.DSEG
                 _0x46:
000a00           	.BYTE 0x28
                 ;
                 ;void mcuInit(void)
                 ; 0000 0109 {
                 
                 	.CSEG
                 _mcuInit:
                 ; 0000 010A     // Crystal Oscillator division factor: 1
                 ; 0000 010B     #pragma optsize-
                 ; 0000 010C     CLKPR=0x80;
000464 e8e0      	LDI  R30,LOW(128)
000465 93e0 0061 	STS  97,R30
                 ; 0000 010D     CLKPR=0x00;
000467 e0e0      	LDI  R30,LOW(0)
000468 93e0 0061 	STS  97,R30
                 ; 0000 010E     #ifdef _OPTIMIZE_SIZE_
                 ; 0000 010F     #pragma optsize+
                 ; 0000 0110     #endif
                 ; 0000 0111 
                 ; 0000 0112     TCCR0A=0x00;
00046a bde4      	OUT  0x24,R30
                 ; 0000 0113     TCCR0B=0x03;
00046b e0e3      	LDI  R30,LOW(3)
00046c bde5      	OUT  0x25,R30
                 ; 0000 0114     TCNT0=0x00;
00046d e0e0      	LDI  R30,LOW(0)
00046e bde6      	OUT  0x26,R30
                 ; 0000 0115     OCR0A=0x00;
00046f bde7      	OUT  0x27,R30
                 ; 0000 0116     OCR0B=0x00;
000470 bde8      	OUT  0x28,R30
                 ; 0000 0117     TIMSK0=0x01;
000471 e0e1      	LDI  R30,LOW(1)
000472 93e0 006e 	STS  110,R30
                 ; 0000 0118 
                 ; 0000 0119     // USART0 initialization
                 ; 0000 011A     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 011B     // USART0 Receiver: On
                 ; 0000 011C     // USART0 Transmitter: On
                 ; 0000 011D     // USART0 Mode: Asynchronous
                 ; 0000 011E     // USART0 Baud Rate: 9600
                 ; 0000 011F     UCSR0A=0x00;
000474 e0e0      	LDI  R30,LOW(0)
000475 93e0 00c0 	STS  192,R30
                 ; 0000 0120     UCSR0B=0x98;
000477 e9e8      	LDI  R30,LOW(152)
000478 93e0 00c1 	STS  193,R30
                 ; 0000 0121     UCSR0C=0x06;
00047a e0e6      	LDI  R30,LOW(6)
00047b 93e0 00c2 	STS  194,R30
                 ; 0000 0122     UBRR0H=0x00;
00047d e0e0      	LDI  R30,LOW(0)
00047e 93e0 00c5 	STS  197,R30
                 ; 0000 0123     UBRR0L=0x67;
000480 e6e7      	LDI  R30,LOW(103)
000481 93e0 00c4 	STS  196,R30
                 ; 0000 0124 
                 ; 0000 0125     // USART1 initialization
                 ; 0000 0126     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0127     // USART1 Receiver: On
                 ; 0000 0128     // USART1 Transmitter: On
                 ; 0000 0129     // USART1 Mode: Asynchronous
                 ; 0000 012A     // USART1 Baud Rate: 9600
                 ; 0000 012B     UCSR1A=0x00;
000483 e0e0      	LDI  R30,LOW(0)
000484 93e0 00c8 	STS  200,R30
                 ; 0000 012C     UCSR1B=0x98;
000486 e9e8      	LDI  R30,LOW(152)
000487 93e0 00c9 	STS  201,R30
                 ; 0000 012D     UCSR1C=0x06;
000489 e0e6      	LDI  R30,LOW(6)
00048a 93e0 00ca 	STS  202,R30
                 ; 0000 012E     UBRR1H=0x00;
00048c e0e0      	LDI  R30,LOW(0)
00048d 93e0 00cd 	STS  205,R30
                 ; 0000 012F     UBRR1L=0x67;
00048f e6e7      	LDI  R30,LOW(103)
000490 93e0 00cc 	STS  204,R30
                 ; 0000 0130 
                 ; 0000 0131     // USART2 initialization
                 ; 0000 0132     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0133     // USART2 Receiver: On
                 ; 0000 0134     // USART2 Transmitter: On
                 ; 0000 0135     // USART2 Mode: Asynchronous
                 ; 0000 0136     // USART2 Baud Rate: 9600
                 ; 0000 0137     UCSR2A=0x00;
000492 e0e0      	LDI  R30,LOW(0)
000493 93e0 00d0 	STS  208,R30
                 ; 0000 0138     UCSR2B=0x98;
000495 e9e8      	LDI  R30,LOW(152)
000496 93e0 00d1 	STS  209,R30
                 ; 0000 0139     UCSR2C=0x06;
000498 e0e6      	LDI  R30,LOW(6)
000499 93e0 00d2 	STS  210,R30
                 ; 0000 013A     UBRR2H=0x00;
00049b e0e0      	LDI  R30,LOW(0)
00049c 93e0 00d5 	STS  213,R30
                 ; 0000 013B     UBRR2L=0x67;
00049e e6e7      	LDI  R30,LOW(103)
00049f 93e0 00d4 	STS  212,R30
                 ; 0000 013C 
                 ; 0000 013D     // Analog Comparator initialization
                 ; 0000 013E     // Analog Comparator: Off
                 ; 0000 013F     // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 0140     ACSR=0x80;
0004a1 e8e0      	LDI  R30,LOW(128)
0004a2 bfe0      	OUT  0x30,R30
                 ; 0000 0141     ADCSRB=0x00;
0004a3 e0e0      	LDI  R30,LOW(0)
0004a4 93e0 007b 	STS  123,R30
                 ; 0000 0142 
                 ; 0000 0143     // ADC initialization
                 ; 0000 0144     // ADC Clock frequency: 1000.000 kHz
                 ; 0000 0145     // ADC Voltage Reference: AVCC pin
                 ; 0000 0146     // ADC Auto Trigger Source: Free Running
                 ; 0000 0147     // Digital input buffers on ADC0: Off, ADC1: Off, ADC2: Off, ADC3: Off
                 ; 0000 0148     // ADC4: On, ADC5: On, ADC6: On, ADC7: On
                 ; 0000 0149     DIDR0=0x0F;
0004a6 e0ef      	LDI  R30,LOW(15)
0004a7 93e0 007e 	STS  126,R30
                 ; 0000 014A     // Digital input buffers on ADC8: On, ADC9: On, ADC10: On, ADC11: On
                 ; 0000 014B     // ADC12: On, ADC13: On, ADC14: On, ADC15: On
                 ; 0000 014C     DIDR2=0x00;
0004a9 e0e0      	LDI  R30,LOW(0)
0004aa 93e0 007d 	STS  125,R30
                 ; 0000 014D     ADMUX=ADC_VREF_TYPE & 0xff;
0004ac e4e0      	LDI  R30,LOW(64)
0004ad 93e0 007c 	STS  124,R30
                 ; 0000 014E     ADCSRA=0xA4;
0004af eae4      	LDI  R30,LOW(164)
0004b0 93e0 007a 	STS  122,R30
                 ; 0000 014F     ADCSRB&=0xF8;
0004b2 91e0 007b 	LDS  R30,123
0004b4 7fe8      	ANDI R30,LOW(0xF8)
0004b5 93e0 007b 	STS  123,R30
                 ; 0000 0150 
                 ; 0000 0151     #asm("sei")
0004b7 9478      	sei
                 ; 0000 0152 }
0004b8 9508      	RET
                 ;
                 ;void main(void)
                 ; 0000 0155 {
                 _main:
                 ; 0000 0156     unsigned long timecounter;
                 ; 0000 0157     int randval;
                 ; 0000 0158     mcuInit();
0004b9 9724      	SBIW R28,4
                 ;	timecounter -> Y+0
                 ;	randval -> R16,R17
0004ba dfa9      	RCALL _mcuInit
                 ; 0000 0159     sprintf(dev_id_chk,"%c%c:",DEV_ID>>8,DEV_ID);
0004bb e2e8      	LDI  R30,LOW(_dev_id_chk)
0004bc e0fa      	LDI  R31,HIGH(_dev_id_chk)
0004bd 93fa      	ST   -Y,R31
0004be 93ea      	ST   -Y,R30
                +
0004bf eae4     +LDI R30 , LOW ( 2 * _0x0 + ( 184 ) )
0004c0 e0f1     +LDI R31 , HIGH ( 2 * _0x0 + ( 184 ) )
                 	__POINTW1FN _0x0,184
0004c1 93fa      	ST   -Y,R31
0004c2 93ea      	ST   -Y,R30
                +
0004c3 e3e5     +LDI R30 , LOW ( 0x35 )
0004c4 e0f0     +LDI R31 , HIGH ( 0x35 )
0004c5 e060     +LDI R22 , BYTE3 ( 0x35 )
0004c6 e070     +LDI R23 , BYTE4 ( 0x35 )
                 	__GETD1N 0x35
0004c7 940e 0f31 	CALL __PUTPARD1
                +
0004c9 e3e1     +LDI R30 , LOW ( 0x3531 )
0004ca e3f5     +LDI R31 , HIGH ( 0x3531 )
0004cb e060     +LDI R22 , BYTE3 ( 0x3531 )
0004cc e070     +LDI R23 , BYTE4 ( 0x3531 )
                 	__GETD1N 0x3531
0004cd 940e 0f31 	CALL __PUTPARD1
0004cf e088      	LDI  R24,8
0004d0 940e 0aa7 	CALL _sprintf
0004d2 962c      	ADIW R28,12
                 ; 0000 015A     milSecCounter=0;
0004d3 e0e0      	LDI  R30,LOW(0)
0004d4 93e0 0b3b 	STS  _milSecCounter,R30
0004d6 93e0 0b3c 	STS  _milSecCounter+1,R30
0004d8 93e0 0b3d 	STS  _milSecCounter+2,R30
0004da 93e0 0b3e 	STS  _milSecCounter+3,R30
                 ; 0000 015B     timecounter=milSecCounter;
0004dc 91e0 0b3b 	LDS  R30,_milSecCounter
0004de 91f0 0b3c 	LDS  R31,_milSecCounter+1
0004e0 9160 0b3d 	LDS  R22,_milSecCounter+2
0004e2 9170 0b3e 	LDS  R23,_milSecCounter+3
0004e4 940e 0f2c 	CALL __PUTD1S0
                 ; 0000 015C     while ((milSecCounter-timecounter)<14999);
                 _0x57:
0004e6 940e 0f27 	CALL __GETD2S0
0004e8 91e0 0b3b 	LDS  R30,_milSecCounter
0004ea 91f0 0b3c 	LDS  R31,_milSecCounter+1
0004ec 9160 0b3d 	LDS  R22,_milSecCounter+2
0004ee 9170 0b3e 	LDS  R23,_milSecCounter+3
0004f0 940e 0e82 	CALL __SUBD12
                +
0004f2 39e7     +CPI R30 , LOW ( 0x3A97 )
0004f3 e3aa     +LDI R26 , HIGH ( 0x3A97 )
0004f4 07fa     +CPC R31 , R26
0004f5 e0a0     +LDI R26 , BYTE3 ( 0x3A97 )
0004f6 076a     +CPC R22 , R26
0004f7 e0a0     +LDI R26 , BYTE4 ( 0x3A97 )
0004f8 077a     +CPC R23 , R26
                 	__CPD1N 0x3A97
0004f9 f360      	BRLO _0x57
                 ; 0000 015D     while (1)
                 _0x5A:
                 ; 0000 015E         {
                 ; 0000 015F             if ((milSecCounter-timecounter)>=19999)
0004fa 940e 0f27 	CALL __GETD2S0
0004fc 91e0 0b3b 	LDS  R30,_milSecCounter
0004fe 91f0 0b3c 	LDS  R31,_milSecCounter+1
000500 9160 0b3d 	LDS  R22,_milSecCounter+2
000502 9170 0b3e 	LDS  R23,_milSecCounter+3
000504 940e 0e82 	CALL __SUBD12
                +
000506 31ef     +CPI R30 , LOW ( 0x4E1F )
000507 e4ae     +LDI R26 , HIGH ( 0x4E1F )
000508 07fa     +CPC R31 , R26
000509 e0a0     +LDI R26 , BYTE3 ( 0x4E1F )
00050a 076a     +CPC R22 , R26
00050b e0a0     +LDI R26 , BYTE4 ( 0x4E1F )
00050c 077a     +CPC R23 , R26
                 	__CPD1N 0x4E1F
00050d f410      	BRSH PC+3
00050e 940c 05eb 	JMP _0x5D
                 ; 0000 0160                 {
                 ; 0000 0161                     randval=rand();
000510 940e 0c72 	CALL _rand
000512 018f      	MOVW R16,R30
                 ; 0000 0162                     temperature=((0.6*randval)/32767.0)+6.7; // random from 6.7 to 7.3
000513 01f8      	MOVW R30,R16
000514 940e 0e95 	CALL __CWD1
000516 940e 0d41 	CALL __CDF1
                +
000518 e9aa     +LDI R26 , LOW ( 0x3F19999A )
000519 e9b9     +LDI R27 , HIGH ( 0x3F19999A )
00051a e189     +LDI R24 , BYTE3 ( 0x3F19999A )
00051b e39f     +LDI R25 , BYTE4 ( 0x3F19999A )
                 	__GETD2N 0x3F19999A
00051c 940e 0dcb 	CALL __MULF12
00051e 01df      	MOVW R26,R30
00051f 01cb      	MOVW R24,R22
                +
000520 e0e0     +LDI R30 , LOW ( 0x46FFFE00 )
000521 effe     +LDI R31 , HIGH ( 0x46FFFE00 )
000522 ef6f     +LDI R22 , BYTE3 ( 0x46FFFE00 )
000523 e476     +LDI R23 , BYTE4 ( 0x46FFFE00 )
                 	__GETD1N 0x46FFFE00
000524 940e 0e19 	CALL __DIVF21
                +
000526 e6a6     +LDI R26 , LOW ( 0x40D66666 )
000527 e6b6     +LDI R27 , HIGH ( 0x40D66666 )
000528 ed86     +LDI R24 , BYTE3 ( 0x40D66666 )
000529 e490     +LDI R25 , BYTE4 ( 0x40D66666 )
                 	__GETD2N 0x40D66666
00052a 940e 0d7b 	CALL __ADDF12
00052c 93e0 0a2d 	STS  _temperature,R30
00052e 93f0 0a2e 	STS  _temperature+1,R31
000530 9360 0a2f 	STS  _temperature+2,R22
000532 9370 0a30 	STS  _temperature+3,R23
                 ; 0000 0163                     humidity=5.0*randval/32767.0+55.0; //  random from 55 to 60
000534 01f8      	MOVW R30,R16
000535 940e 0e95 	CALL __CWD1
000537 940e 0d41 	CALL __CDF1
                +
000539 e0a0     +LDI R26 , LOW ( 0x40A00000 )
00053a e0b0     +LDI R27 , HIGH ( 0x40A00000 )
00053b ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
00053c e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
00053d 940e 0dcb 	CALL __MULF12
00053f 01df      	MOVW R26,R30
000540 01cb      	MOVW R24,R22
                +
000541 e0e0     +LDI R30 , LOW ( 0x46FFFE00 )
000542 effe     +LDI R31 , HIGH ( 0x46FFFE00 )
000543 ef6f     +LDI R22 , BYTE3 ( 0x46FFFE00 )
000544 e476     +LDI R23 , BYTE4 ( 0x46FFFE00 )
                 	__GETD1N 0x46FFFE00
000545 940e 0e19 	CALL __DIVF21
                +
000547 e0a0     +LDI R26 , LOW ( 0x425C0000 )
000548 e0b0     +LDI R27 , HIGH ( 0x425C0000 )
000549 e58c     +LDI R24 , BYTE3 ( 0x425C0000 )
00054a e492     +LDI R25 , BYTE4 ( 0x425C0000 )
                 	__GETD2N 0x425C0000
00054b 940e 0d7b 	CALL __ADDF12
00054d 93e0 0a31 	STS  _humidity,R30
00054f 93f0 0a32 	STS  _humidity+1,R31
000551 9360 0a33 	STS  _humidity+2,R22
000553 9370 0a34 	STS  _humidity+3,R23
                 ; 0000 0164                     dustconcentration=5.0*randval/32767.0+65.0; //  random from 65 to 70
000555 01f8      	MOVW R30,R16
000556 940e 0e95 	CALL __CWD1
000558 940e 0d41 	CALL __CDF1
                +
00055a e0a0     +LDI R26 , LOW ( 0x40A00000 )
00055b e0b0     +LDI R27 , HIGH ( 0x40A00000 )
00055c ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
00055d e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
00055e 940e 0dcb 	CALL __MULF12
000560 01df      	MOVW R26,R30
000561 01cb      	MOVW R24,R22
                +
000562 e0e0     +LDI R30 , LOW ( 0x46FFFE00 )
000563 effe     +LDI R31 , HIGH ( 0x46FFFE00 )
000564 ef6f     +LDI R22 , BYTE3 ( 0x46FFFE00 )
000565 e476     +LDI R23 , BYTE4 ( 0x46FFFE00 )
                 	__GETD1N 0x46FFFE00
000566 940e 0e19 	CALL __DIVF21
                +
000568 e0a0     +LDI R26 , LOW ( 0x42820000 )
000569 e0b0     +LDI R27 , HIGH ( 0x42820000 )
00056a e882     +LDI R24 , BYTE3 ( 0x42820000 )
00056b e492     +LDI R25 , BYTE4 ( 0x42820000 )
                 	__GETD2N 0x42820000
00056c 940e 0d7b 	CALL __ADDF12
00056e 940e 0d08 	CALL __CFD1U
                +
000570 2e3e     +MOV R3 , R30
000571 2e4f     +MOV R4 , R31
                 	__PUTW1R 3,4
                 ; 0000 0165                     printf("%c%c%cT%+04.1fH%04.1f3V%03uI%03.1f5V%03uI%03.1fD%03u%c%c%c",STX,(char)(DEV_ID>>8),(char)(DEV_ID),temperature,humidity,voltage3k,current3k,voltage5k,current5k,dustconcentration,ETX,CR,LF);
                +
000572 eeef     +LDI R30 , LOW ( 2 * _0x0 + ( 3 ) )
000573 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW1FN _0x0,3
000574 93fa      	ST   -Y,R31
000575 93ea      	ST   -Y,R30
                +
000576 e0e2     +LDI R30 , LOW ( 0x2 )
000577 e0f0     +LDI R31 , HIGH ( 0x2 )
000578 e060     +LDI R22 , BYTE3 ( 0x2 )
000579 e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
00057a 940e 0f31 	CALL __PUTPARD1
                +
00057c e3e5     +LDI R30 , LOW ( 0x35 )
00057d e0f0     +LDI R31 , HIGH ( 0x35 )
00057e e060     +LDI R22 , BYTE3 ( 0x35 )
00057f e070     +LDI R23 , BYTE4 ( 0x35 )
                 	__GETD1N 0x35
000580 940e 0f31 	CALL __PUTPARD1
                +
000582 e3e1     +LDI R30 , LOW ( 0x31 )
000583 e0f0     +LDI R31 , HIGH ( 0x31 )
000584 e060     +LDI R22 , BYTE3 ( 0x31 )
000585 e070     +LDI R23 , BYTE4 ( 0x31 )
                 	__GETD1N 0x31
000586 940e 0f31 	CALL __PUTPARD1
000588 91e0 0a2d 	LDS  R30,_temperature
00058a 91f0 0a2e 	LDS  R31,_temperature+1
00058c 9160 0a2f 	LDS  R22,_temperature+2
00058e 9170 0a30 	LDS  R23,_temperature+3
000590 940e 0f31 	CALL __PUTPARD1
000592 91e0 0a31 	LDS  R30,_humidity
000594 91f0 0a32 	LDS  R31,_humidity+1
000596 9160 0a33 	LDS  R22,_humidity+2
000598 9170 0a34 	LDS  R23,_humidity+3
00059a 940e 0f31 	CALL __PUTPARD1
                +
00059c 2de5     +MOV R30 , R5
00059d 2df6     +MOV R31 , R6
                 	__GETW1R 5,6
00059e 2766      	CLR  R22
00059f 2777      	CLR  R23
0005a0 940e 0f31 	CALL __PUTPARD1
0005a2 91e0 0a35 	LDS  R30,_current3k
0005a4 91f0 0a36 	LDS  R31,_current3k+1
0005a6 9160 0a37 	LDS  R22,_current3k+2
0005a8 9170 0a38 	LDS  R23,_current3k+3
0005aa 940e 0f31 	CALL __PUTPARD1
                +
0005ac 2de7     +MOV R30 , R7
0005ad 2df8     +MOV R31 , R8
                 	__GETW1R 7,8
0005ae 2766      	CLR  R22
0005af 2777      	CLR  R23
0005b0 940e 0f31 	CALL __PUTPARD1
0005b2 91e0 0a39 	LDS  R30,_current5k
0005b4 91f0 0a3a 	LDS  R31,_current5k+1
0005b6 9160 0a3b 	LDS  R22,_current5k+2
0005b8 9170 0a3c 	LDS  R23,_current5k+3
0005ba 940e 0f31 	CALL __PUTPARD1
                +
0005bc 2de3     +MOV R30 , R3
0005bd 2df4     +MOV R31 , R4
                 	__GETW1R 3,4
0005be 2766      	CLR  R22
0005bf 2777      	CLR  R23
0005c0 940e 0f31 	CALL __PUTPARD1
                +
0005c2 e0e3     +LDI R30 , LOW ( 0x3 )
0005c3 e0f0     +LDI R31 , HIGH ( 0x3 )
0005c4 e060     +LDI R22 , BYTE3 ( 0x3 )
0005c5 e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
0005c6 940e 0f31 	CALL __PUTPARD1
                +
0005c8 e0ed     +LDI R30 , LOW ( 0xD )
0005c9 e0f0     +LDI R31 , HIGH ( 0xD )
0005ca e060     +LDI R22 , BYTE3 ( 0xD )
0005cb e070     +LDI R23 , BYTE4 ( 0xD )
                 	__GETD1N 0xD
0005cc 940e 0f31 	CALL __PUTPARD1
                +
0005ce e0ea     +LDI R30 , LOW ( 0xA )
0005cf e0f0     +LDI R31 , HIGH ( 0xA )
0005d0 e060     +LDI R22 , BYTE3 ( 0xA )
0005d1 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
0005d2 940e 0f31 	CALL __PUTPARD1
0005d4 e384      	LDI  R24,52
0005d5 940e 0ae5 	CALL _printf
0005d7 96e6      	ADIW R28,54
                 ; 0000 0166                     milSecCounter=0;
0005d8 e0e0      	LDI  R30,LOW(0)
0005d9 93e0 0b3b 	STS  _milSecCounter,R30
0005db 93e0 0b3c 	STS  _milSecCounter+1,R30
0005dd 93e0 0b3d 	STS  _milSecCounter+2,R30
0005df 93e0 0b3e 	STS  _milSecCounter+3,R30
                 ; 0000 0167                     timecounter=milSecCounter;
0005e1 91e0 0b3b 	LDS  R30,_milSecCounter
0005e3 91f0 0b3c 	LDS  R31,_milSecCounter+1
0005e5 9160 0b3d 	LDS  R22,_milSecCounter+2
0005e7 9170 0b3e 	LDS  R23,_milSecCounter+3
0005e9 940e 0f2c 	CALL __PUTD1S0
                 ; 0000 0168                 }
                 ; 0000 0169             get_request_and_send_response();
                 _0x5D:
0005eb dc68      	RCALL _get_request_and_send_response
                 ; 0000 016A         };
0005ec cf0d      	RJMP _0x5A
                 ; 0000 016B }
                 _0x5E:
0005ed cfff      	RJMP _0x5E
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _put_usart_G100:
0005ee 81ea      	LDD  R30,Y+2
0005ef 93ea      	ST   -Y,R30
0005f0 940e 0218 	CALL _putchar
0005f2 81a8      	LD   R26,Y
0005f3 81b9      	LDD  R27,Y+1
0005f4 91ed      	LD   R30,X+
0005f5 91fd      	LD   R31,X+
0005f6 9631      	ADIW R30,1
0005f7 93fe      	ST   -X,R31
0005f8 93ee      	ST   -X,R30
0005f9 9623      	ADIW R28,3
0005fa 9508      	RET
                 _put_buff_G100:
0005fb 931a      	ST   -Y,R17
0005fc 930a      	ST   -Y,R16
0005fd 81aa      	LDD  R26,Y+2
0005fe 81bb      	LDD  R27,Y+2+1
0005ff 9612      	ADIW R26,2
000600 940e 0f0e 	CALL __GETW1P
000602 9730      	SBIW R30,0
000603 f159      	BREQ _0x2000010
000604 81aa      	LDD  R26,Y+2
000605 81bb      	LDD  R27,Y+2+1
000606 9614      	ADIW R26,4
000607 940e 0f0e 	CALL __GETW1P
000609 018f      	MOVW R16,R30
00060a 9730      	SBIW R30,0
00060b f061      	BREQ _0x2000012
                +
00060c 3002     +CPI R16 , LOW ( 2 )
00060d e0e0     +LDI R30 , HIGH ( 2 )
00060e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00060f f0f0      	BRLO _0x2000013
000610 01f8      	MOVW R30,R16
000611 9731      	SBIW R30,1
000612 018f      	MOVW R16,R30
                +
000613 81aa     +LDD R26 , Y + 2
000614 81bb     +LDD R27 , Y + 2 + 1
000615 9614     +ADIW R26 , 4
000616 93ed     +ST X + , R30
000617 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x2000012:
000618 81aa      	LDD  R26,Y+2
000619 81bb      	LDD  R27,Y+2+1
00061a 9612      	ADIW R26,2
00061b 91ed      	LD   R30,X+
00061c 91fd      	LD   R31,X+
00061d 9631      	ADIW R30,1
00061e 93fe      	ST   -X,R31
00061f 93ee      	ST   -X,R30
000620 9731      	SBIW R30,1
000621 81ac      	LDD  R26,Y+4
000622 83a0      	STD  Z+0,R26
000623 81aa      	LDD  R26,Y+2
000624 81bb      	LDD  R27,Y+2+1
000625 940e 0f0e 	CALL __GETW1P
000627 23ff      	TST  R31
000628 f02a      	BRMI _0x2000014
000629 91ed      	LD   R30,X+
00062a 91fd      	LD   R31,X+
00062b 9631      	ADIW R30,1
00062c 93fe      	ST   -X,R31
00062d 93ee      	ST   -X,R30
                 _0x2000014:
                 _0x2000013:
00062e c006      	RJMP _0x2000015
                 _0x2000010:
00062f 81aa      	LDD  R26,Y+2
000630 81bb      	LDD  R27,Y+2+1
000631 efef      	LDI  R30,LOW(65535)
000632 efff      	LDI  R31,HIGH(65535)
000633 93ed      	ST   X+,R30
000634 93fc      	ST   X,R31
                 _0x2000015:
000635 8119      	LDD  R17,Y+1
000636 8108      	LDD  R16,Y+0
000637 940c 0b18 	JMP  _0x20A0004
                 __ftoe_G100:
000639 9724      	SBIW R28,4
00063a e0e0      	LDI  R30,LOW(0)
00063b 83e8      	ST   Y,R30
00063c 83e9      	STD  Y+1,R30
00063d e8e0      	LDI  R30,LOW(128)
00063e 83ea      	STD  Y+2,R30
00063f e3ef      	LDI  R30,LOW(63)
000640 83eb      	STD  Y+3,R30
000641 940e 0f49 	CALL __SAVELOCR4
000643 85ee      	LDD  R30,Y+14
000644 85ff      	LDD  R31,Y+14+1
000645 3fef      	CPI  R30,LOW(0xFFFF)
000646 efaf      	LDI  R26,HIGH(0xFFFF)
000647 07fa      	CPC  R31,R26
000648 f459      	BRNE _0x2000019
000649 85e8      	LDD  R30,Y+8
00064a 85f9      	LDD  R31,Y+8+1
00064b 93fa      	ST   -Y,R31
00064c 93ea      	ST   -Y,R30
                +
00064d eaea     +LDI R30 , LOW ( 2 * _0x2000000 + ( 0 ) )
00064e e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTW1FN _0x2000000,0
00064f 93fa      	ST   -Y,R31
000650 93ea      	ST   -Y,R30
000651 940e 0b1a 	CALL _strcpyf
000653 c148      	RJMP _0x20A0006
                 _0x2000019:
000654 3fef      	CPI  R30,LOW(0x7FFF)
000655 e7af      	LDI  R26,HIGH(0x7FFF)
000656 07fa      	CPC  R31,R26
000657 f459      	BRNE _0x2000018
000658 85e8      	LDD  R30,Y+8
000659 85f9      	LDD  R31,Y+8+1
00065a 93fa      	ST   -Y,R31
00065b 93ea      	ST   -Y,R30
                +
00065c eaeb     +LDI R30 , LOW ( 2 * _0x2000000 + ( 1 ) )
00065d e0f1     +LDI R31 , HIGH ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTW1FN _0x2000000,1
00065e 93fa      	ST   -Y,R31
00065f 93ea      	ST   -Y,R30
000660 940e 0b1a 	CALL _strcpyf
000662 c139      	RJMP _0x20A0006
                 _0x2000018:
000663 85ab      	LDD  R26,Y+11
000664 30a7      	CPI  R26,LOW(0x7)
000665 f010      	BRLO _0x200001B
000666 e0e6      	LDI  R30,LOW(6)
000667 87eb      	STD  Y+11,R30
                 _0x200001B:
000668 851b      	LDD  R17,Y+11
                 _0x200001C:
000669 2fe1      	MOV  R30,R17
00066a 5011      	SUBI R17,1
00066b 30e0      	CPI  R30,0
00066c f079      	BREQ _0x200001E
                +
00066d 81ac     +LDD R26 , Y + 4
00066e 81bd     +LDD R27 , Y + 4 + 1
00066f 818e     +LDD R24 , Y + 4 + 2
000670 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000671 e0e0     +LDI R30 , LOW ( 0x41200000 )
000672 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000673 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000674 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000675 940e 0dcb 	CALL __MULF12
                +
000677 83ec     +STD Y + 4 , R30
000678 83fd     +STD Y + 4 + 1 , R31
000679 836e     +STD Y + 4 + 2 , R22
00067a 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00067b cfed      	RJMP _0x200001C
                 _0x200001E:
                +
00067c 85ec     +LDD R30 , Y + 12
00067d 85fd     +LDD R31 , Y + 12 + 1
00067e 856e     +LDD R22 , Y + 12 + 2
00067f 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
000680 940e 0f43 	CALL __CPD10
000682 f481      	BRNE _0x200001F
000683 e030      	LDI  R19,LOW(0)
                +
000684 81ac     +LDD R26 , Y + 4
000685 81bd     +LDD R27 , Y + 4 + 1
000686 818e     +LDD R24 , Y + 4 + 2
000687 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
000688 e0e0     +LDI R30 , LOW ( 0x41200000 )
000689 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00068a e260     +LDI R22 , BYTE3 ( 0x41200000 )
00068b e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00068c 940e 0dcb 	CALL __MULF12
                +
00068e 83ec     +STD Y + 4 , R30
00068f 83fd     +STD Y + 4 + 1 , R31
000690 836e     +STD Y + 4 + 2 , R22
000691 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
000692 c07e      	RJMP _0x2000020
                 _0x200001F:
000693 853b      	LDD  R19,Y+11
                +
000694 81ec     +LDD R30 , Y + 4
000695 81fd     +LDD R31 , Y + 4 + 1
000696 816e     +LDD R22 , Y + 4 + 2
000697 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
000698 85ac     +LDD R26 , Y + 12
000699 85bd     +LDD R27 , Y + 12 + 1
00069a 858e     +LDD R24 , Y + 12 + 2
00069b 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00069c 940e 0e5e 	CALL __CMPF12
00069e f009      	BREQ PC+2
00069f f410      	BRCC PC+3
0006a0 940c 06c8 	JMP  _0x2000021
                +
0006a2 81ac     +LDD R26 , Y + 4
0006a3 81bd     +LDD R27 , Y + 4 + 1
0006a4 818e     +LDD R24 , Y + 4 + 2
0006a5 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0006a6 e0e0     +LDI R30 , LOW ( 0x41200000 )
0006a7 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0006a8 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0006a9 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0006aa 940e 0dcb 	CALL __MULF12
                +
0006ac 83ec     +STD Y + 4 , R30
0006ad 83fd     +STD Y + 4 + 1 , R31
0006ae 836e     +STD Y + 4 + 2 , R22
0006af 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 _0x2000022:
                +
0006b0 81ec     +LDD R30 , Y + 4
0006b1 81fd     +LDD R31 , Y + 4 + 1
0006b2 816e     +LDD R22 , Y + 4 + 2
0006b3 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0006b4 85ac     +LDD R26 , Y + 12
0006b5 85bd     +LDD R27 , Y + 12 + 1
0006b6 858e     +LDD R24 , Y + 12 + 2
0006b7 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0006b8 940e 0e5e 	CALL __CMPF12
0006ba f060      	BRLO _0x2000024
                +
0006bb eced     +LDI R30 , LOW ( 0x3DCCCCCD )
0006bc ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
0006bd ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
0006be e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
0006bf 940e 0dcb 	CALL __MULF12
                +
0006c1 87ec     +STD Y + 12 , R30
0006c2 87fd     +STD Y + 12 + 1 , R31
0006c3 876e     +STD Y + 12 + 2 , R22
0006c4 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0006c5 5f3f      	SUBI R19,-LOW(1)
0006c6 cfe9      	RJMP _0x2000022
                 _0x2000024:
0006c7 c025      	RJMP _0x2000025
                 _0x2000021:
                 _0x2000026:
                +
0006c8 81ec     +LDD R30 , Y + 4
0006c9 81fd     +LDD R31 , Y + 4 + 1
0006ca 816e     +LDD R22 , Y + 4 + 2
0006cb 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0006cc 85ac     +LDD R26 , Y + 12
0006cd 85bd     +LDD R27 , Y + 12 + 1
0006ce 858e     +LDD R24 , Y + 12 + 2
0006cf 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
0006d0 940e 0e5e 	CALL __CMPF12
0006d2 f460      	BRSH _0x2000028
                +
0006d3 e0e0     +LDI R30 , LOW ( 0x41200000 )
0006d4 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0006d5 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0006d6 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0006d7 940e 0dcb 	CALL __MULF12
                +
0006d9 87ec     +STD Y + 12 , R30
0006da 87fd     +STD Y + 12 + 1 , R31
0006db 876e     +STD Y + 12 + 2 , R22
0006dc 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
0006dd 5031      	SUBI R19,LOW(1)
0006de cfe9      	RJMP _0x2000026
                 _0x2000028:
                +
0006df 81ac     +LDD R26 , Y + 4
0006e0 81bd     +LDD R27 , Y + 4 + 1
0006e1 818e     +LDD R24 , Y + 4 + 2
0006e2 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
0006e3 e0e0     +LDI R30 , LOW ( 0x41200000 )
0006e4 e0f0     +LDI R31 , HIGH ( 0x41200000 )
0006e5 e260     +LDI R22 , BYTE3 ( 0x41200000 )
0006e6 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
0006e7 940e 0dcb 	CALL __MULF12
                +
0006e9 83ec     +STD Y + 4 , R30
0006ea 83fd     +STD Y + 4 + 1 , R31
0006eb 836e     +STD Y + 4 + 2 , R22
0006ec 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                 _0x2000025:
                +
0006ed 85ec     +LDD R30 , Y + 12
0006ee 85fd     +LDD R31 , Y + 12 + 1
0006ef 856e     +LDD R22 , Y + 12 + 2
0006f0 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
                +
0006f1 e0a0     +LDI R26 , LOW ( 0x3F000000 )
0006f2 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
0006f3 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
0006f4 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
0006f5 940e 0d7b 	CALL __ADDF12
                +
0006f7 87ec     +STD Y + 12 , R30
0006f8 87fd     +STD Y + 12 + 1 , R31
0006f9 876e     +STD Y + 12 + 2 , R22
0006fa 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                +
0006fb 81ec     +LDD R30 , Y + 4
0006fc 81fd     +LDD R31 , Y + 4 + 1
0006fd 816e     +LDD R22 , Y + 4 + 2
0006fe 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
                +
0006ff 85ac     +LDD R26 , Y + 12
000700 85bd     +LDD R27 , Y + 12 + 1
000701 858e     +LDD R24 , Y + 12 + 2
000702 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000703 940e 0e5e 	CALL __CMPF12
000705 f058      	BRLO _0x2000029
                +
000706 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000707 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000708 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000709 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00070a 940e 0dcb 	CALL __MULF12
                +
00070c 87ec     +STD Y + 12 , R30
00070d 87fd     +STD Y + 12 + 1 , R31
00070e 876e     +STD Y + 12 + 2 , R22
00070f 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000710 5f3f      	SUBI R19,-LOW(1)
                 _0x2000029:
                 _0x2000020:
000711 e010      	LDI  R17,LOW(0)
                 _0x200002A:
000712 85eb      	LDD  R30,Y+11
000713 17e1      	CP   R30,R17
000714 f410      	BRSH PC+3
000715 940c 0767 	JMP _0x200002C
                +
000717 81ac     +LDD R26 , Y + 4
000718 81bd     +LDD R27 , Y + 4 + 1
000719 818e     +LDD R24 , Y + 4 + 2
00071a 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
                +
00071b eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00071c ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00071d ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00071e e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00071f 940e 0dcb 	CALL __MULF12
                +
000721 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000722 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000723 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000724 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000725 940e 0d7b 	CALL __ADDF12
000727 940e 0f31 	CALL __PUTPARD1
000729 940e 0cbe 	CALL _floor
                +
00072b 83ec     +STD Y + 4 , R30
00072c 83fd     +STD Y + 4 + 1 , R31
00072d 836e     +STD Y + 4 + 2 , R22
00072e 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
                +
00072f 85ac     +LDD R26 , Y + 12
000730 85bd     +LDD R27 , Y + 12 + 1
000731 858e     +LDD R24 , Y + 12 + 2
000732 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000733 940e 0e19 	CALL __DIVF21
000735 940e 0d08 	CALL __CFD1U
000737 2f0e      	MOV  R16,R30
000738 85a8      	LDD  R26,Y+8
000739 85b9      	LDD  R27,Y+8+1
00073a 9611      	ADIW R26,1
00073b 87a8      	STD  Y+8,R26
00073c 87b9      	STD  Y+8+1,R27
00073d 9711      	SBIW R26,1
00073e 2fe0      	MOV  R30,R16
00073f 5de0      	SUBI R30,-LOW(48)
000740 93ec      	ST   X,R30
000741 2fe0      	MOV  R30,R16
000742 27ff      	CLR  R31
000743 2766      	CLR  R22
000744 2777      	CLR  R23
000745 940e 0d41 	CALL __CDF1
                +
000747 81ac     +LDD R26 , Y + 4
000748 81bd     +LDD R27 , Y + 4 + 1
000749 818e     +LDD R24 , Y + 4 + 2
00074a 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00074b 940e 0dcb 	CALL __MULF12
                +
00074d 85ac     +LDD R26 , Y + 12
00074e 85bd     +LDD R27 , Y + 12 + 1
00074f 858e     +LDD R24 , Y + 12 + 2
000750 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
000751 940e 0f36 	CALL __SWAPD12
000753 940e 0d74 	CALL __SUBF12
                +
000755 87ec     +STD Y + 12 , R30
000756 87fd     +STD Y + 12 + 1 , R31
000757 876e     +STD Y + 12 + 2 , R22
000758 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
000759 2fe1      	MOV  R30,R17
00075a 5f1f      	SUBI R17,-1
00075b 30e0      	CPI  R30,0
00075c f009      	BREQ _0x200002D
00075d cfb4      	RJMP _0x200002A
                 _0x200002D:
00075e 85a8      	LDD  R26,Y+8
00075f 85b9      	LDD  R27,Y+8+1
000760 9611      	ADIW R26,1
000761 87a8      	STD  Y+8,R26
000762 87b9      	STD  Y+8+1,R27
000763 9711      	SBIW R26,1
000764 e2ee      	LDI  R30,LOW(46)
000765 93ec      	ST   X,R30
000766 cfab      	RJMP _0x200002A
                 _0x200002C:
000767 85e8      	LDD  R30,Y+8
000768 85f9      	LDD  R31,Y+8+1
000769 9631      	ADIW R30,1
00076a 87e8      	STD  Y+8,R30
00076b 87f9      	STD  Y+8+1,R31
00076c 9731      	SBIW R30,1
00076d 85aa      	LDD  R26,Y+10
00076e 83a0      	STD  Z+0,R26
00076f 3030      	CPI  R19,0
000770 f44c      	BRGE _0x200002E
000771 85a8      	LDD  R26,Y+8
000772 85b9      	LDD  R27,Y+8+1
000773 9611      	ADIW R26,1
000774 87a8      	STD  Y+8,R26
000775 87b9      	STD  Y+8+1,R27
000776 9711      	SBIW R26,1
000777 e2ed      	LDI  R30,LOW(45)
000778 93ec      	ST   X,R30
000779 9531      	NEG  R19
                 _0x200002E:
00077a 303a      	CPI  R19,10
00077b f074      	BRLT _0x200002F
00077c 85e8      	LDD  R30,Y+8
00077d 85f9      	LDD  R31,Y+8+1
00077e 9631      	ADIW R30,1
00077f 87e8      	STD  Y+8,R30
000780 87f9      	STD  Y+8+1,R31
000781 9731      	SBIW R30,1
000782 01bf      	MOVW R22,R30
000783 2fa3      	MOV  R26,R19
000784 e0ea      	LDI  R30,LOW(10)
000785 940e 0ec8 	CALL __DIVB21
000787 5de0      	SUBI R30,-LOW(48)
000788 01db      	MOVW R26,R22
000789 93ec      	ST   X,R30
                 _0x200002F:
00078a 85e8      	LDD  R30,Y+8
00078b 85f9      	LDD  R31,Y+8+1
00078c 9631      	ADIW R30,1
00078d 87e8      	STD  Y+8,R30
00078e 87f9      	STD  Y+8+1,R31
00078f 9731      	SBIW R30,1
000790 01bf      	MOVW R22,R30
000791 2fa3      	MOV  R26,R19
000792 e0ea      	LDI  R30,LOW(10)
000793 940e 0ef2 	CALL __MODB21
000795 5de0      	SUBI R30,-LOW(48)
000796 01db      	MOVW R26,R22
000797 93ec      	ST   X,R30
000798 85a8      	LDD  R26,Y+8
000799 85b9      	LDD  R27,Y+8+1
00079a e0e0      	LDI  R30,LOW(0)
00079b 93ec      	ST   X,R30
                 _0x20A0006:
00079c 940e 0f50 	CALL __LOADLOCR4
00079e 9660      	ADIW R28,16
00079f 9508      	RET
                 __print_G100:
0007a0 97ef      	SBIW R28,63
0007a1 9761      	SBIW R28,17
0007a2 940e 0f47 	CALL __SAVELOCR6
0007a4 e010      	LDI  R17,0
                +
0007a5 01fe     +MOVW R30 , R28
0007a6 5ae8     +SUBI R30 , LOW ( - 88 )
0007a7 4fff     +SBCI R31 , HIGH ( - 88 )
0007a8 9001     +LD R0 , Z +
0007a9 81f0     +LD R31 , Z
0007aa 2de0     +MOV R30 , R0
                 	__GETW1SX 88
0007ab 87e8      	STD  Y+8,R30
0007ac 87f9      	STD  Y+8+1,R31
                +
0007ad 01fe     +MOVW R30 , R28
0007ae 5aea     +SUBI R30 , LOW ( - 86 )
0007af 4fff     +SBCI R31 , HIGH ( - 86 )
0007b0 9001     +LD R0 , Z +
0007b1 81f0     +LD R31 , Z
0007b2 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0007b3 83ee      	STD  Y+6,R30
0007b4 83ff      	STD  Y+6+1,R31
0007b5 81ae      	LDD  R26,Y+6
0007b6 81bf      	LDD  R27,Y+6+1
0007b7 e0e0      	LDI  R30,LOW(0)
0007b8 e0f0      	LDI  R31,HIGH(0)
0007b9 93ed      	ST   X+,R30
0007ba 93fc      	ST   X,R31
                 _0x2000030:
0007bb 01de      	MOVW R26,R28
0007bc 5aa4      	SUBI R26,LOW(-(92))
0007bd 4fbf      	SBCI R27,HIGH(-(92))
0007be 91ed      	LD   R30,X+
0007bf 91fd      	LD   R31,X+
0007c0 9631      	ADIW R30,1
0007c1 93fe      	ST   -X,R31
0007c2 93ee      	ST   -X,R30
0007c3 9731      	SBIW R30,1
0007c4 91e4      	LPM  R30,Z
0007c5 2f2e      	MOV  R18,R30
0007c6 30e0      	CPI  R30,0
0007c7 f411      	BRNE PC+3
0007c8 940c 0a9e 	JMP _0x2000032
0007ca 2fe1      	MOV  R30,R17
0007cb 30e0      	CPI  R30,0
0007cc f469      	BRNE _0x2000036
0007cd 3225      	CPI  R18,37
0007ce f411      	BRNE _0x2000037
0007cf e011      	LDI  R17,LOW(1)
0007d0 c008      	RJMP _0x2000038
                 _0x2000037:
0007d1 932a      	ST   -Y,R18
0007d2 81ef      	LDD  R30,Y+7
0007d3 85f8      	LDD  R31,Y+7+1
0007d4 93fa      	ST   -Y,R31
0007d5 93ea      	ST   -Y,R30
0007d6 85eb      	LDD  R30,Y+11
0007d7 85fc      	LDD  R31,Y+11+1
0007d8 9509      	ICALL
                 _0x2000038:
0007d9 c2c3      	RJMP _0x2000035
                 _0x2000036:
0007da 30e1      	CPI  R30,LOW(0x1)
0007db f4f1      	BRNE _0x2000039
0007dc 3225      	CPI  R18,37
0007dd f449      	BRNE _0x200003A
0007de 932a      	ST   -Y,R18
0007df 81ef      	LDD  R30,Y+7
0007e0 85f8      	LDD  R31,Y+7+1
0007e1 93fa      	ST   -Y,R31
0007e2 93ea      	ST   -Y,R30
0007e3 85eb      	LDD  R30,Y+11
0007e4 85fc      	LDD  R31,Y+11+1
0007e5 9509      	ICALL
0007e6 c2b5      	RJMP _0x200010E
                 _0x200003A:
0007e7 e012      	LDI  R17,LOW(2)
0007e8 e0e0      	LDI  R30,LOW(0)
0007e9 8bed      	STD  Y+21,R30
0007ea e000      	LDI  R16,LOW(0)
0007eb 322d      	CPI  R18,45
0007ec f411      	BRNE _0x200003B
0007ed e001      	LDI  R16,LOW(1)
0007ee c2ae      	RJMP _0x2000035
                 _0x200003B:
0007ef 322b      	CPI  R18,43
0007f0 f419      	BRNE _0x200003C
0007f1 e2eb      	LDI  R30,LOW(43)
0007f2 8bed      	STD  Y+21,R30
0007f3 c2a9      	RJMP _0x2000035
                 _0x200003C:
0007f4 3220      	CPI  R18,32
0007f5 f419      	BRNE _0x200003D
0007f6 e2e0      	LDI  R30,LOW(32)
0007f7 8bed      	STD  Y+21,R30
0007f8 c2a4      	RJMP _0x2000035
                 _0x200003D:
0007f9 c002      	RJMP _0x200003E
                 _0x2000039:
0007fa 30e2      	CPI  R30,LOW(0x2)
0007fb f439      	BRNE _0x200003F
                 _0x200003E:
0007fc e050      	LDI  R21,LOW(0)
0007fd e013      	LDI  R17,LOW(3)
0007fe 3320      	CPI  R18,48
0007ff f411      	BRNE _0x2000040
000800 6800      	ORI  R16,LOW(128)
000801 c29b      	RJMP _0x2000035
                 _0x2000040:
000802 c002      	RJMP _0x2000041
                 _0x200003F:
000803 30e3      	CPI  R30,LOW(0x3)
000804 f491      	BRNE _0x2000042
                 _0x2000041:
000805 3320      	CPI  R18,48
000806 f010      	BRLO _0x2000044
000807 332a      	CPI  R18,58
000808 f008      	BRLO _0x2000045
                 _0x2000044:
000809 c007      	RJMP _0x2000043
                 _0x2000045:
00080a e0aa      	LDI  R26,LOW(10)
00080b 9f5a      	MUL  R21,R26
00080c 2d50      	MOV  R21,R0
00080d 2fe2      	MOV  R30,R18
00080e 53e0      	SUBI R30,LOW(48)
00080f 0f5e      	ADD  R21,R30
000810 c28c      	RJMP _0x2000035
                 _0x2000043:
000811 e040      	LDI  R20,LOW(0)
000812 322e      	CPI  R18,46
000813 f411      	BRNE _0x2000046
000814 e014      	LDI  R17,LOW(4)
000815 c287      	RJMP _0x2000035
                 _0x2000046:
000816 c00f      	RJMP _0x2000047
                 _0x2000042:
000817 30e4      	CPI  R30,LOW(0x4)
000818 f499      	BRNE _0x2000049
000819 3320      	CPI  R18,48
00081a f010      	BRLO _0x200004B
00081b 332a      	CPI  R18,58
00081c f008      	BRLO _0x200004C
                 _0x200004B:
00081d c008      	RJMP _0x200004A
                 _0x200004C:
00081e 6200      	ORI  R16,LOW(32)
00081f e0aa      	LDI  R26,LOW(10)
000820 9f4a      	MUL  R20,R26
000821 2d40      	MOV  R20,R0
000822 2fe2      	MOV  R30,R18
000823 53e0      	SUBI R30,LOW(48)
000824 0f4e      	ADD  R20,R30
000825 c277      	RJMP _0x2000035
                 _0x200004A:
                 _0x2000047:
000826 362c      	CPI  R18,108
000827 f419      	BRNE _0x200004D
000828 6002      	ORI  R16,LOW(2)
000829 e015      	LDI  R17,LOW(5)
00082a c272      	RJMP _0x2000035
                 _0x200004D:
00082b c004      	RJMP _0x200004E
                 _0x2000049:
00082c 30e5      	CPI  R30,LOW(0x5)
00082d f011      	BREQ PC+3
00082e 940c 0a9d 	JMP _0x2000035
                 _0x200004E:
000830 2fe2      	MOV  R30,R18
000831 36e3      	CPI  R30,LOW(0x63)
000832 f4b1      	BRNE _0x2000053
                +
000833 01fe     +MOVW R30 , R28
000834 5ae6     +SUBI R30 , LOW ( - 90 )
000835 4fff     +SBCI R31 , HIGH ( - 90 )
000836 9001     +LD R0 , Z +
000837 81f0     +LD R31 , Z
000838 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000839 9734      	SBIW R30,4
                +
00083a 01de     +MOVW R26 , R28
00083b 5aa6     +SUBI R26 , LOW ( - 90 )
00083c 4fbf     +SBCI R27 , HIGH ( - 90 )
00083d 93ed     +ST X + , R30
00083e 93fc     +ST X , R31
                 	__PUTW1SX 90
00083f 81a4      	LDD  R26,Z+4
000840 93aa      	ST   -Y,R26
000841 81ef      	LDD  R30,Y+7
000842 85f8      	LDD  R31,Y+7+1
000843 93fa      	ST   -Y,R31
000844 93ea      	ST   -Y,R30
000845 85eb      	LDD  R30,Y+11
000846 85fc      	LDD  R31,Y+11+1
000847 9509      	ICALL
000848 c253      	RJMP _0x2000054
                 _0x2000053:
000849 34e5      	CPI  R30,LOW(0x45)
00084a f011      	BREQ _0x2000057
00084b 36e5      	CPI  R30,LOW(0x65)
00084c f409      	BRNE _0x2000058
                 _0x2000057:
00084d c004      	RJMP _0x2000059
                 _0x2000058:
00084e 36e6      	CPI  R30,LOW(0x66)
00084f f011      	BREQ PC+3
000850 940c 08be 	JMP _0x200005A
                 _0x2000059:
000852 01fe      	MOVW R30,R28
000853 9676      	ADIW R30,22
000854 87ee      	STD  Y+14,R30
000855 87ff      	STD  Y+14+1,R31
                +
000856 01de     +MOVW R26 , R28
000857 5aa6     +SUBI R26 , LOW ( - 90 )
000858 4fbf     +SBCI R27 , HIGH ( - 90 )
000859 900d     +LD R0 , X +
00085a 91bc     +LD R27 , X
00085b 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00085c 940e 0f12 	CALL __GETD1P
                +
00085e 87ea     +STD Y + 10 , R30
00085f 87fb     +STD Y + 10 + 1 , R31
000860 876c     +STD Y + 10 + 2 , R22
000861 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
                +
000862 01fe     +MOVW R30 , R28
000863 5ae6     +SUBI R30 , LOW ( - 90 )
000864 4fff     +SBCI R31 , HIGH ( - 90 )
000865 9001     +LD R0 , Z +
000866 81f0     +LD R31 , Z
000867 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000868 9734      	SBIW R30,4
                +
000869 01de     +MOVW R26 , R28
00086a 5aa6     +SUBI R26 , LOW ( - 90 )
00086b 4fbf     +SBCI R27 , HIGH ( - 90 )
00086c 93ed     +ST X + , R30
00086d 93fc     +ST X , R31
                 	__PUTW1SX 90
00086e 85ad      	LDD  R26,Y+13
00086f 23aa      	TST  R26
000870 f022      	BRMI _0x200005B
000871 89ad      	LDD  R26,Y+21
000872 32ab      	CPI  R26,LOW(0x2B)
000873 f069      	BREQ _0x200005D
000874 c020      	RJMP _0x200005E
                 _0x200005B:
                +
000875 85ea     +LDD R30 , Y + 10
000876 85fb     +LDD R31 , Y + 10 + 1
000877 856c     +LDD R22 , Y + 10 + 2
000878 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
000879 940e 0cd5 	CALL __ANEGF1
                +
00087b 87ea     +STD Y + 10 , R30
00087c 87fb     +STD Y + 10 + 1 , R31
00087d 876c     +STD Y + 10 + 2 , R22
00087e 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00087f e2ed      	LDI  R30,LOW(45)
000880 8bed      	STD  Y+21,R30
                 _0x200005D:
000881 ff07      	SBRS R16,7
000882 c00a      	RJMP _0x200005F
000883 89ed      	LDD  R30,Y+21
000884 93ea      	ST   -Y,R30
000885 81ef      	LDD  R30,Y+7
000886 85f8      	LDD  R31,Y+7+1
000887 93fa      	ST   -Y,R31
000888 93ea      	ST   -Y,R30
000889 85eb      	LDD  R30,Y+11
00088a 85fc      	LDD  R31,Y+11+1
00088b 9509      	ICALL
00088c c008      	RJMP _0x2000060
                 _0x200005F:
00088d 85ee      	LDD  R30,Y+14
00088e 85ff      	LDD  R31,Y+14+1
00088f 9631      	ADIW R30,1
000890 87ee      	STD  Y+14,R30
000891 87ff      	STD  Y+14+1,R31
000892 9731      	SBIW R30,1
000893 89ad      	LDD  R26,Y+21
000894 83a0      	STD  Z+0,R26
                 _0x2000060:
                 _0x200005E:
000895 ff05      	SBRS R16,5
000896 e046      	LDI  R20,LOW(6)
000897 3626      	CPI  R18,102
000898 f471      	BRNE _0x2000062
                +
000899 85ea     +LDD R30 , Y + 10
00089a 85fb     +LDD R31 , Y + 10 + 1
00089b 856c     +LDD R22 , Y + 10 + 2
00089c 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00089d 940e 0f31 	CALL __PUTPARD1
00089f 934a      	ST   -Y,R20
0008a0 89eb      	LDD  R30,Y+19
0008a1 89fc      	LDD  R31,Y+19+1
0008a2 93fa      	ST   -Y,R31
0008a3 93ea      	ST   -Y,R30
0008a4 940e 0b4f 	CALL _ftoa
0008a6 c00d      	RJMP _0x2000063
                 _0x2000062:
                +
0008a7 85ea     +LDD R30 , Y + 10
0008a8 85fb     +LDD R31 , Y + 10 + 1
0008a9 856c     +LDD R22 , Y + 10 + 2
0008aa 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0008ab 940e 0f31 	CALL __PUTPARD1
0008ad 934a      	ST   -Y,R20
0008ae 932a      	ST   -Y,R18
0008af 89ec      	LDD  R30,Y+20
0008b0 89fd      	LDD  R31,Y+20+1
0008b1 93fa      	ST   -Y,R31
0008b2 93ea      	ST   -Y,R30
0008b3 dd85      	RCALL __ftoe_G100
                 _0x2000063:
0008b4 01fe      	MOVW R30,R28
0008b5 9676      	ADIW R30,22
0008b6 87ee      	STD  Y+14,R30
0008b7 87ff      	STD  Y+14+1,R31
0008b8 93fa      	ST   -Y,R31
0008b9 93ea      	ST   -Y,R30
0008ba 940e 0b25 	CALL _strlen
0008bc 2f1e      	MOV  R17,R30
0008bd c045      	RJMP _0x2000064
                 _0x200005A:
0008be 37e3      	CPI  R30,LOW(0x73)
0008bf f4e9      	BRNE _0x2000066
                +
0008c0 01fe     +MOVW R30 , R28
0008c1 5ae6     +SUBI R30 , LOW ( - 90 )
0008c2 4fff     +SBCI R31 , HIGH ( - 90 )
0008c3 9001     +LD R0 , Z +
0008c4 81f0     +LD R31 , Z
0008c5 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0008c6 9734      	SBIW R30,4
                +
0008c7 01de     +MOVW R26 , R28
0008c8 5aa6     +SUBI R26 , LOW ( - 90 )
0008c9 4fbf     +SBCI R27 , HIGH ( - 90 )
0008ca 93ed     +ST X + , R30
0008cb 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
0008cc 01de     +MOVW R26 , R28
0008cd 5aa6     +SUBI R26 , LOW ( - 90 )
0008ce 4fbf     +SBCI R27 , HIGH ( - 90 )
0008cf 900d     +LD R0 , X +
0008d0 91bc     +LD R27 , X
0008d1 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0008d2 9614      	ADIW R26,4
0008d3 940e 0f0e 	CALL __GETW1P
0008d5 87ee      	STD  Y+14,R30
0008d6 87ff      	STD  Y+14+1,R31
0008d7 93fa      	ST   -Y,R31
0008d8 93ea      	ST   -Y,R30
0008d9 940e 0b25 	CALL _strlen
0008db 2f1e      	MOV  R17,R30
0008dc c01f      	RJMP _0x2000067
                 _0x2000066:
0008dd 37e0      	CPI  R30,LOW(0x70)
0008de f549      	BRNE _0x2000069
                +
0008df 01fe     +MOVW R30 , R28
0008e0 5ae6     +SUBI R30 , LOW ( - 90 )
0008e1 4fff     +SBCI R31 , HIGH ( - 90 )
0008e2 9001     +LD R0 , Z +
0008e3 81f0     +LD R31 , Z
0008e4 2de0     +MOV R30 , R0
                 	__GETW1SX 90
0008e5 9734      	SBIW R30,4
                +
0008e6 01de     +MOVW R26 , R28
0008e7 5aa6     +SUBI R26 , LOW ( - 90 )
0008e8 4fbf     +SBCI R27 , HIGH ( - 90 )
0008e9 93ed     +ST X + , R30
0008ea 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
0008eb 01de     +MOVW R26 , R28
0008ec 5aa6     +SUBI R26 , LOW ( - 90 )
0008ed 4fbf     +SBCI R27 , HIGH ( - 90 )
0008ee 900d     +LD R0 , X +
0008ef 91bc     +LD R27 , X
0008f0 2da0     +MOV R26 , R0
                 	__GETW2SX 90
0008f1 9614      	ADIW R26,4
0008f2 940e 0f0e 	CALL __GETW1P
0008f4 87ee      	STD  Y+14,R30
0008f5 87ff      	STD  Y+14+1,R31
0008f6 93fa      	ST   -Y,R31
0008f7 93ea      	ST   -Y,R30
0008f8 940e 0b2f 	CALL _strlenf
0008fa 2f1e      	MOV  R17,R30
0008fb 6008      	ORI  R16,LOW(8)
                 _0x2000067:
0008fc 770f      	ANDI R16,LOW(127)
0008fd 3040      	CPI  R20,0
0008fe f011      	BREQ _0x200006B
0008ff 1741      	CP   R20,R17
000900 f008      	BRLO _0x200006C
                 _0x200006B:
000901 c001      	RJMP _0x200006A
                 _0x200006C:
000902 2f14      	MOV  R17,R20
                 _0x200006A:
                 _0x2000064:
000903 e040      	LDI  R20,LOW(0)
000904 e0e0      	LDI  R30,LOW(0)
000905 8bec      	STD  Y+20,R30
000906 e030      	LDI  R19,LOW(0)
000907 c0aa      	RJMP _0x200006D
                 _0x2000069:
000908 36e4      	CPI  R30,LOW(0x64)
000909 f011      	BREQ _0x2000070
00090a 36e9      	CPI  R30,LOW(0x69)
00090b f411      	BRNE _0x2000071
                 _0x2000070:
00090c 6004      	ORI  R16,LOW(4)
00090d c002      	RJMP _0x2000072
                 _0x2000071:
00090e 37e5      	CPI  R30,LOW(0x75)
00090f f4c1      	BRNE _0x2000073
                 _0x2000072:
000910 e0ea      	LDI  R30,LOW(10)
000911 8bec      	STD  Y+20,R30
000912 ff01      	SBRS R16,1
000913 c00a      	RJMP _0x2000074
                +
000914 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
000915 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
000916 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
000917 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
                +
000918 8be8     +STD Y + 16 , R30
000919 8bf9     +STD Y + 16 + 1 , R31
00091a 8b6a     +STD Y + 16 + 2 , R22
00091b 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00091c e01a      	LDI  R17,LOW(10)
00091d c029      	RJMP _0x2000075
                 _0x2000074:
                +
00091e e1e0     +LDI R30 , LOW ( 0x2710 )
00091f e2f7     +LDI R31 , HIGH ( 0x2710 )
000920 e060     +LDI R22 , BYTE3 ( 0x2710 )
000921 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
                +
000922 8be8     +STD Y + 16 , R30
000923 8bf9     +STD Y + 16 + 1 , R31
000924 8b6a     +STD Y + 16 + 2 , R22
000925 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000926 e015      	LDI  R17,LOW(5)
000927 c01f      	RJMP _0x2000075
                 _0x2000073:
000928 35e8      	CPI  R30,LOW(0x58)
000929 f411      	BRNE _0x2000077
00092a 6008      	ORI  R16,LOW(8)
00092b c004      	RJMP _0x2000078
                 _0x2000077:
00092c 37e8      	CPI  R30,LOW(0x78)
00092d f011      	BREQ PC+3
00092e 940c 0a9c 	JMP _0x20000B6
                 _0x2000078:
000930 e1e0      	LDI  R30,LOW(16)
000931 8bec      	STD  Y+20,R30
000932 ff01      	SBRS R16,1
000933 c00a      	RJMP _0x200007A
                +
000934 e0e0     +LDI R30 , LOW ( 0x10000000 )
000935 e0f0     +LDI R31 , HIGH ( 0x10000000 )
000936 e060     +LDI R22 , BYTE3 ( 0x10000000 )
000937 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
                +
000938 8be8     +STD Y + 16 , R30
000939 8bf9     +STD Y + 16 + 1 , R31
00093a 8b6a     +STD Y + 16 + 2 , R22
00093b 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00093c e018      	LDI  R17,LOW(8)
00093d c009      	RJMP _0x2000075
                 _0x200007A:
                +
00093e e0e0     +LDI R30 , LOW ( 0x1000 )
00093f e1f0     +LDI R31 , HIGH ( 0x1000 )
000940 e060     +LDI R22 , BYTE3 ( 0x1000 )
000941 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
                +
000942 8be8     +STD Y + 16 , R30
000943 8bf9     +STD Y + 16 + 1 , R31
000944 8b6a     +STD Y + 16 + 2 , R22
000945 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000946 e014      	LDI  R17,LOW(4)
                 _0x2000075:
000947 3040      	CPI  R20,0
000948 f011      	BREQ _0x200007B
000949 770f      	ANDI R16,LOW(127)
00094a c001      	RJMP _0x200007C
                 _0x200007B:
00094b e041      	LDI  R20,LOW(1)
                 _0x200007C:
00094c ff01      	SBRS R16,1
00094d c016      	RJMP _0x200007D
                +
00094e 01fe     +MOVW R30 , R28
00094f 5ae6     +SUBI R30 , LOW ( - 90 )
000950 4fff     +SBCI R31 , HIGH ( - 90 )
000951 9001     +LD R0 , Z +
000952 81f0     +LD R31 , Z
000953 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000954 9734      	SBIW R30,4
                +
000955 01de     +MOVW R26 , R28
000956 5aa6     +SUBI R26 , LOW ( - 90 )
000957 4fbf     +SBCI R27 , HIGH ( - 90 )
000958 93ed     +ST X + , R30
000959 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
00095a 01de     +MOVW R26 , R28
00095b 5aa6     +SUBI R26 , LOW ( - 90 )
00095c 4fbf     +SBCI R27 , HIGH ( - 90 )
00095d 900d     +LD R0 , X +
00095e 91bc     +LD R27 , X
00095f 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000960 9614      	ADIW R26,4
000961 940e 0f12 	CALL __GETD1P
000963 c031      	RJMP _0x200010F
                 _0x200007D:
000964 ff02      	SBRS R16,2
000965 c018      	RJMP _0x200007F
                +
000966 01fe     +MOVW R30 , R28
000967 5ae6     +SUBI R30 , LOW ( - 90 )
000968 4fff     +SBCI R31 , HIGH ( - 90 )
000969 9001     +LD R0 , Z +
00096a 81f0     +LD R31 , Z
00096b 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00096c 9734      	SBIW R30,4
                +
00096d 01de     +MOVW R26 , R28
00096e 5aa6     +SUBI R26 , LOW ( - 90 )
00096f 4fbf     +SBCI R27 , HIGH ( - 90 )
000970 93ed     +ST X + , R30
000971 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
000972 01de     +MOVW R26 , R28
000973 5aa6     +SUBI R26 , LOW ( - 90 )
000974 4fbf     +SBCI R27 , HIGH ( - 90 )
000975 900d     +LD R0 , X +
000976 91bc     +LD R27 , X
000977 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000978 9614      	ADIW R26,4
000979 940e 0f0e 	CALL __GETW1P
00097b 940e 0e95 	CALL __CWD1
00097d c017      	RJMP _0x200010F
                 _0x200007F:
                +
00097e 01fe     +MOVW R30 , R28
00097f 5ae6     +SUBI R30 , LOW ( - 90 )
000980 4fff     +SBCI R31 , HIGH ( - 90 )
000981 9001     +LD R0 , Z +
000982 81f0     +LD R31 , Z
000983 2de0     +MOV R30 , R0
                 	__GETW1SX 90
000984 9734      	SBIW R30,4
                +
000985 01de     +MOVW R26 , R28
000986 5aa6     +SUBI R26 , LOW ( - 90 )
000987 4fbf     +SBCI R27 , HIGH ( - 90 )
000988 93ed     +ST X + , R30
000989 93fc     +ST X , R31
                 	__PUTW1SX 90
                +
00098a 01de     +MOVW R26 , R28
00098b 5aa6     +SUBI R26 , LOW ( - 90 )
00098c 4fbf     +SBCI R27 , HIGH ( - 90 )
00098d 900d     +LD R0 , X +
00098e 91bc     +LD R27 , X
00098f 2da0     +MOV R26 , R0
                 	__GETW2SX 90
000990 9614      	ADIW R26,4
000991 940e 0f0e 	CALL __GETW1P
000993 2766      	CLR  R22
000994 2777      	CLR  R23
                 _0x200010F:
                +
000995 87ea     +STD Y + 10 , R30
000996 87fb     +STD Y + 10 + 1 , R31
000997 876c     +STD Y + 10 + 2 , R22
000998 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000999 ff02      	SBRS R16,2
00099a c016      	RJMP _0x2000081
00099b 85ad      	LDD  R26,Y+13
00099c 23aa      	TST  R26
00099d f462      	BRPL _0x2000082
                +
00099e 85ea     +LDD R30 , Y + 10
00099f 85fb     +LDD R31 , Y + 10 + 1
0009a0 856c     +LDD R22 , Y + 10 + 2
0009a1 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
0009a2 940e 0e87 	CALL __ANEGD1
                +
0009a4 87ea     +STD Y + 10 , R30
0009a5 87fb     +STD Y + 10 + 1 , R31
0009a6 876c     +STD Y + 10 + 2 , R22
0009a7 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
0009a8 e2ed      	LDI  R30,LOW(45)
0009a9 8bed      	STD  Y+21,R30
                 _0x2000082:
0009aa 89ed      	LDD  R30,Y+21
0009ab 30e0      	CPI  R30,0
0009ac f019      	BREQ _0x2000083
0009ad 5f1f      	SUBI R17,-LOW(1)
0009ae 5f4f      	SUBI R20,-LOW(1)
0009af c001      	RJMP _0x2000084
                 _0x2000083:
0009b0 7f0b      	ANDI R16,LOW(251)
                 _0x2000084:
                 _0x2000081:
0009b1 2f34      	MOV  R19,R20
                 _0x200006D:
0009b2 fd00      	SBRC R16,0
0009b3 c01a      	RJMP _0x2000085
                 _0x2000086:
0009b4 1715      	CP   R17,R21
0009b5 f410      	BRSH _0x2000089
0009b6 1735      	CP   R19,R21
0009b7 f008      	BRLO _0x200008A
                 _0x2000089:
0009b8 c015      	RJMP _0x2000088
                 _0x200008A:
0009b9 ff07      	SBRS R16,7
0009ba c008      	RJMP _0x200008B
0009bb ff02      	SBRS R16,2
0009bc c004      	RJMP _0x200008C
0009bd 7f0b      	ANDI R16,LOW(251)
0009be 892d      	LDD  R18,Y+21
0009bf 5011      	SUBI R17,LOW(1)
0009c0 c001      	RJMP _0x200008D
                 _0x200008C:
0009c1 e320      	LDI  R18,LOW(48)
                 _0x200008D:
0009c2 c001      	RJMP _0x200008E
                 _0x200008B:
0009c3 e220      	LDI  R18,LOW(32)
                 _0x200008E:
0009c4 932a      	ST   -Y,R18
0009c5 81ef      	LDD  R30,Y+7
0009c6 85f8      	LDD  R31,Y+7+1
0009c7 93fa      	ST   -Y,R31
0009c8 93ea      	ST   -Y,R30
0009c9 85eb      	LDD  R30,Y+11
0009ca 85fc      	LDD  R31,Y+11+1
0009cb 9509      	ICALL
0009cc 5051      	SUBI R21,LOW(1)
0009cd cfe6      	RJMP _0x2000086
                 _0x2000088:
                 _0x2000085:
                 _0x200008F:
0009ce 1714      	CP   R17,R20
0009cf f540      	BRSH _0x2000091
0009d0 6100      	ORI  R16,LOW(16)
0009d1 ff02      	SBRS R16,2
0009d2 c017      	RJMP _0x2000092
0009d3 7f0b      	ANDI R16,LOW(251)
0009d4 89ed      	LDD  R30,Y+21
0009d5 93ea      	ST   -Y,R30
                +
0009d6 01fe     +MOVW R30 , R28
0009d7 5ae9     +SUBI R30 , LOW ( - 87 )
0009d8 4fff     +SBCI R31 , HIGH ( - 87 )
0009d9 9001     +LD R0 , Z +
0009da 81f0     +LD R31 , Z
0009db 2de0     +MOV R30 , R0
                 	__GETW1SX 87
0009dc 93fa      	ST   -Y,R31
0009dd 93ea      	ST   -Y,R30
                +
0009de 01fe     +MOVW R30 , R28
0009df 5ae5     +SUBI R30 , LOW ( - 91 )
0009e0 4fff     +SBCI R31 , HIGH ( - 91 )
0009e1 9001     +LD R0 , Z +
0009e2 81f0     +LD R31 , Z
0009e3 2de0     +MOV R30 , R0
                 	__GETW1SX 91
0009e4 9509      	ICALL
0009e5 3050      	CPI  R21,0
0009e6 f009      	BREQ _0x2000093
0009e7 5051      	SUBI R21,LOW(1)
                 _0x2000093:
0009e8 5011      	SUBI R17,LOW(1)
0009e9 5041      	SUBI R20,LOW(1)
                 _0x2000092:
0009ea e3e0      	LDI  R30,LOW(48)
0009eb 93ea      	ST   -Y,R30
0009ec 81ef      	LDD  R30,Y+7
0009ed 85f8      	LDD  R31,Y+7+1
0009ee 93fa      	ST   -Y,R31
0009ef 93ea      	ST   -Y,R30
0009f0 85eb      	LDD  R30,Y+11
0009f1 85fc      	LDD  R31,Y+11+1
0009f2 9509      	ICALL
0009f3 3050      	CPI  R21,0
0009f4 f009      	BREQ _0x2000094
0009f5 5051      	SUBI R21,LOW(1)
                 _0x2000094:
0009f6 5041      	SUBI R20,LOW(1)
0009f7 cfd6      	RJMP _0x200008F
                 _0x2000091:
0009f8 2f31      	MOV  R19,R17
0009f9 89ec      	LDD  R30,Y+20
0009fa 30e0      	CPI  R30,0
0009fb f4e9      	BRNE _0x2000095
                 _0x2000096:
0009fc 3030      	CPI  R19,0
0009fd f0d1      	BREQ _0x2000098
0009fe ff03      	SBRS R16,3
0009ff c006      	RJMP _0x2000099
000a00 85ee      	LDD  R30,Y+14
000a01 85ff      	LDD  R31,Y+14+1
000a02 9125      	LPM  R18,Z+
000a03 87ee      	STD  Y+14,R30
000a04 87ff      	STD  Y+14+1,R31
000a05 c005      	RJMP _0x200009A
                 _0x2000099:
000a06 85ae      	LDD  R26,Y+14
000a07 85bf      	LDD  R27,Y+14+1
000a08 912d      	LD   R18,X+
000a09 87ae      	STD  Y+14,R26
000a0a 87bf      	STD  Y+14+1,R27
                 _0x200009A:
000a0b 932a      	ST   -Y,R18
000a0c 81ef      	LDD  R30,Y+7
000a0d 85f8      	LDD  R31,Y+7+1
000a0e 93fa      	ST   -Y,R31
000a0f 93ea      	ST   -Y,R30
000a10 85eb      	LDD  R30,Y+11
000a11 85fc      	LDD  R31,Y+11+1
000a12 9509      	ICALL
000a13 3050      	CPI  R21,0
000a14 f009      	BREQ _0x200009B
000a15 5051      	SUBI R21,LOW(1)
                 _0x200009B:
000a16 5031      	SUBI R19,LOW(1)
000a17 cfe4      	RJMP _0x2000096
                 _0x2000098:
000a18 c074      	RJMP _0x200009C
                 _0x2000095:
                 _0x200009E:
                +
000a19 89e8     +LDD R30 , Y + 16
000a1a 89f9     +LDD R31 , Y + 16 + 1
000a1b 896a     +LDD R22 , Y + 16 + 2
000a1c 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000a1d 85aa     +LDD R26 , Y + 10
000a1e 85bb     +LDD R27 , Y + 10 + 1
000a1f 858c     +LDD R24 , Y + 10 + 2
000a20 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000a21 940e 0ecd 	CALL __DIVD21U
000a23 2f2e      	MOV  R18,R30
000a24 302a      	CPI  R18,10
000a25 f030      	BRLO _0x20000A0
000a26 ff03      	SBRS R16,3
000a27 c002      	RJMP _0x20000A1
000a28 5c29      	SUBI R18,-LOW(55)
000a29 c001      	RJMP _0x20000A2
                 _0x20000A1:
000a2a 5a29      	SUBI R18,-LOW(87)
                 _0x20000A2:
000a2b c001      	RJMP _0x20000A3
                 _0x20000A0:
000a2c 5d20      	SUBI R18,-LOW(48)
                 _0x20000A3:
000a2d fd04      	SBRC R16,4
000a2e c032      	RJMP _0x20000A5
000a2f 3321      	CPI  R18,49
000a30 f460      	BRSH _0x20000A7
                +
000a31 89a8     +LDD R26 , Y + 16
000a32 89b9     +LDD R27 , Y + 16 + 1
000a33 898a     +LDD R24 , Y + 16 + 2
000a34 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
                +
000a35 30a1     +CPI R26 , LOW ( 0x1 )
000a36 e0e0     +LDI R30 , HIGH ( 0x1 )
000a37 07be     +CPC R27 , R30
000a38 e0e0     +LDI R30 , BYTE3 ( 0x1 )
000a39 078e     +CPC R24 , R30
000a3a e0e0     +LDI R30 , BYTE4 ( 0x1 )
000a3b 079e     +CPC R25 , R30
                 	__CPD2N 0x1
000a3c f409      	BRNE _0x20000A6
                 _0x20000A7:
000a3d c00b      	RJMP _0x20000A9
                 _0x20000A6:
000a3e 1743      	CP   R20,R19
000a3f f440      	BRSH _0x2000110
000a40 1753      	CP   R21,R19
000a41 f010      	BRLO _0x20000AC
000a42 ff00      	SBRS R16,0
000a43 c001      	RJMP _0x20000AD
                 _0x20000AC:
000a44 c027      	RJMP _0x20000AB
                 _0x20000AD:
000a45 e220      	LDI  R18,LOW(32)
000a46 ff07      	SBRS R16,7
000a47 c019      	RJMP _0x20000AE
                 _0x2000110:
000a48 e320      	LDI  R18,LOW(48)
                 _0x20000A9:
000a49 6100      	ORI  R16,LOW(16)
000a4a ff02      	SBRS R16,2
000a4b c015      	RJMP _0x20000AF
000a4c 7f0b      	ANDI R16,LOW(251)
000a4d 89ed      	LDD  R30,Y+21
000a4e 93ea      	ST   -Y,R30
                +
000a4f 01fe     +MOVW R30 , R28
000a50 5ae9     +SUBI R30 , LOW ( - 87 )
000a51 4fff     +SBCI R31 , HIGH ( - 87 )
000a52 9001     +LD R0 , Z +
000a53 81f0     +LD R31 , Z
000a54 2de0     +MOV R30 , R0
                 	__GETW1SX 87
000a55 93fa      	ST   -Y,R31
000a56 93ea      	ST   -Y,R30
                +
000a57 01fe     +MOVW R30 , R28
000a58 5ae5     +SUBI R30 , LOW ( - 91 )
000a59 4fff     +SBCI R31 , HIGH ( - 91 )
000a5a 9001     +LD R0 , Z +
000a5b 81f0     +LD R31 , Z
000a5c 2de0     +MOV R30 , R0
                 	__GETW1SX 91
000a5d 9509      	ICALL
000a5e 3050      	CPI  R21,0
000a5f f009      	BREQ _0x20000B0
000a60 5051      	SUBI R21,LOW(1)
                 _0x20000B0:
                 _0x20000AF:
                 _0x20000AE:
                 _0x20000A5:
000a61 932a      	ST   -Y,R18
000a62 81ef      	LDD  R30,Y+7
000a63 85f8      	LDD  R31,Y+7+1
000a64 93fa      	ST   -Y,R31
000a65 93ea      	ST   -Y,R30
000a66 85eb      	LDD  R30,Y+11
000a67 85fc      	LDD  R31,Y+11+1
000a68 9509      	ICALL
000a69 3050      	CPI  R21,0
000a6a f009      	BREQ _0x20000B1
000a6b 5051      	SUBI R21,LOW(1)
                 _0x20000B1:
                 _0x20000AB:
000a6c 5031      	SUBI R19,LOW(1)
                +
000a6d 89e8     +LDD R30 , Y + 16
000a6e 89f9     +LDD R31 , Y + 16 + 1
000a6f 896a     +LDD R22 , Y + 16 + 2
000a70 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
                +
000a71 85aa     +LDD R26 , Y + 10
000a72 85bb     +LDD R27 , Y + 10 + 1
000a73 858c     +LDD R24 , Y + 10 + 2
000a74 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
000a75 940e 0efe 	CALL __MODD21U
                +
000a77 87ea     +STD Y + 10 , R30
000a78 87fb     +STD Y + 10 + 1 , R31
000a79 876c     +STD Y + 10 + 2 , R22
000a7a 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
000a7b 89ec      	LDD  R30,Y+20
                +
000a7c 89a8     +LDD R26 , Y + 16
000a7d 89b9     +LDD R27 , Y + 16 + 1
000a7e 898a     +LDD R24 , Y + 16 + 2
000a7f 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
000a80 27ff      	CLR  R31
000a81 2766      	CLR  R22
000a82 2777      	CLR  R23
000a83 940e 0ecd 	CALL __DIVD21U
                +
000a85 8be8     +STD Y + 16 , R30
000a86 8bf9     +STD Y + 16 + 1 , R31
000a87 8b6a     +STD Y + 16 + 2 , R22
000a88 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
000a89 940e 0f43 	CALL __CPD10
000a8b f009      	BREQ _0x200009F
000a8c cf8c      	RJMP _0x200009E
                 _0x200009F:
                 _0x200009C:
000a8d ff00      	SBRS R16,0
000a8e c00d      	RJMP _0x20000B2
                 _0x20000B3:
000a8f 3050      	CPI  R21,0
000a90 f059      	BREQ _0x20000B5
000a91 5051      	SUBI R21,LOW(1)
000a92 e2e0      	LDI  R30,LOW(32)
000a93 93ea      	ST   -Y,R30
000a94 81ef      	LDD  R30,Y+7
000a95 85f8      	LDD  R31,Y+7+1
000a96 93fa      	ST   -Y,R31
000a97 93ea      	ST   -Y,R30
000a98 85eb      	LDD  R30,Y+11
000a99 85fc      	LDD  R31,Y+11+1
000a9a 9509      	ICALL
000a9b cff3      	RJMP _0x20000B3
                 _0x20000B5:
                 _0x20000B2:
                 _0x20000B6:
                 _0x2000054:
                 _0x200010E:
000a9c e010      	LDI  R17,LOW(0)
                 _0x2000035:
000a9d cd1d      	RJMP _0x2000030
                 _0x2000032:
000a9e 81ae      	LDD  R26,Y+6
000a9f 81bf      	LDD  R27,Y+6+1
000aa0 940e 0f0e 	CALL __GETW1P
000aa2 940e 0f4e 	CALL __LOADLOCR6
000aa4 96ef      	ADIW R28,63
000aa5 966f      	ADIW R28,31
000aa6 9508      	RET
                 _sprintf:
000aa7 92ff      	PUSH R15
000aa8 2ef8      	MOV  R15,R24
000aa9 9726      	SBIW R28,6
000aaa 940e 0f49 	CALL __SAVELOCR4
000aac 01de      	MOVW R26,R28
000aad 961c      	ADIW R26,12
000aae 940e 0e7e 	CALL __ADDW2R15
000ab0 940e 0f0e 	CALL __GETW1P
000ab2 9730      	SBIW R30,0
000ab3 f419      	BRNE _0x20000B7
000ab4 efef      	LDI  R30,LOW(65535)
000ab5 efff      	LDI  R31,HIGH(65535)
000ab6 c029      	RJMP _0x20A0005
                 _0x20000B7:
000ab7 01de      	MOVW R26,R28
000ab8 9616      	ADIW R26,6
000ab9 940e 0e7e 	CALL __ADDW2R15
000abb 018d      	MOVW R16,R26
000abc 01de      	MOVW R26,R28
000abd 961c      	ADIW R26,12
000abe 940e 0e7e 	CALL __ADDW2R15
000ac0 940e 0f0e 	CALL __GETW1P
000ac2 83ee      	STD  Y+6,R30
000ac3 83ff      	STD  Y+6+1,R31
000ac4 e0e0      	LDI  R30,LOW(0)
000ac5 87e8      	STD  Y+8,R30
000ac6 87e9      	STD  Y+8+1,R30
000ac7 01de      	MOVW R26,R28
000ac8 961a      	ADIW R26,10
000ac9 940e 0e7e 	CALL __ADDW2R15
000acb 940e 0f0e 	CALL __GETW1P
000acd 93fa      	ST   -Y,R31
000ace 93ea      	ST   -Y,R30
000acf 931a      	ST   -Y,R17
000ad0 930a      	ST   -Y,R16
000ad1 efeb      	LDI  R30,LOW(_put_buff_G100)
000ad2 e0f5      	LDI  R31,HIGH(_put_buff_G100)
000ad3 93fa      	ST   -Y,R31
000ad4 93ea      	ST   -Y,R30
000ad5 01fe      	MOVW R30,R28
000ad6 963a      	ADIW R30,10
000ad7 93fa      	ST   -Y,R31
000ad8 93ea      	ST   -Y,R30
000ad9 dcc6      	RCALL __print_G100
000ada 019f      	MOVW R18,R30
000adb 81ae      	LDD  R26,Y+6
000adc 81bf      	LDD  R27,Y+6+1
000add e0e0      	LDI  R30,LOW(0)
000ade 93ec      	ST   X,R30
000adf 01f9      	MOVW R30,R18
                 _0x20A0005:
000ae0 940e 0f50 	CALL __LOADLOCR4
000ae2 962a      	ADIW R28,10
000ae3 90ff      	POP  R15
000ae4 9508      	RET
                 _printf:
000ae5 92ff      	PUSH R15
000ae6 2ef8      	MOV  R15,R24
000ae7 9726      	SBIW R28,6
000ae8 931a      	ST   -Y,R17
000ae9 930a      	ST   -Y,R16
000aea 01de      	MOVW R26,R28
000aeb 9614      	ADIW R26,4
000aec 940e 0e7e 	CALL __ADDW2R15
000aee 018d      	MOVW R16,R26
000aef e0e0      	LDI  R30,LOW(0)
000af0 83ec      	STD  Y+4,R30
000af1 83ed      	STD  Y+4+1,R30
000af2 83ee      	STD  Y+6,R30
000af3 83ef      	STD  Y+6+1,R30
000af4 01de      	MOVW R26,R28
000af5 9618      	ADIW R26,8
000af6 940e 0e7e 	CALL __ADDW2R15
000af8 940e 0f0e 	CALL __GETW1P
000afa 93fa      	ST   -Y,R31
000afb 93ea      	ST   -Y,R30
000afc 931a      	ST   -Y,R17
000afd 930a      	ST   -Y,R16
000afe eeee      	LDI  R30,LOW(_put_usart_G100)
000aff e0f5      	LDI  R31,HIGH(_put_usart_G100)
000b00 93fa      	ST   -Y,R31
000b01 93ea      	ST   -Y,R30
000b02 01fe      	MOVW R30,R28
000b03 9638      	ADIW R30,8
000b04 93fa      	ST   -Y,R31
000b05 93ea      	ST   -Y,R30
000b06 dc99      	RCALL __print_G100
000b07 8119      	LDD  R17,Y+1
000b08 8108      	LDD  R16,Y+0
000b09 9628      	ADIW R28,8
000b0a 90ff      	POP  R15
000b0b 9508      	RET
                 
                 	.CSEG
                 _memset:
000b0c 81b9          ldd  r27,y+1
000b0d 81a8          ld   r26,y
000b0e 9610          adiw r26,0
000b0f f031          breq memset1
000b10 81fc          ldd  r31,y+4
000b11 81eb          ldd  r30,y+3
000b12 816a          ldd  r22,y+2
                 memset0:
000b13 9361          st   z+,r22
000b14 9711          sbiw r26,1
000b15 f7e9          brne memset0
                 memset1:
000b16 81eb          ldd  r30,y+3
000b17 81fc          ldd  r31,y+4
                 _0x20A0004:
000b18 9625      	ADIW R28,5
000b19 9508      	RET
                 _strcpyf:
000b1a 91e9          ld   r30,y+
000b1b 91f9          ld   r31,y+
000b1c 91a9          ld   r26,y+
000b1d 91b9          ld   r27,y+
000b1e 01cd          movw r24,r26
                 strcpyf0:
000b1f 9005      	lpm  r0,z+
000b20 920d          st   x+,r0
000b21 2000          tst  r0
000b22 f7e1          brne strcpyf0
000b23 01fc          movw r30,r24
000b24 9508          ret
                 _strlen:
000b25 91a9          ld   r26,y+
000b26 91b9          ld   r27,y+
000b27 27ee          clr  r30
000b28 27ff          clr  r31
                 strlen0:
000b29 916d          ld   r22,x+
000b2a 2366          tst  r22
000b2b f011          breq strlen1
000b2c 9631          adiw r30,1
000b2d cffb          rjmp strlen0
                 strlen1:
000b2e 9508          ret
                 _strlenf:
000b2f 27aa          clr  r26
000b30 27bb          clr  r27
000b31 91e9          ld   r30,y+
000b32 91f9          ld   r31,y+
                 strlenf0:
000b33 9005      	lpm  r0,z+
000b34 2000          tst  r0
000b35 f011          breq strlenf1
000b36 9611          adiw r26,1
000b37 cffb          rjmp strlenf0
                 strlenf1:
000b38 01fd          movw r30,r26
000b39 9508          ret
                 _strstr:
000b3a 81aa          ldd  r26,y+2
000b3b 81bb          ldd  r27,y+3
000b3c 01cd          movw r24,r26
                 strstr0:
000b3d 81e8          ld   r30,y
000b3e 81f9          ldd  r31,y+1
                 strstr1:
000b3f 9171          ld   r23,z+
000b40 2377          tst  r23
000b41 f411          brne strstr2
000b42 01fc          movw r30,r24
000b43 c009          rjmp strstr3
                 strstr2:
000b44 916d          ld   r22,x+
000b45 1767          cp   r22,r23
000b46 f3c1          breq strstr1
000b47 9601          adiw r24,1
000b48 01dc          movw r26,r24
000b49 2366          tst  r22
000b4a f791          brne strstr0
000b4b 27ee          clr  r30
000b4c 27ff          clr  r31
                 strstr3:
000b4d 940c 0cd3 	JMP  _0x20A0001
                 
                 	.CSEG
                 _ftoa:
000b4f 9724      	SBIW R28,4
000b50 e0e0      	LDI  R30,LOW(0)
000b51 83e8      	ST   Y,R30
000b52 83e9      	STD  Y+1,R30
000b53 83ea      	STD  Y+2,R30
000b54 e3ef      	LDI  R30,LOW(63)
000b55 83eb      	STD  Y+3,R30
000b56 931a      	ST   -Y,R17
000b57 930a      	ST   -Y,R16
000b58 85eb      	LDD  R30,Y+11
000b59 85fc      	LDD  R31,Y+11+1
000b5a 3fef      	CPI  R30,LOW(0xFFFF)
000b5b efaf      	LDI  R26,HIGH(0xFFFF)
000b5c 07fa      	CPC  R31,R26
000b5d f459      	BRNE _0x204000D
000b5e 81ee      	LDD  R30,Y+6
000b5f 81ff      	LDD  R31,Y+6+1
000b60 93fa      	ST   -Y,R31
000b61 93ea      	ST   -Y,R30
                +
000b62 ebe2     +LDI R30 , LOW ( 2 * _0x2040000 + ( 0 ) )
000b63 e0f1     +LDI R31 , HIGH ( 2 * _0x2040000 + ( 0 ) )
                 	__POINTW1FN _0x2040000,0
000b64 93fa      	ST   -Y,R31
000b65 93ea      	ST   -Y,R30
000b66 940e 0b1a 	CALL _strcpyf
000b68 c105      	RJMP _0x20A0003
                 _0x204000D:
000b69 3fef      	CPI  R30,LOW(0x7FFF)
000b6a e7af      	LDI  R26,HIGH(0x7FFF)
000b6b 07fa      	CPC  R31,R26
000b6c f459      	BRNE _0x204000C
000b6d 81ee      	LDD  R30,Y+6
000b6e 81ff      	LDD  R31,Y+6+1
000b6f 93fa      	ST   -Y,R31
000b70 93ea      	ST   -Y,R30
                +
000b71 ebe3     +LDI R30 , LOW ( 2 * _0x2040000 + ( 1 ) )
000b72 e0f1     +LDI R31 , HIGH ( 2 * _0x2040000 + ( 1 ) )
                 	__POINTW1FN _0x2040000,1
000b73 93fa      	ST   -Y,R31
000b74 93ea      	ST   -Y,R30
000b75 940e 0b1a 	CALL _strcpyf
000b77 c0f6      	RJMP _0x20A0003
                 _0x204000C:
000b78 85ac      	LDD  R26,Y+12
000b79 23aa      	TST  R26
000b7a f492      	BRPL _0x204000F
                +
000b7b 85e9     +LDD R30 , Y + 9
000b7c 85fa     +LDD R31 , Y + 9 + 1
000b7d 856b     +LDD R22 , Y + 9 + 2
000b7e 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
000b7f 940e 0cd5 	CALL __ANEGF1
                +
000b81 87e9     +STD Y + 9 , R30
000b82 87fa     +STD Y + 9 + 1 , R31
000b83 876b     +STD Y + 9 + 2 , R22
000b84 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000b85 81ae      	LDD  R26,Y+6
000b86 81bf      	LDD  R27,Y+6+1
000b87 9611      	ADIW R26,1
000b88 83ae      	STD  Y+6,R26
000b89 83bf      	STD  Y+6+1,R27
000b8a 9711      	SBIW R26,1
000b8b e2ed      	LDI  R30,LOW(45)
000b8c 93ec      	ST   X,R30
                 _0x204000F:
000b8d 85a8      	LDD  R26,Y+8
000b8e 30a7      	CPI  R26,LOW(0x7)
000b8f f010      	BRLO _0x2040010
000b90 e0e6      	LDI  R30,LOW(6)
000b91 87e8      	STD  Y+8,R30
                 _0x2040010:
000b92 8518      	LDD  R17,Y+8
                 _0x2040011:
000b93 2fe1      	MOV  R30,R17
000b94 5011      	SUBI R17,1
000b95 30e0      	CPI  R30,0
000b96 f079      	BREQ _0x2040013
                +
000b97 81aa     +LDD R26 , Y + 2
000b98 81bb     +LDD R27 , Y + 2 + 1
000b99 818c     +LDD R24 , Y + 2 + 2
000b9a 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000b9b eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000b9c ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000b9d ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000b9e e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000b9f 940e 0dcb 	CALL __MULF12
                +
000ba1 83ea     +STD Y + 2 , R30
000ba2 83fb     +STD Y + 2 + 1 , R31
000ba3 836c     +STD Y + 2 + 2 , R22
000ba4 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000ba5 cfed      	RJMP _0x2040011
                 _0x2040013:
                +
000ba6 81ea     +LDD R30 , Y + 2
000ba7 81fb     +LDD R31 , Y + 2 + 1
000ba8 816c     +LDD R22 , Y + 2 + 2
000ba9 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000baa 85a9     +LDD R26 , Y + 9
000bab 85ba     +LDD R27 , Y + 9 + 1
000bac 858b     +LDD R24 , Y + 9 + 2
000bad 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000bae 940e 0d7b 	CALL __ADDF12
                +
000bb0 87e9     +STD Y + 9 , R30
000bb1 87fa     +STD Y + 9 + 1 , R31
000bb2 876b     +STD Y + 9 + 2 , R22
000bb3 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000bb4 e010      	LDI  R17,LOW(0)
                +
000bb5 e0e0     +LDI R30 , LOW ( 0x3F800000 )
000bb6 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
000bb7 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
000bb8 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
                +
000bb9 83ea     +STD Y + 2 , R30
000bba 83fb     +STD Y + 2 + 1 , R31
000bbb 836c     +STD Y + 2 + 2 , R22
000bbc 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                 _0x2040014:
                +
000bbd 81ea     +LDD R30 , Y + 2
000bbe 81fb     +LDD R31 , Y + 2 + 1
000bbf 816c     +LDD R22 , Y + 2 + 2
000bc0 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
                +
000bc1 85a9     +LDD R26 , Y + 9
000bc2 85ba     +LDD R27 , Y + 9 + 1
000bc3 858b     +LDD R24 , Y + 9 + 2
000bc4 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000bc5 940e 0e5e 	CALL __CMPF12
000bc7 f080      	BRLO _0x2040016
                +
000bc8 81aa     +LDD R26 , Y + 2
000bc9 81bb     +LDD R27 , Y + 2 + 1
000bca 818c     +LDD R24 , Y + 2 + 2
000bcb 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000bcc e0e0     +LDI R30 , LOW ( 0x41200000 )
000bcd e0f0     +LDI R31 , HIGH ( 0x41200000 )
000bce e260     +LDI R22 , BYTE3 ( 0x41200000 )
000bcf e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000bd0 940e 0dcb 	CALL __MULF12
                +
000bd2 83ea     +STD Y + 2 , R30
000bd3 83fb     +STD Y + 2 + 1 , R31
000bd4 836c     +STD Y + 2 + 2 , R22
000bd5 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
000bd6 5f1f      	SUBI R17,-LOW(1)
000bd7 cfe5      	RJMP _0x2040014
                 _0x2040016:
000bd8 3010      	CPI  R17,0
000bd9 f449      	BRNE _0x2040017
000bda 81ae      	LDD  R26,Y+6
000bdb 81bf      	LDD  R27,Y+6+1
000bdc 9611      	ADIW R26,1
000bdd 83ae      	STD  Y+6,R26
000bde 83bf      	STD  Y+6+1,R27
000bdf 9711      	SBIW R26,1
000be0 e3e0      	LDI  R30,LOW(48)
000be1 93ec      	ST   X,R30
000be2 c049      	RJMP _0x2040018
                 _0x2040017:
                 _0x2040019:
000be3 2fe1      	MOV  R30,R17
000be4 5011      	SUBI R17,1
000be5 30e0      	CPI  R30,0
000be6 f411      	BRNE PC+3
000be7 940c 0c2c 	JMP _0x204001B
                +
000be9 81aa     +LDD R26 , Y + 2
000bea 81bb     +LDD R27 , Y + 2 + 1
000beb 818c     +LDD R24 , Y + 2 + 2
000bec 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
                +
000bed eced     +LDI R30 , LOW ( 0x3DCCCCCD )
000bee ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
000bef ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
000bf0 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
000bf1 940e 0dcb 	CALL __MULF12
                +
000bf3 e0a0     +LDI R26 , LOW ( 0x3F000000 )
000bf4 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
000bf5 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
000bf6 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
000bf7 940e 0d7b 	CALL __ADDF12
000bf9 940e 0f31 	CALL __PUTPARD1
000bfb 940e 0cbe 	CALL _floor
                +
000bfd 83ea     +STD Y + 2 , R30
000bfe 83fb     +STD Y + 2 + 1 , R31
000bff 836c     +STD Y + 2 + 2 , R22
000c00 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
                +
000c01 85a9     +LDD R26 , Y + 9
000c02 85ba     +LDD R27 , Y + 9 + 1
000c03 858b     +LDD R24 , Y + 9 + 2
000c04 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000c05 940e 0e19 	CALL __DIVF21
000c07 940e 0d08 	CALL __CFD1U
000c09 2f0e      	MOV  R16,R30
000c0a 81ae      	LDD  R26,Y+6
000c0b 81bf      	LDD  R27,Y+6+1
000c0c 9611      	ADIW R26,1
000c0d 83ae      	STD  Y+6,R26
000c0e 83bf      	STD  Y+6+1,R27
000c0f 9711      	SBIW R26,1
000c10 2fe0      	MOV  R30,R16
000c11 5de0      	SUBI R30,-LOW(48)
000c12 93ec      	ST   X,R30
000c13 2fe0      	MOV  R30,R16
000c14 e0f0      	LDI  R31,0
                +
000c15 81aa     +LDD R26 , Y + 2
000c16 81bb     +LDD R27 , Y + 2 + 1
000c17 818c     +LDD R24 , Y + 2 + 2
000c18 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
000c19 940e 0e95 	CALL __CWD1
000c1b 940e 0d41 	CALL __CDF1
000c1d 940e 0dcb 	CALL __MULF12
                +
000c1f 85a9     +LDD R26 , Y + 9
000c20 85ba     +LDD R27 , Y + 9 + 1
000c21 858b     +LDD R24 , Y + 9 + 2
000c22 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000c23 940e 0f36 	CALL __SWAPD12
000c25 940e 0d74 	CALL __SUBF12
                +
000c27 87e9     +STD Y + 9 , R30
000c28 87fa     +STD Y + 9 + 1 , R31
000c29 876b     +STD Y + 9 + 2 , R22
000c2a 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000c2b cfb7      	RJMP _0x2040019
                 _0x204001B:
                 _0x2040018:
000c2c 85e8      	LDD  R30,Y+8
000c2d 30e0      	CPI  R30,0
000c2e f409      	BRNE _0x204001C
000c2f c03a      	RJMP _0x20A0002
                 _0x204001C:
000c30 81ae      	LDD  R26,Y+6
000c31 81bf      	LDD  R27,Y+6+1
000c32 9611      	ADIW R26,1
000c33 83ae      	STD  Y+6,R26
000c34 83bf      	STD  Y+6+1,R27
000c35 9711      	SBIW R26,1
000c36 e2ee      	LDI  R30,LOW(46)
000c37 93ec      	ST   X,R30
                 _0x204001D:
000c38 85e8      	LDD  R30,Y+8
000c39 50e1      	SUBI R30,LOW(1)
000c3a 87e8      	STD  Y+8,R30
000c3b 5fef      	SUBI R30,-LOW(1)
000c3c f169      	BREQ _0x204001F
                +
000c3d 85a9     +LDD R26 , Y + 9
000c3e 85ba     +LDD R27 , Y + 9 + 1
000c3f 858b     +LDD R24 , Y + 9 + 2
000c40 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
                +
000c41 e0e0     +LDI R30 , LOW ( 0x41200000 )
000c42 e0f0     +LDI R31 , HIGH ( 0x41200000 )
000c43 e260     +LDI R22 , BYTE3 ( 0x41200000 )
000c44 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
000c45 940e 0dcb 	CALL __MULF12
                +
000c47 87e9     +STD Y + 9 , R30
000c48 87fa     +STD Y + 9 + 1 , R31
000c49 876b     +STD Y + 9 + 2 , R22
000c4a 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000c4b 940e 0d08 	CALL __CFD1U
000c4d 2f0e      	MOV  R16,R30
000c4e 81ae      	LDD  R26,Y+6
000c4f 81bf      	LDD  R27,Y+6+1
000c50 9611      	ADIW R26,1
000c51 83ae      	STD  Y+6,R26
000c52 83bf      	STD  Y+6+1,R27
000c53 9711      	SBIW R26,1
000c54 2fe0      	MOV  R30,R16
000c55 5de0      	SUBI R30,-LOW(48)
000c56 93ec      	ST   X,R30
000c57 2fe0      	MOV  R30,R16
000c58 e0f0      	LDI  R31,0
                +
000c59 85a9     +LDD R26 , Y + 9
000c5a 85ba     +LDD R27 , Y + 9 + 1
000c5b 858b     +LDD R24 , Y + 9 + 2
000c5c 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
000c5d 940e 0e95 	CALL __CWD1
000c5f 940e 0d41 	CALL __CDF1
000c61 940e 0f36 	CALL __SWAPD12
000c63 940e 0d74 	CALL __SUBF12
                +
000c65 87e9     +STD Y + 9 , R30
000c66 87fa     +STD Y + 9 + 1 , R31
000c67 876b     +STD Y + 9 + 2 , R22
000c68 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
000c69 cfce      	RJMP _0x204001D
                 _0x204001F:
                 _0x20A0002:
000c6a 81ae      	LDD  R26,Y+6
000c6b 81bf      	LDD  R27,Y+6+1
000c6c e0e0      	LDI  R30,LOW(0)
000c6d 93ec      	ST   X,R30
                 _0x20A0003:
000c6e 8119      	LDD  R17,Y+1
000c6f 8108      	LDD  R16,Y+0
000c70 962d      	ADIW R28,13
000c71 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 _rand:
000c72 91e0 0b3f 	LDS  R30,__seed_G102
000c74 91f0 0b40 	LDS  R31,__seed_G102+1
000c76 9160 0b41 	LDS  R22,__seed_G102+2
000c78 9170 0b42 	LDS  R23,__seed_G102+3
                +
000c7a e6ad     +LDI R26 , LOW ( 0x41C64E6D )
000c7b e4be     +LDI R27 , HIGH ( 0x41C64E6D )
000c7c ec86     +LDI R24 , BYTE3 ( 0x41C64E6D )
000c7d e491     +LDI R25 , BYTE4 ( 0x41C64E6D )
                 	__GETD2N 0x41C64E6D
000c7e 940e 0e9a 	CALL __MULD12U
                +
000c80 59ee     +SUBI R30 , LOW ( - 30562 )
000c81 48f8     +SBCI R31 , HIGH ( - 30562 )
000c82 4f6f     +SBCI R22 , BYTE3 ( - 30562 )
000c83 4f7f     +SBCI R23 , BYTE4 ( - 30562 )
                 	__ADDD1N 30562
000c84 93e0 0b3f 	STS  __seed_G102,R30
000c86 93f0 0b40 	STS  __seed_G102+1,R31
000c88 9360 0b41 	STS  __seed_G102+2,R22
000c8a 9370 0b42 	STS  __seed_G102+3,R23
000c8c 01fb      	movw r30,r22
000c8d 77ff      	andi r31,0x7F
000c8e 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _ftrunc:
000c8f 817b         ldd  r23,y+3
000c90 816a         ldd  r22,y+2
000c91 81f9         ldd  r31,y+1
000c92 81e8         ld   r30,y
000c93 fb77         bst  r23,7
000c94 0f77         lsl  r23
000c95 fd67         sbrc r22,7
000c96 6071         sbr  r23,1
000c97 2f97         mov  r25,r23
000c98 579e         subi r25,0x7e
000c99 f081         breq __ftrunc0
000c9a f078         brcs __ftrunc0
000c9b 3198         cpi  r25,24
000c9c f490         brsh __ftrunc1
000c9d 27aa         clr  r26
000c9e 27bb         clr  r27
000c9f 2788         clr  r24
                 __ftrunc2:
000ca0 9408         sec
000ca1 9587         ror  r24
000ca2 95b7         ror  r27
000ca3 95a7         ror  r26
000ca4 959a         dec  r25
000ca5 f7d1         brne __ftrunc2
000ca6 23ea         and  r30,r26
000ca7 23fb         and  r31,r27
000ca8 2368         and  r22,r24
000ca9 c005         rjmp __ftrunc1
                 __ftrunc0:
000caa 94e8         clt
000cab 2777         clr  r23
000cac 27ee         clr  r30
000cad 27ff         clr  r31
000cae 2766         clr  r22
                 __ftrunc1:
000caf 776f         cbr  r22,0x80
000cb0 9576         lsr  r23
000cb1 f408         brcc __ftrunc3
000cb2 6860         sbr  r22,0x80
                 __ftrunc3:
000cb3 f977         bld  r23,7
000cb4 91a9         ld   r26,y+
000cb5 91b9         ld   r27,y+
000cb6 9189         ld   r24,y+
000cb7 9199         ld   r25,y+
000cb8 17ea         cp   r30,r26
000cb9 07fb         cpc  r31,r27
000cba 0768         cpc  r22,r24
000cbb 0779         cpc  r23,r25
000cbc fb97         bst  r25,7
000cbd 9508         ret
                 _floor:
000cbe 940e 0f22 	CALL __GETD1S0
000cc0 940e 0f31 	CALL __PUTPARD1
000cc2 940e 0c8f 	CALL _ftrunc
000cc4 940e 0f2c 	CALL __PUTD1S0
000cc6 f419          brne __floor1
                 __floor0:
000cc7 940e 0f22 	CALL __GETD1S0
000cc9 c009      	RJMP _0x20A0001
                 __floor1:
000cca f7e6          brtc __floor0
000ccb 940e 0f22 	CALL __GETD1S0
                +
000ccd e0a0     +LDI R26 , LOW ( 0x3F800000 )
000cce e0b0     +LDI R27 , HIGH ( 0x3F800000 )
000ccf e880     +LDI R24 , BYTE3 ( 0x3F800000 )
000cd0 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
000cd1 940e 0d74 	CALL __SUBF12
                 _0x20A0001:
000cd3 9624      	ADIW R28,4
000cd4 9508      	RET
                 
                 	.DSEG
                 _dev_id_chk:
000a28           	.BYTE 0x5
                 _temperature:
000a2d           	.BYTE 0x4
                 _humidity:
000a31           	.BYTE 0x4
                 _current3k:
000a35           	.BYTE 0x4
                 _current5k:
000a39           	.BYTE 0x4
                 _rx_buffer0:
000a3d           	.BYTE 0x64
                 _rx_buffer1:
000aa1           	.BYTE 0x64
                 _rx_buffer2:
000b05           	.BYTE 0x32
                 _rx_wr_index2:
000b37           	.BYTE 0x1
                 _rx_rd_index2:
000b38           	.BYTE 0x1
                 _rx_counter2:
000b39           	.BYTE 0x1
                 _poutput:
000b3a           	.BYTE 0x1
                 _milSecCounter:
000b3b           	.BYTE 0x4
                 __seed_G102:
000b3f           	.BYTE 0x4
                 
                 	.CSEG
                 
                 	.CSEG
                 __ANEGF1:
000cd5 9730      	SBIW R30,0
000cd6 4060      	SBCI R22,0
000cd7 4070      	SBCI R23,0
000cd8 f009      	BREQ __ANEGF10
000cd9 5870      	SUBI R23,0x80
                 __ANEGF10:
000cda 9508      	RET
                 
                 __ROUND_REPACK:
000cdb 2355      	TST  R21
000cdc f442      	BRPL __REPACK
000cdd 3850      	CPI  R21,0x80
000cde f411      	BRNE __ROUND_REPACK0
000cdf ffe0      	SBRS R30,0
000ce0 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
000ce1 9631      	ADIW R30,1
000ce2 1f69      	ADC  R22,R25
000ce3 1f79      	ADC  R23,R25
000ce4 f06b      	BRVS __REPACK1
                 
                 __REPACK:
000ce5 e850      	LDI  R21,0x80
000ce6 2757      	EOR  R21,R23
000ce7 f411      	BRNE __REPACK0
000ce8 935f      	PUSH R21
000ce9 c0cf      	RJMP __ZERORES
                 __REPACK0:
000cea 3f5f      	CPI  R21,0xFF
000ceb f031      	BREQ __REPACK1
000cec 0f66      	LSL  R22
000ced 0c00      	LSL  R0
000cee 9557      	ROR  R21
000cef 9567      	ROR  R22
000cf0 2f75      	MOV  R23,R21
000cf1 9508      	RET
                 __REPACK1:
000cf2 935f      	PUSH R21
000cf3 2000      	TST  R0
000cf4 f00a      	BRMI __REPACK2
000cf5 c0cf      	RJMP __MAXRES
                 __REPACK2:
000cf6 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
000cf7 e850      	LDI  R21,0x80
000cf8 2e19      	MOV  R1,R25
000cf9 2215      	AND  R1,R21
000cfa 0f88      	LSL  R24
000cfb 1f99      	ROL  R25
000cfc 2795      	EOR  R25,R21
000cfd 0f55      	LSL  R21
000cfe 9587      	ROR  R24
                 
                 __UNPACK1:
000cff e850      	LDI  R21,0x80
000d00 2e07      	MOV  R0,R23
000d01 2205      	AND  R0,R21
000d02 0f66      	LSL  R22
000d03 1f77      	ROL  R23
000d04 2775      	EOR  R23,R21
000d05 0f55      	LSL  R21
000d06 9567      	ROR  R22
000d07 9508      	RET
                 
                 __CFD1U:
000d08 9468      	SET
000d09 c001      	RJMP __CFD1U0
                 __CFD1:
000d0a 94e8      	CLT
                 __CFD1U0:
000d0b 935f      	PUSH R21
000d0c dff2      	RCALL __UNPACK1
000d0d 3870      	CPI  R23,0x80
000d0e f018      	BRLO __CFD10
000d0f 3f7f      	CPI  R23,0xFF
000d10 f408      	BRCC __CFD10
000d11 c0a7      	RJMP __ZERORES
                 __CFD10:
000d12 e156      	LDI  R21,22
000d13 1b57      	SUB  R21,R23
000d14 f4aa      	BRPL __CFD11
000d15 9551      	NEG  R21
000d16 3058      	CPI  R21,8
000d17 f40e      	BRTC __CFD19
000d18 3059      	CPI  R21,9
                 __CFD19:
000d19 f030      	BRLO __CFD17
000d1a efef      	SER  R30
000d1b efff      	SER  R31
000d1c ef6f      	SER  R22
000d1d e77f      	LDI  R23,0x7F
000d1e f977      	BLD  R23,7
000d1f c01a      	RJMP __CFD15
                 __CFD17:
000d20 2777      	CLR  R23
000d21 2355      	TST  R21
000d22 f0b9      	BREQ __CFD15
                 __CFD18:
000d23 0fee      	LSL  R30
000d24 1fff      	ROL  R31
000d25 1f66      	ROL  R22
000d26 1f77      	ROL  R23
000d27 955a      	DEC  R21
000d28 f7d1      	BRNE __CFD18
000d29 c010      	RJMP __CFD15
                 __CFD11:
000d2a 2777      	CLR  R23
                 __CFD12:
000d2b 3058      	CPI  R21,8
000d2c f028      	BRLO __CFD13
000d2d 2fef      	MOV  R30,R31
000d2e 2ff6      	MOV  R31,R22
000d2f 2f67      	MOV  R22,R23
000d30 5058      	SUBI R21,8
000d31 cff9      	RJMP __CFD12
                 __CFD13:
000d32 2355      	TST  R21
000d33 f031      	BREQ __CFD15
                 __CFD14:
000d34 9576      	LSR  R23
000d35 9567      	ROR  R22
000d36 95f7      	ROR  R31
000d37 95e7      	ROR  R30
000d38 955a      	DEC  R21
000d39 f7d1      	BRNE __CFD14
                 __CFD15:
000d3a 2000      	TST  R0
000d3b f40a      	BRPL __CFD16
000d3c d14a      	RCALL __ANEGD1
                 __CFD16:
000d3d 915f      	POP  R21
000d3e 9508      	RET
                 
                 __CDF1U:
000d3f 9468      	SET
000d40 c001      	RJMP __CDF1U0
                 __CDF1:
000d41 94e8      	CLT
                 __CDF1U0:
000d42 9730      	SBIW R30,0
000d43 4060      	SBCI R22,0
000d44 4070      	SBCI R23,0
000d45 f0b1      	BREQ __CDF10
000d46 2400      	CLR  R0
000d47 f026      	BRTS __CDF11
000d48 2377      	TST  R23
000d49 f412      	BRPL __CDF11
000d4a 9400      	COM  R0
000d4b d13b      	RCALL __ANEGD1
                 __CDF11:
000d4c 2e17      	MOV  R1,R23
000d4d e17e      	LDI  R23,30
000d4e 2011      	TST  R1
                 __CDF12:
000d4f f032      	BRMI __CDF13
000d50 957a      	DEC  R23
000d51 0fee      	LSL  R30
000d52 1fff      	ROL  R31
000d53 1f66      	ROL  R22
000d54 1c11      	ROL  R1
000d55 cff9      	RJMP __CDF12
                 __CDF13:
000d56 2fef      	MOV  R30,R31
000d57 2ff6      	MOV  R31,R22
000d58 2d61      	MOV  R22,R1
000d59 935f      	PUSH R21
000d5a df8a      	RCALL __REPACK
000d5b 915f      	POP  R21
                 __CDF10:
000d5c 9508      	RET
                 
                 __SWAPACC:
000d5d 934f      	PUSH R20
000d5e 01af      	MOVW R20,R30
000d5f 01fd      	MOVW R30,R26
000d60 01da      	MOVW R26,R20
000d61 01ab      	MOVW R20,R22
000d62 01bc      	MOVW R22,R24
000d63 01ca      	MOVW R24,R20
000d64 2d40      	MOV  R20,R0
000d65 2c01      	MOV  R0,R1
000d66 2e14      	MOV  R1,R20
000d67 914f      	POP  R20
000d68 9508      	RET
                 
                 __UADD12:
000d69 0fea      	ADD  R30,R26
000d6a 1ffb      	ADC  R31,R27
000d6b 1f68      	ADC  R22,R24
000d6c 9508      	RET
                 
                 __NEGMAN1:
000d6d 95e0      	COM  R30
000d6e 95f0      	COM  R31
000d6f 9560      	COM  R22
000d70 5fef      	SUBI R30,-1
000d71 4fff      	SBCI R31,-1
000d72 4f6f      	SBCI R22,-1
000d73 9508      	RET
                 
                 __SUBF12:
000d74 935f      	PUSH R21
000d75 df81      	RCALL __UNPACK
000d76 3890      	CPI  R25,0x80
000d77 f171      	BREQ __ADDF129
000d78 e850      	LDI  R21,0x80
000d79 2615      	EOR  R1,R21
                 
000d7a c004      	RJMP __ADDF120
                 
                 __ADDF12:
000d7b 935f      	PUSH R21
000d7c df7a      	RCALL __UNPACK
000d7d 3890      	CPI  R25,0x80
000d7e f139      	BREQ __ADDF129
                 
                 __ADDF120:
000d7f 3870      	CPI  R23,0x80
000d80 f121      	BREQ __ADDF128
                 __ADDF121:
000d81 2f57      	MOV  R21,R23
000d82 1b59      	SUB  R21,R25
000d83 f12b      	BRVS __ADDF1211
000d84 f412      	BRPL __ADDF122
000d85 dfd7      	RCALL __SWAPACC
000d86 cffa      	RJMP __ADDF121
                 __ADDF122:
000d87 3158      	CPI  R21,24
000d88 f018      	BRLO __ADDF123
000d89 27aa      	CLR  R26
000d8a 27bb      	CLR  R27
000d8b 2788      	CLR  R24
                 __ADDF123:
000d8c 3058      	CPI  R21,8
000d8d f028      	BRLO __ADDF124
000d8e 2fab      	MOV  R26,R27
000d8f 2fb8      	MOV  R27,R24
000d90 2788      	CLR  R24
000d91 5058      	SUBI R21,8
000d92 cff9      	RJMP __ADDF123
                 __ADDF124:
000d93 2355      	TST  R21
000d94 f029      	BREQ __ADDF126
                 __ADDF125:
000d95 9586      	LSR  R24
000d96 95b7      	ROR  R27
000d97 95a7      	ROR  R26
000d98 955a      	DEC  R21
000d99 f7d9      	BRNE __ADDF125
                 __ADDF126:
000d9a 2d50      	MOV  R21,R0
000d9b 2551      	EOR  R21,R1
000d9c f072      	BRMI __ADDF127
000d9d dfcb      	RCALL __UADD12
000d9e f438      	BRCC __ADDF129
000d9f 9567      	ROR  R22
000da0 95f7      	ROR  R31
000da1 95e7      	ROR  R30
000da2 9573      	INC  R23
000da3 f413      	BRVC __ADDF129
000da4 c020      	RJMP __MAXRES
                 __ADDF128:
000da5 dfb7      	RCALL __SWAPACC
                 __ADDF129:
000da6 df3e      	RCALL __REPACK
000da7 915f      	POP  R21
000da8 9508      	RET
                 __ADDF1211:
000da9 f7d8      	BRCC __ADDF128
000daa cffb      	RJMP __ADDF129
                 __ADDF127:
000dab 1bea      	SUB  R30,R26
000dac 0bfb      	SBC  R31,R27
000dad 0b68      	SBC  R22,R24
000dae f051      	BREQ __ZERORES
000daf f410      	BRCC __ADDF1210
000db0 9400      	COM  R0
000db1 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
000db2 2366      	TST  R22
000db3 f392      	BRMI __ADDF129
000db4 0fee      	LSL  R30
000db5 1fff      	ROL  R31
000db6 1f66      	ROL  R22
000db7 957a      	DEC  R23
000db8 f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
000db9 27ee      	CLR  R30
000dba 27ff      	CLR  R31
000dbb 2766      	CLR  R22
000dbc 2777      	CLR  R23
000dbd 915f      	POP  R21
000dbe 9508      	RET
                 
                 __MINRES:
000dbf efef      	SER  R30
000dc0 efff      	SER  R31
000dc1 e76f      	LDI  R22,0x7F
000dc2 ef7f      	SER  R23
000dc3 915f      	POP  R21
000dc4 9508      	RET
                 
                 __MAXRES:
000dc5 efef      	SER  R30
000dc6 efff      	SER  R31
000dc7 e76f      	LDI  R22,0x7F
000dc8 e77f      	LDI  R23,0x7F
000dc9 915f      	POP  R21
000dca 9508      	RET
                 
                 __MULF12:
000dcb 935f      	PUSH R21
000dcc df2a      	RCALL __UNPACK
000dcd 3870      	CPI  R23,0x80
000dce f351      	BREQ __ZERORES
000dcf 3890      	CPI  R25,0x80
000dd0 f341      	BREQ __ZERORES
000dd1 2401      	EOR  R0,R1
000dd2 9408      	SEC
000dd3 1f79      	ADC  R23,R25
000dd4 f423      	BRVC __MULF124
000dd5 f31c      	BRLT __ZERORES
                 __MULF125:
000dd6 2000      	TST  R0
000dd7 f33a      	BRMI __MINRES
000dd8 cfec      	RJMP __MAXRES
                 __MULF124:
000dd9 920f      	PUSH R0
000dda 931f      	PUSH R17
000ddb 932f      	PUSH R18
000ddc 933f      	PUSH R19
000ddd 934f      	PUSH R20
000dde 2711      	CLR  R17
000ddf 2722      	CLR  R18
000de0 2799      	CLR  R25
000de1 9f68      	MUL  R22,R24
000de2 01a0      	MOVW R20,R0
000de3 9f8f      	MUL  R24,R31
000de4 2d30      	MOV  R19,R0
000de5 0d41      	ADD  R20,R1
000de6 1f59      	ADC  R21,R25
000de7 9f6b      	MUL  R22,R27
000de8 0d30      	ADD  R19,R0
000de9 1d41      	ADC  R20,R1
000dea 1f59      	ADC  R21,R25
000deb 9f8e      	MUL  R24,R30
000dec d027      	RCALL __MULF126
000ded 9fbf      	MUL  R27,R31
000dee d025      	RCALL __MULF126
000def 9f6a      	MUL  R22,R26
000df0 d023      	RCALL __MULF126
000df1 9fbe      	MUL  R27,R30
000df2 d01d      	RCALL __MULF127
000df3 9faf      	MUL  R26,R31
000df4 d01b      	RCALL __MULF127
000df5 9fae      	MUL  R26,R30
000df6 0d11      	ADD  R17,R1
000df7 1f29      	ADC  R18,R25
000df8 1f39      	ADC  R19,R25
000df9 1f49      	ADC  R20,R25
000dfa 1f59      	ADC  R21,R25
000dfb 2fe3      	MOV  R30,R19
000dfc 2ff4      	MOV  R31,R20
000dfd 2f65      	MOV  R22,R21
000dfe 2f52      	MOV  R21,R18
000dff 914f      	POP  R20
000e00 913f      	POP  R19
000e01 912f      	POP  R18
000e02 911f      	POP  R17
000e03 900f      	POP  R0
000e04 2366      	TST  R22
000e05 f02a      	BRMI __MULF122
000e06 0f55      	LSL  R21
000e07 1fee      	ROL  R30
000e08 1fff      	ROL  R31
000e09 1f66      	ROL  R22
000e0a c002      	RJMP __MULF123
                 __MULF122:
000e0b 9573      	INC  R23
000e0c f24b      	BRVS __MULF125
                 __MULF123:
000e0d decd      	RCALL __ROUND_REPACK
000e0e 915f      	POP  R21
000e0f 9508      	RET
                 
                 __MULF127:
000e10 0d10      	ADD  R17,R0
000e11 1d21      	ADC  R18,R1
000e12 1f39      	ADC  R19,R25
000e13 c002      	RJMP __MULF128
                 __MULF126:
000e14 0d20      	ADD  R18,R0
000e15 1d31      	ADC  R19,R1
                 __MULF128:
000e16 1f49      	ADC  R20,R25
000e17 1f59      	ADC  R21,R25
000e18 9508      	RET
                 
                 __DIVF21:
000e19 935f      	PUSH R21
000e1a dedc      	RCALL __UNPACK
000e1b 3870      	CPI  R23,0x80
000e1c f421      	BRNE __DIVF210
000e1d 2011      	TST  R1
                 __DIVF211:
000e1e f40a      	BRPL __DIVF219
000e1f cf9f      	RJMP __MINRES
                 __DIVF219:
000e20 cfa4      	RJMP __MAXRES
                 __DIVF210:
000e21 3890      	CPI  R25,0x80
000e22 f409      	BRNE __DIVF218
                 __DIVF217:
000e23 cf95      	RJMP __ZERORES
                 __DIVF218:
000e24 2401      	EOR  R0,R1
000e25 9408      	SEC
000e26 0b97      	SBC  R25,R23
000e27 f41b      	BRVC __DIVF216
000e28 f3d4      	BRLT __DIVF217
000e29 2000      	TST  R0
000e2a cff3      	RJMP __DIVF211
                 __DIVF216:
000e2b 2f79      	MOV  R23,R25
000e2c 931f      	PUSH R17
000e2d 932f      	PUSH R18
000e2e 933f      	PUSH R19
000e2f 934f      	PUSH R20
000e30 2411      	CLR  R1
000e31 2711      	CLR  R17
000e32 2722      	CLR  R18
000e33 2733      	CLR  R19
000e34 2744      	CLR  R20
000e35 2755      	CLR  R21
000e36 e290      	LDI  R25,32
                 __DIVF212:
000e37 17ae      	CP   R26,R30
000e38 07bf      	CPC  R27,R31
000e39 0786      	CPC  R24,R22
000e3a 0741      	CPC  R20,R17
000e3b f030      	BRLO __DIVF213
000e3c 1bae      	SUB  R26,R30
000e3d 0bbf      	SBC  R27,R31
000e3e 0b86      	SBC  R24,R22
000e3f 0b41      	SBC  R20,R17
000e40 9408      	SEC
000e41 c001      	RJMP __DIVF214
                 __DIVF213:
000e42 9488      	CLC
                 __DIVF214:
000e43 1f55      	ROL  R21
000e44 1f22      	ROL  R18
000e45 1f33      	ROL  R19
000e46 1c11      	ROL  R1
000e47 1faa      	ROL  R26
000e48 1fbb      	ROL  R27
000e49 1f88      	ROL  R24
000e4a 1f44      	ROL  R20
000e4b 959a      	DEC  R25
000e4c f751      	BRNE __DIVF212
000e4d 01f9      	MOVW R30,R18
000e4e 2d61      	MOV  R22,R1
000e4f 914f      	POP  R20
000e50 913f      	POP  R19
000e51 912f      	POP  R18
000e52 911f      	POP  R17
000e53 2366      	TST  R22
000e54 f032      	BRMI __DIVF215
000e55 0f55      	LSL  R21
000e56 1fee      	ROL  R30
000e57 1fff      	ROL  R31
000e58 1f66      	ROL  R22
000e59 957a      	DEC  R23
000e5a f243      	BRVS __DIVF217
                 __DIVF215:
000e5b de7f      	RCALL __ROUND_REPACK
000e5c 915f      	POP  R21
000e5d 9508      	RET
                 
                 __CMPF12:
000e5e 2399      	TST  R25
000e5f f09a      	BRMI __CMPF120
000e60 2377      	TST  R23
000e61 f042      	BRMI __CMPF121
000e62 1797      	CP   R25,R23
000e63 f048      	BRLO __CMPF122
000e64 f429      	BRNE __CMPF121
000e65 17ae      	CP   R26,R30
000e66 07bf      	CPC  R27,R31
000e67 0786      	CPC  R24,R22
000e68 f020      	BRLO __CMPF122
000e69 f031      	BREQ __CMPF123
                 __CMPF121:
000e6a 9498      	CLZ
000e6b 9488      	CLC
000e6c 9508      	RET
                 __CMPF122:
000e6d 9498      	CLZ
000e6e 9408      	SEC
000e6f 9508      	RET
                 __CMPF123:
000e70 9418      	SEZ
000e71 9488      	CLC
000e72 9508      	RET
                 __CMPF120:
000e73 2377      	TST  R23
000e74 f7c2      	BRPL __CMPF122
000e75 1797      	CP   R25,R23
000e76 f398      	BRLO __CMPF121
000e77 f7a9      	BRNE __CMPF122
000e78 17ea      	CP   R30,R26
000e79 07fb      	CPC  R31,R27
000e7a 0768      	CPC  R22,R24
000e7b f388      	BRLO __CMPF122
000e7c f399      	BREQ __CMPF123
000e7d cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
000e7e 2400      	CLR  R0
000e7f 0daf      	ADD  R26,R15
000e80 1db0      	ADC  R27,R0
000e81 9508      	RET
                 
                 __SUBD12:
000e82 1bea      	SUB  R30,R26
000e83 0bfb      	SBC  R31,R27
000e84 0b68      	SBC  R22,R24
000e85 0b79      	SBC  R23,R25
000e86 9508      	RET
                 
                 __ANEGD1:
000e87 95f0      	COM  R31
000e88 9560      	COM  R22
000e89 9570      	COM  R23
000e8a 95e1      	NEG  R30
000e8b 4fff      	SBCI R31,-1
000e8c 4f6f      	SBCI R22,-1
000e8d 4f7f      	SBCI R23,-1
000e8e 9508      	RET
                 
                 __CBD1:
000e8f 2ffe      	MOV  R31,R30
000e90 0fff      	ADD  R31,R31
000e91 0bff      	SBC  R31,R31
000e92 2f6f      	MOV  R22,R31
000e93 2f7f      	MOV  R23,R31
000e94 9508      	RET
                 
                 __CWD1:
000e95 2f6f      	MOV  R22,R31
000e96 0f66      	ADD  R22,R22
000e97 0b66      	SBC  R22,R22
000e98 2f76      	MOV  R23,R22
000e99 9508      	RET
                 
                 __MULD12U:
000e9a 9f7a      	MUL  R23,R26
000e9b 2d70      	MOV  R23,R0
000e9c 9f6b      	MUL  R22,R27
000e9d 0d70      	ADD  R23,R0
000e9e 9ff8      	MUL  R31,R24
000e9f 0d70      	ADD  R23,R0
000ea0 9fe9      	MUL  R30,R25
000ea1 0d70      	ADD  R23,R0
000ea2 9f6a      	MUL  R22,R26
000ea3 2d60      	MOV  R22,R0
000ea4 0d71      	ADD  R23,R1
000ea5 9ffb      	MUL  R31,R27
000ea6 0d60      	ADD  R22,R0
000ea7 1d71      	ADC  R23,R1
000ea8 9fe8      	MUL  R30,R24
000ea9 0d60      	ADD  R22,R0
000eaa 1d71      	ADC  R23,R1
000eab 2788      	CLR  R24
000eac 9ffa      	MUL  R31,R26
000ead 2df0      	MOV  R31,R0
000eae 0d61      	ADD  R22,R1
000eaf 1f78      	ADC  R23,R24
000eb0 9feb      	MUL  R30,R27
000eb1 0df0      	ADD  R31,R0
000eb2 1d61      	ADC  R22,R1
000eb3 1f78      	ADC  R23,R24
000eb4 9fea      	MUL  R30,R26
000eb5 2de0      	MOV  R30,R0
000eb6 0df1      	ADD  R31,R1
000eb7 1f68      	ADC  R22,R24
000eb8 1f78      	ADC  R23,R24
000eb9 9508      	RET
                 
                 __DIVB21U:
000eba 2400      	CLR  R0
000ebb e098      	LDI  R25,8
                 __DIVB21U1:
000ebc 0faa      	LSL  R26
000ebd 1c00      	ROL  R0
000ebe 1a0e      	SUB  R0,R30
000ebf f410      	BRCC __DIVB21U2
000ec0 0e0e      	ADD  R0,R30
000ec1 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
000ec2 60a1      	SBR  R26,1
                 __DIVB21U3:
000ec3 959a      	DEC  R25
000ec4 f7b9      	BRNE __DIVB21U1
000ec5 2fea      	MOV  R30,R26
000ec6 2da0      	MOV  R26,R0
000ec7 9508      	RET
                 
                 __DIVB21:
000ec8 d039      	RCALL __CHKSIGNB
000ec9 dff0      	RCALL __DIVB21U
000eca f40e      	BRTC __DIVB211
000ecb 95e1      	NEG  R30
                 __DIVB211:
000ecc 9508      	RET
                 
                 __DIVD21U:
000ecd 933f      	PUSH R19
000ece 934f      	PUSH R20
000ecf 935f      	PUSH R21
000ed0 2400      	CLR  R0
000ed1 2411      	CLR  R1
000ed2 2744      	CLR  R20
000ed3 2755      	CLR  R21
000ed4 e230      	LDI  R19,32
                 __DIVD21U1:
000ed5 0faa      	LSL  R26
000ed6 1fbb      	ROL  R27
000ed7 1f88      	ROL  R24
000ed8 1f99      	ROL  R25
000ed9 1c00      	ROL  R0
000eda 1c11      	ROL  R1
000edb 1f44      	ROL  R20
000edc 1f55      	ROL  R21
000edd 1a0e      	SUB  R0,R30
000ede 0a1f      	SBC  R1,R31
000edf 0b46      	SBC  R20,R22
000ee0 0b57      	SBC  R21,R23
000ee1 f428      	BRCC __DIVD21U2
000ee2 0e0e      	ADD  R0,R30
000ee3 1e1f      	ADC  R1,R31
000ee4 1f46      	ADC  R20,R22
000ee5 1f57      	ADC  R21,R23
000ee6 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
000ee7 60a1      	SBR  R26,1
                 __DIVD21U3:
000ee8 953a      	DEC  R19
000ee9 f759      	BRNE __DIVD21U1
000eea 01fd      	MOVW R30,R26
000eeb 01bc      	MOVW R22,R24
000eec 01d0      	MOVW R26,R0
000eed 01ca      	MOVW R24,R20
000eee 915f      	POP  R21
000eef 914f      	POP  R20
000ef0 913f      	POP  R19
000ef1 9508      	RET
                 
                 __MODB21:
000ef2 94e8      	CLT
000ef3 ffa7      	SBRS R26,7
000ef4 c002      	RJMP __MODB211
000ef5 95a1      	NEG  R26
000ef6 9468      	SET
                 __MODB211:
000ef7 fde7      	SBRC R30,7
000ef8 95e1      	NEG  R30
000ef9 dfc0      	RCALL __DIVB21U
000efa 2fea      	MOV  R30,R26
000efb f40e      	BRTC __MODB212
000efc 95e1      	NEG  R30
                 __MODB212:
000efd 9508      	RET
                 
                 __MODD21U:
000efe dfce      	RCALL __DIVD21U
000eff 01fd      	MOVW R30,R26
000f00 01bc      	MOVW R22,R24
000f01 9508      	RET
                 
                 __CHKSIGNB:
000f02 94e8      	CLT
000f03 ffe7      	SBRS R30,7
000f04 c002      	RJMP __CHKSB1
000f05 95e1      	NEG  R30
000f06 9468      	SET
                 __CHKSB1:
000f07 ffa7      	SBRS R26,7
000f08 c004      	RJMP __CHKSB2
000f09 95a1      	NEG  R26
000f0a f800      	BLD  R0,0
000f0b 9403      	INC  R0
000f0c fa00      	BST  R0,0
                 __CHKSB2:
000f0d 9508      	RET
                 
                 __GETW1P:
000f0e 91ed      	LD   R30,X+
000f0f 91fc      	LD   R31,X
000f10 9711      	SBIW R26,1
000f11 9508      	RET
                 
                 __GETD1P:
000f12 91ed      	LD   R30,X+
000f13 91fd      	LD   R31,X+
000f14 916d      	LD   R22,X+
000f15 917c      	LD   R23,X
000f16 9713      	SBIW R26,3
000f17 9508      	RET
                 
                 __GETD1P_INC:
000f18 91ed      	LD   R30,X+
000f19 91fd      	LD   R31,X+
000f1a 916d      	LD   R22,X+
000f1b 917d      	LD   R23,X+
000f1c 9508      	RET
                 
                 __PUTDP1_DEC:
000f1d 937e      	ST   -X,R23
000f1e 936e      	ST   -X,R22
000f1f 93fe      	ST   -X,R31
000f20 93ee      	ST   -X,R30
000f21 9508      	RET
                 
                 __GETD1S0:
000f22 81e8      	LD   R30,Y
000f23 81f9      	LDD  R31,Y+1
000f24 816a      	LDD  R22,Y+2
000f25 817b      	LDD  R23,Y+3
000f26 9508      	RET
                 
                 __GETD2S0:
000f27 81a8      	LD   R26,Y
000f28 81b9      	LDD  R27,Y+1
000f29 818a      	LDD  R24,Y+2
000f2a 819b      	LDD  R25,Y+3
000f2b 9508      	RET
                 
                 __PUTD1S0:
000f2c 83e8      	ST   Y,R30
000f2d 83f9      	STD  Y+1,R31
000f2e 836a      	STD  Y+2,R22
000f2f 837b      	STD  Y+3,R23
000f30 9508      	RET
                 
                 __PUTPARD1:
000f31 937a      	ST   -Y,R23
000f32 936a      	ST   -Y,R22
000f33 93fa      	ST   -Y,R31
000f34 93ea      	ST   -Y,R30
000f35 9508      	RET
                 
                 __SWAPD12:
000f36 2e18      	MOV  R1,R24
000f37 2f86      	MOV  R24,R22
000f38 2d61      	MOV  R22,R1
000f39 2e19      	MOV  R1,R25
000f3a 2f97      	MOV  R25,R23
000f3b 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
000f3c 2e1b      	MOV  R1,R27
000f3d 2fbf      	MOV  R27,R31
000f3e 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000f3f 2e1a      	MOV  R1,R26
000f40 2fae      	MOV  R26,R30
000f41 2de1      	MOV  R30,R1
000f42 9508      	RET
                 
                 __CPD10:
000f43 9730      	SBIW R30,0
000f44 4060      	SBCI R22,0
000f45 4070      	SBCI R23,0
000f46 9508      	RET
                 
                 __SAVELOCR6:
000f47 935a      	ST   -Y,R21
                 __SAVELOCR5:
000f48 934a      	ST   -Y,R20
                 __SAVELOCR4:
000f49 933a      	ST   -Y,R19
                 __SAVELOCR3:
000f4a 932a      	ST   -Y,R18
                 __SAVELOCR2:
000f4b 931a      	ST   -Y,R17
000f4c 930a      	ST   -Y,R16
000f4d 9508      	RET
                 
                 __LOADLOCR6:
000f4e 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000f4f 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000f50 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000f51 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000f52 8119      	LDD  R17,Y+1
000f53 8108      	LD   R16,Y
000f54 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 :  96 r1 :  40 r2 :   0 r3 :   4 r4 :   4 r5 :   5 r6 :   5 r7 :   5 
r8 :   5 r9 :   4 r10:   4 r11:   4 r12:   6 r13:   6 r14:   4 r15:   7 
r16:  81 r17:  83 r18:  52 r19:  37 r20:  50 r21:  91 r22: 233 r23: 218 
r24: 102 r25:  83 r26: 287 r27: 128 r28:  75 r29:   1 r30: 835 r31: 423 
x  :  82 y  : 729 z  :  50 
Registers used: 34 out of 35 (97.1%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  29 add   :  23 
adiw  :  69 and   :   5 andi  :  14 asr   :   0 bclr  :   0 bld   :   3 
brbc  :   0 brbs  :   0 brcc  :   8 brcs  :   1 break :   0 breq  :  56 
brge  :   1 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :  25 
brlt  :   3 brmi  :  11 brne  :  81 brpl  :   9 brsh  :   9 brtc  :   4 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   3 call  : 194 
cbi   :   0 cbr   :   2 clc   :   3 clh   :   0 cli   :   4 cln   :   0 
clr   :  78 cls   :   0 clt   :   5 clv   :   0 clz   :   2 com   :   8 
cp    :  20 cpc   :  30 cpi   :  92 cpse  :   0 dec   :  13 des   :   0 
eicall:   0 eijmp :   0 elpm  :   0 eor   :   7 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :  11 ijmp  :   0 in    :   5 inc   :   9 jmp   :  74 
ld    : 104 ldd   : 322 ldi   : 486 lds   :  89 lpm   :  12 lsl   :  14 
lsr   :   3 mov   : 138 movw  :  94 mul   :  21 muls  :   0 mulsu :   0 
neg   :   9 nop   :   0 or    :   0 ori   :   8 out   :  18 pop   :  23 
push  :  23 rcall :  32 ret   :  61 reti  :   3 rjmp  : 139 rol   :  32 
ror   :  15 sbc   :  14 sbci  :  50 sbi   :   3 sbic  :   0 sbis  :   0 
sbiw  :  56 sbr   :   4 sbrc  :   4 sbrs  :  20 sec   :   5 seh   :   0 
sei   :   4 sen   :   0 ser   :   8 ses   :   0 set   :   4 sev   :   0 
sez   :   1 sleep :   0 spm   :   0 st    : 237 std   : 187 sts   :  75 
sub   :   7 subi  :  80 swap  :   0 tst   :  28 wdr   :   1 
Instructions used: 78 out of 119 (65.5%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x001eaa   7570    280   7850  262144   3.0%
[.dseg] 0x000200 0x000b43      0    323    323    8192   3.9%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 12 warnings
